<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>蚂蚁背大象 – Spring Framework</title><link>/spring-framework/</link><description>Recent content in Spring Framework on 蚂蚁背大象</description><generator>Hugo -- gohugo.io</generator><atom:link href="/spring-framework/index.xml" rel="self" type="application/rss+xml"/><item><title>Spring-Framework: Spring如何自定义注解</title><link>/spring-framework/custom-component/spring-custom-annotation/</link><pubDate>Wed, 28 Aug 2019 00:00:00 +0000</pubDate><guid>/spring-framework/custom-component/spring-custom-annotation/</guid><description>
&lt;h3 id="1-自定义注解分类">1 自定义注解分类&lt;/h3></description></item><item><title>Spring-Framework: Spring注解源码解析之-Autowired和Value</title><link>/spring-framework/annotation-source-analysis/autowired-value/</link><pubDate>Tue, 14 May 2019 00:00:00 +0000</pubDate><guid>/spring-framework/annotation-source-analysis/autowired-value/</guid><description>
&lt;h3 id="1-autowired和value注解">1. @Autowired和@Value注解&lt;/h3>
&lt;blockquote>
&lt;p>源码版本Spring5.2.X&lt;/p>
&lt;/blockquote>
&lt;p>首先来看一下这两个注解的源码&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">({&lt;/span>&lt;span style="color:#000">ElementType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">CONSTRUCTOR&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ElementType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">METHOD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ElementType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PARAMETER&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ElementType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">FIELD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ElementType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">ANNOTATION_TYPE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">})&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Retention&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RetentionPolicy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">RUNTIME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Documented&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@interface&lt;/span> &lt;span style="color:#000">Autowired&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">required&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">({&lt;/span>&lt;span style="color:#000">ElementType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">FIELD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ElementType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">METHOD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ElementType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PARAMETER&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ElementType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">ANNOTATION_TYPE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">})&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Retention&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RetentionPolicy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">RUNTIME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Documented&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@interface&lt;/span> &lt;span style="color:#000">Value&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">value&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>从上面的源码可以看出来两个注解都可以用于 &lt;strong>&lt;code>方法、参数、变量、注解类型&lt;/code>&lt;/strong> 。&lt;strong>&lt;code>@Autowired&lt;/code>&lt;/strong> 还能用于构造函数。通过这个类使用的地方可以看出来，主要用于类的内部。所以主要是通过 &lt;strong>&lt;code>BeanPostProcessor&lt;/code>&lt;/strong> 来处理这两个注解。&lt;/p>
&lt;h3 id="2-注解处理类autowiredannotationbeanpostprocessor源码解析">2. 注解处理类AutowiredAnnotationBeanPostProcessor源码解析&lt;/h3>
&lt;p>首先看 &lt;em>&lt;strong>&lt;code>AutowiredAnnotationBeanPostProcessor&lt;/code>&lt;/strong>&lt;/em> 是如何注入到上下文中的。通过代码发现主要是有 &lt;strong>&lt;code>AnnotationConfigUtils#registerAnnotationConfigProcessors&lt;/code>&lt;/strong> 注入到上下文中的。看一下源码&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">registerAnnotationConfigProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">BeanDefinitionRegistry&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">source&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">DefaultListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">unwrapDefaultListableBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//注入AutowiredAnnotationBeanPostProcessor类的定义
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AUTOWIRED_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">def&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AutowiredAnnotationBeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">source&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanDefs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registerPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">AUTOWIRED_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">beanDefs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>下面来看一下 &lt;strong>&lt;code>AutowiredAnnotationBeanPostProcessor&lt;/code>&lt;/strong> 源码：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">AutowiredAnnotationBeanPostProcessor&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">InstantiationAwareBeanPostProcessorAdapter&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">MergedBeanDefinitionPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">PriorityOrdered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanFactoryAware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>&lt;code>AutowiredAnnotationBeanPostProcessor&lt;/code>&lt;/strong> 继承了 &lt;strong>&lt;code>InstantiationAwareBeanPostProcessorAdapter&lt;/code>&lt;/strong> 类（这个类是BeanPostProcessor的实现）。然后还实现了其他的三个接口。&lt;/p>
&lt;p>首先来看一下这个类的构造函数：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">AutowiredAnnotationBeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">autowiredAnnotationTypes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Autowired&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">autowiredAnnotationTypes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Value&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">autowiredAnnotationTypes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Annotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;)&lt;/span>
&lt;span style="color:#000">ClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">forName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;javax.inject.Inject&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">AutowiredAnnotationBeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()));&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">trace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;JSR-330 &amp;#39;javax.inject.Inject&amp;#39; annotation found and supported for autowiring&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ClassNotFoundException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// JSR-330 API not available - simply skip.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>从这个构造函数可以看出来主要处理 &lt;strong>@Autowired、@Value、javax.inject.Inject&lt;/strong> 。 第三个是javax。这就是对 JSR-330 标准的支持。通过调用 &lt;strong>&lt;code>postProcessProperties&lt;/code>&lt;/strong> 方法来处理以上的三个注解&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">PropertyValues&lt;/span> &lt;span style="color:#000">postProcessProperties&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PropertyValues&lt;/span> &lt;span style="color:#000">pvs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">InjectionMetadata&lt;/span> &lt;span style="color:#000">metadata&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">findAutowiringMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">pvs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">inject&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">pvs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanCreationException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanCreationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Injection of autowired dependencies failed&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">pvs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>主要是通过 &lt;strong>&lt;code>findAutowiringMetadata&lt;/code>&lt;/strong> 方法来获取自动注入元数据。以及通过 &lt;strong>&lt;code>InjectionMetadata#inject&lt;/code>&lt;/strong> 方法来注入元数据。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#000">InjectionMetadata&lt;/span> &lt;span style="color:#000">findAutowiringMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">PropertyValues&lt;/span> &lt;span style="color:#000">pvs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Fall back to class name as cache key, for backwards compatibility with custom callers.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">cacheKey&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">StringUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">hasLength&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">?&lt;/span> &lt;span style="color:#000">beanName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 从缓存中获取注入元数据
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">InjectionMetadata&lt;/span> &lt;span style="color:#000">metadata&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">injectionMetadataCache&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否需要刷新
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">InjectionMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">needsRefresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">synchronized&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">injectionMetadataCache&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">metadata&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">injectionMetadataCache&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">InjectionMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">needsRefresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadata&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">clear&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">pvs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//创建注入元数据
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">metadata&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">buildAutowiringMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//缓存注入元数据
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">injectionMetadataCache&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>源代码可以看出来主要是有两个方法：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>InjectionMetadata.needsRefresh&lt;/strong>&lt;/p>
&lt;p>判断从缓存中获取的注入元数据是否需要刷新：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">needsRefresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">InjectionMetadata&lt;/span> &lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadata&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">targetClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>buildAutowiringMetadata&lt;/strong>&lt;/p>
&lt;p>创建自动注入的元数据&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>下面来看一下 &lt;strong>&lt;code>buildAutowiringMetadata&lt;/code>&lt;/strong> 的源码是如何创建自动注入元数据的。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#000">InjectionMetadata&lt;/span> &lt;span style="color:#000">buildAutowiringMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否包含 @Autowired @Value 或者@Inject注解
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">AnnotationUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isCandidateClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">autowiredAnnotationTypes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">InjectionMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">EMPTY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">InjectionMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">InjectedElement&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">elements&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">targetClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">do&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">InjectionMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">InjectedElement&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">currElements&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//通过反射获取targetClass
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ReflectionUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">doWithLocalFields&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">targetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">field&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&amp;gt;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">MergedAnnotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">ann&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">findAutowiredAnnotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ann&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Modifier&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isStatic&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getModifiers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isInfoEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">info&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Autowired annotation is not supported on static fields: &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">required&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">determineRequiredStatus&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ann&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">currElements&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AutowiredFieldElement&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">required&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">});&lt;/span>
&lt;span style="color:#000">ReflectionUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">doWithLocalMethods&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">targetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">method&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&amp;gt;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Method&lt;/span> &lt;span style="color:#000">bridgedMethod&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">BridgeMethodResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">findBridgedMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">BridgeMethodResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isVisibilityBridgeMethodPair&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">bridgedMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">MergedAnnotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">ann&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">findAutowiredAnnotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bridgedMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ann&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">equals&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMostSpecificMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Modifier&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isStatic&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getModifiers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isInfoEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">info&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Autowired annotation is not supported on static methods: &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getParameterCount&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">0&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isInfoEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">info&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Autowired annotation should only be used on methods with parameters: &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">required&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">determineRequiredStatus&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ann&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">PropertyDescriptor&lt;/span> &lt;span style="color:#000">pd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">BeanUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">findPropertyForMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bridgedMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">currElements&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AutowiredMethodElement&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">required&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">pd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">});&lt;/span>
&lt;span style="color:#000">elements&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAll&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">0&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">currElements&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">targetClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">targetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getSuperclass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">while&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">targetClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">targetClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">InjectionMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">forElements&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">elements&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过上面的代码可以看出来处理主要分成了两类：&lt;/p>
&lt;ul>
&lt;li>处理类的字段上面的注解&lt;/li>
&lt;li>处理方法上面注解&lt;/li>
&lt;/ul>
&lt;p>根据处理的不同的数据创建两个不同的自动注入元素。字段的创建 &lt;strong>&lt;code>AutowiredFieldElement&lt;/code>&lt;/strong> 、 方法上面的注解创建 &lt;strong>&lt;code>AutowiredMethodElement&lt;/code>&lt;/strong> 。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">AutowiredFieldElement&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">InjectionMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">InjectedElement&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">AutowiredMethodElement&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">InjectionMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">InjectedElement&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>以上两个都是内部类。都继承了 &lt;strong>&lt;code>InjectionMetadata.InjectedElement&lt;/code>&lt;/strong> 的接口。根据不同类型创建好以后通过调用：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">InjectionMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">forElements&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">elements&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建返回数据。也就是调用 &lt;strong>&lt;code>findAutowiringMetadata&lt;/code>&lt;/strong> 方法中的 &lt;strong>&lt;code>buildAutowiringMetadata&lt;/code>&lt;/strong> 方法。在前面分析过&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">processInjection&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeanCreationException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">clazz&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">InjectionMetadata&lt;/span> &lt;span style="color:#000">metadata&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">findAutowiringMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//这里就是注入数据。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">inject&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanCreationException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanCreationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Injection of autowired dependencies failed for class [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">clazz&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;]&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里可以分一下 &lt;em>&lt;strong>&lt;code>InjectionMetadata#inject&lt;/code>&lt;/strong>&lt;/em> 方法&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">inject&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">PropertyValues&lt;/span> &lt;span style="color:#000">pvs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Collection&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">InjectedElement&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">checkedElements&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">checkedElements&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">Collection&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">InjectedElement&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">elementsToIterate&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">checkedElements&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">?&lt;/span> &lt;span style="color:#000">checkedElements&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">injectedElements&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">elementsToIterate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">InjectedElement&lt;/span> &lt;span style="color:#000">element&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">elementsToIterate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTraceEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">trace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Processing injected element of bean &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">beanName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#39;: &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">element&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//主要是InjectedElement#inject来处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">element&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">inject&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">pvs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>最终是通过调用 &lt;em>&lt;strong>&lt;code>InjectedElement#inject&lt;/code>&lt;/strong>&lt;/em> 方法来注入。下面来分析一下 &lt;strong>AutowiredFieldElement&lt;/strong> 和 &lt;strong>AutowiredMethodElement&lt;/strong> 的实现。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">AutowiredFieldElement&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">InjectionMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">InjectedElement&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">required&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">volatile&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">cached&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">volatile&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">cachedFieldValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">AutowiredFieldElement&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Field&lt;/span> &lt;span style="color:#000">field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">required&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">super&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">required&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">required&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">inject&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">PropertyValues&lt;/span> &lt;span style="color:#000">pvs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Field&lt;/span> &lt;span style="color:#000">field&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">member&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">value&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//第一次不会进入因为cached默认为false
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">cached&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">value&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">resolvedCachedArgument&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">cachedFieldValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//创建一个依赖的描述
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">DependencyDescriptor&lt;/span> &lt;span style="color:#000">desc&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">DependencyDescriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">required&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">desc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setContainingClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">autowiredBeanNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LinkedHashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">1&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">state&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;No BeanFactory available&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取类型转换器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">TypeConverter&lt;/span> &lt;span style="color:#000">typeConverter&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTypeConverter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取值
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">value&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resolveDependency&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">desc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">autowiredBeanNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">typeConverter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">UnsatisfiedDependencyException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">InjectionPoint&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">),&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理依赖注入的数据
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">synchronized&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">cached&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">value&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">required&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">cachedFieldValue&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">desc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">registerDependentBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">autowiredBeanNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">autowiredBeanNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">size&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">1&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">autowiredBeanName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">autowiredBeanNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">iterator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">next&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">autowiredBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTypeMatch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">autowiredBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">cachedFieldValue&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ShortcutDependencyDescriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">desc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">autowiredBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">cachedFieldValue&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">cached&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//在Value不为空的情况下通过反射设置值
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">value&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ReflectionUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">makeAccessible&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">value&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>&lt;strong>&lt;code>AutowiredMethodElement&lt;/code>&lt;/strong>&lt;/em> 的实现和 &lt;em>&lt;strong>&lt;code>AutowiredFieldElement&lt;/code>&lt;/strong>&lt;/em> 实现差不多。&lt;/p>
&lt;h3 id="3-自定义拓展">3. 自定义拓展&lt;/h3>
&lt;p>自定义的拓展可以参考一下几个项目：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/mxsm/spring-sample/tree/master/mxsm-nacos">自定义的Nacos的拓展项目地址&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/nacos-group/nacos-spring-project">阿里巴巴的Nacos项目Spring拓展&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>第一个项目是自己写的，类似于@Value注解。&lt;/p></description></item><item><title>Spring-Framework: Spring ApplicationContext源码解析</title><link>/spring-framework/core-source-analysis/spring-applicationcontext/</link><pubDate>Tue, 06 Nov 2018 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/spring-applicationcontext/</guid><description>
&lt;h3 id="1-applicationcontext源码解析">1. ApplicationContext源码解析&lt;/h3>
&lt;p>在Spring框架的使用过程中见得最多的一个类就是 &lt;strong>&lt;code>ApplicationContext&lt;/code>&lt;/strong> 这个类贯穿了整个Spring的开发。下面来看一下该类的一些定义：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">ApplicationContext&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">EnvironmentCapable&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ListableBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">HierarchicalBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">MessageSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ApplicationEventPublisher&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ResourcePatternResolver&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">getId&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">getApplicationName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">getDisplayName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">long&lt;/span> &lt;span style="color:#000">getStartupDate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#000">ApplicationContext&lt;/span> &lt;span style="color:#000">getParent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">AutowireCapableBeanFactory&lt;/span> &lt;span style="color:#000">getAutowireCapableBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">IllegalStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>从定义可以看出来，继承了 &lt;strong>&lt;code>EnvironmentCapable&lt;/code>&lt;/strong> , &lt;strong>&lt;code>ListableBeanFactory&lt;/code>&lt;/strong> , &lt;strong>&lt;code>HierarchicalBeanFactory&lt;/code>&lt;/strong> ,
&lt;strong>&lt;code>MessageSource&lt;/code>&lt;/strong> , &lt;strong>&lt;code>ApplicationEventPublisher&lt;/code>&lt;/strong> , &lt;strong>&lt;code>ResourcePatternResolver&lt;/code>&lt;/strong> 继承都是一些基础的接口。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>BeanDefinitionRegistry&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>这个接口主要用来注册Bean的定义到Spring容器的上下文中，把Java类抽象为 &lt;em>&lt;strong>&lt;code>BeanDefinition&lt;/code>&lt;/strong>&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>SingletonBeanRegistry&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>Bean的单例模式注册&lt;/p>
&lt;ul>
&lt;li>&lt;strong>BeanFactory&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>主要用来获取Bean， BeanFactory实现了这BeanDefinitionRegistry和SingletonBeanRegistry两个，把Bean的定义和Bean的管理结合起来。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Environment&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>获取环境变量，和环境配置相关的&lt;/p>
&lt;ul>
&lt;li>&lt;strong>MessageSource&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>spring的国际化处理&lt;/p>
&lt;ul>
&lt;li>&lt;strong>ApplicationEventPublisher&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>Spring时间发布，和事件相关的接口&lt;/p>
&lt;ul>
&lt;li>&lt;strong>ResourcePatternResolver&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>资源的处理&lt;/p>
&lt;p>对于 &lt;strong>&lt;code>ApplicationContext&lt;/code>&lt;/strong> 的实现主要在 &lt;strong>Java&lt;/strong> 的开发项目中有四个：&lt;/p>
&lt;ul>
&lt;li>ClassPathXmlApplicationContext&lt;/li>
&lt;li>AnnotationConfigApplicationContext&lt;/li>
&lt;li>XmlWebApplicationContext&lt;/li>
&lt;li>AnnotationConfigWebApplicationContext&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-mermaid" data-lang="mermaid">graph LR
B[Application] --&amp;gt; C[XML]
B[Application] --&amp;gt; D[Annotation]
C --&amp;gt;C1[XmlWebApplicationContext]
C --&amp;gt;C2[ClassPathXmlApplicationContext]
D --&amp;gt;D1[AnnotationConfigApplicationContext]
D --&amp;gt;D2[AnnotationConfigWebApplicationContext]
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>上面的四个实现大体能够分成两大类：&lt;/p>
&lt;ul>
&lt;li>对以前传统的XML配置的支持从xml读取配置&lt;/li>
&lt;li>对注解的支持，主要通过注解来实现xml中的配置功能&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>下面看一下Application的继承关系：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/document/blob/master/image/Spring/Springframework/ApplicationContext.png?raw=true" alt="图">&lt;/p></description></item><item><title>Spring-Framework: AnnotationConfigApplicationContext源码解析</title><link>/spring-framework/core-source-analysis/annotationconfigapplicationcontext/</link><pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/annotationconfigapplicationcontext/</guid><description>
&lt;h3 id="1-annotationconfigapplicationcontext">1. AnnotationConfigApplicationContext&lt;/h3>
&lt;p>对于Application的实现是不同的，现在来分析一下常用的注解的实现。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">AnnotationConfigApplicationContext&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">GenericApplicationContext&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">AnnotationConfigRegistry&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//注解读取器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">AnnotatedBeanDefinitionReader&lt;/span> &lt;span style="color:#000">reader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//class path 扫码器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">ClassPathBeanDefinitionScanner&lt;/span> &lt;span style="color:#000">scanner&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//默认的构造方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">AnnotationConfigApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">reader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AnnotatedBeanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">scanner&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ClassPathBeanDefinitionScanner&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">AnnotationConfigApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">DefaultListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">super&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">reader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AnnotatedBeanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">scanner&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ClassPathBeanDefinitionScanner&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">AnnotationConfigApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;...&lt;/span> &lt;span style="color:#000">annotatedClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">register&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">annotatedClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">refresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置扫描包
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">AnnotationConfigApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span> &lt;span style="color:#000">basePackages&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">scan&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">basePackages&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">refresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurableEnvironment&lt;/span> &lt;span style="color:#000">environment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">super&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">environment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">reader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">environment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">scanner&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">environment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setBeanNameGenerator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanNameGenerator&lt;/span> &lt;span style="color:#000">beanNameGenerator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">reader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setBeanNameGenerator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanNameGenerator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">scanner&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setBeanNameGenerator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanNameGenerator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">getBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">registerSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">CONFIGURATION_BEAN_NAME_GENERATOR&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanNameGenerator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setScopeMetadataResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ScopeMetadataResolver&lt;/span> &lt;span style="color:#000">scopeMetadataResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">reader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setScopeMetadataResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">scopeMetadataResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">scanner&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setScopeMetadataResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">scopeMetadataResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">register&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;...&lt;/span> &lt;span style="color:#000">annotatedClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">notEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">annotatedClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;At least one annotated class must be specified&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">reader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">register&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">annotatedClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">scan&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span> &lt;span style="color:#000">basePackages&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">notEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">basePackages&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;At least one base package must be specified&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">scanner&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">scan&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">basePackages&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">registerBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Supplier&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">supplier&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanDefinitionCustomizer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span> &lt;span style="color:#000">customizers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">reader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">supplier&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">customizers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>从Spring的源码可以看出来，主要通过 this.scanner.scan(basePackages); 扫描对应的基础包下面的类来实现注入&lt;/p>
&lt;/blockquote>
&lt;h3 id="2-classpathbeandefinitionscanner源码的分析">2. ClassPathBeanDefinitionScanner源码的分析&lt;/h3>
&lt;p>通过这个类来扫描指定的class path下面的类的实例加载到Spring的容器中。并将符合过滤条件的类注册到IOC 容器内&lt;/p>
&lt;blockquote>
&lt;p>Mybatis 的Mapper注册器(ClassPathMapperScanner) 是同过继承ClassPathBeanDefinitionScanner,并且自定义了过滤器规则来实现的。具体的 调用过程并不会在这里说明，只是想在这里描述ClassPathBeanDefinitionScanner是如何 扫描 和 注册BeanDefinition的。&lt;/p>
&lt;/blockquote>
&lt;p>过滤器分为两种：&lt;/p>
&lt;ol>
&lt;li>包含过滤器&amp;ndash;includeFilters&lt;/li>
&lt;li>排除过滤器&amp;ndash;excludeFilters&lt;/li>
&lt;/ol>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>过滤器类型&lt;/th>
&lt;th>示例表达式&lt;/th>
&lt;th>备注&lt;/th>
&lt;th>Spring中的实现类&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>annotation&lt;/td>
&lt;td>org.springframework.stereotype.Component&lt;/td>
&lt;td>在目标组件的类型级别出现注解&lt;/td>
&lt;td>AnnotationTypeFilter&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>assignable&lt;/td>
&lt;td>指定的类或者接口&lt;/td>
&lt;td>在目标组件指定类火灾接口&lt;/td>
&lt;td>AssignableTypeFilter&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AspectJ type&lt;/td>
&lt;td>aspectj 表达式&lt;/td>
&lt;td>满足aspectj 表达式的&lt;/td>
&lt;td>AspectJTypeFilter&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>正则表达式&lt;/td>
&lt;td>org.example.Default.*&lt;/td>
&lt;td>类名满足正则表达式的&lt;/td>
&lt;td>RegexPatternTypeFilter&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>custom&lt;/td>
&lt;td>com.mxsm.MyTypeFilter&lt;/td>
&lt;td>继承Spring的TypeFilter接口&lt;/td>
&lt;td>TypeFilter&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>从上面可以看出来Spring实现的有四个：AnnotationTypeFilter、AssignableTypeFilter、AspectJTypeFilter、RegexPatternTypeFilter。可以根据需要自行拓展&lt;/p>
&lt;p>看一下默认的ClassPathBeanDefinitionScanner使用的默认includeFilters过滤器，(ClassPathScanningCandidateComponentProvider)&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">registerDefaultFilters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//注解Component是其中一个
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">includeFilters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AnnotationTypeFilter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Component&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">ClassLoader&lt;/span> &lt;span style="color:#000">cl&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">ClassPathScanningCandidateComponentProvider&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//以及下面对JSR的规范的支持，如果没有对应的注解直接略过也不报错
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">includeFilters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AnnotationTypeFilter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Annotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;)&lt;/span> &lt;span style="color:#000">ClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">forName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;javax.annotation.ManagedBean&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">cl&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)),&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">trace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;JSR-250 &amp;#39;javax.annotation.ManagedBean&amp;#39; found and supported for component scanning&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ClassNotFoundException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// JSR-250 1.1 API (as included in Java EE 6) not available - simply skip.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">includeFilters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AnnotationTypeFilter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Annotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;)&lt;/span> &lt;span style="color:#000">ClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">forName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;javax.inject.Named&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">cl&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)),&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">trace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;JSR-330 &amp;#39;javax.inject.Named&amp;#39; annotation found and supported for component scanning&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ClassNotFoundException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// JSR-330 API not available - simply skip.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>扫描主要使用scan方法&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">scan&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span> &lt;span style="color:#000">basePackages&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">beanCountAtScanStart&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinitionCount&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//扫码配置基本 packages下面的类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">doScan&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">basePackages&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 默认的情况下注入注解配置处理器--ConfigurationClassPostProcessor,
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//AutowiredAnnotationBeanPostProcessor等Spring.自定义的处理器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//下面会分析一下这个工具类的这个方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">includeAnnotationConfig&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerAnnotationConfigProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinitionCount&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#000">beanCountAtScanStart&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过上面可以看出来主要是两个方法：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>doScan&lt;/strong>&lt;/p>
&lt;p>这个主要用于Spring扫描输入的基本包下面的以及子包下面的类&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>AnnotationConfigUtils.registerAnnotationConfigProcessors&lt;/strong>&lt;/p>
&lt;p>注入一些处理注解的配置的Processors，比如处理的注解：Autowired， Value等注解&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="21-classpathbeandefinitionscannerdoscan-方法的源码分析">2.1 ClassPathBeanDefinitionScanner#doScan 方法的源码分析&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">doScan&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span> &lt;span style="color:#000">basePackages&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">notEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">basePackages&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;At least one base package must be specified&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">beanDefinitions&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LinkedHashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//加载不同的路径下面的包
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">basePackage&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">basePackages&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取包下面的候选组件--过滤出来符合条件的，在AnnotationConfigApplicationContext
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//创建的使用的默认的过滤器(包含过滤器和排除过滤器)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">candidates&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">findCandidateComponents&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">basePackage&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinition&lt;/span> &lt;span style="color:#000">candidate&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">candidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置SCOP
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ScopeMetadata&lt;/span> &lt;span style="color:#000">scopeMetadata&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">scopeMetadataResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resolveScopeMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setScope&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">scopeMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getScopeName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//生成bean name
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">beanNameGenerator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">generateBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理普通的bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidate&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">AbstractBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">postProcessBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">AbstractBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 处理注解类的Bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidate&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">AnnotatedBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">processCommonDefinitionAnnotations&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">AnnotatedBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断beanName是否存在于Spring容器中
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">checkCandidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanDefinitionHolder&lt;/span> &lt;span style="color:#000">definitionHolder&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//根据proxyMode是否创建代理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">definitionHolder&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applyScopedProxyMode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">scopeMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">definitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">definitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">registerBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">definitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">beanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里来分析一下ClassPathScanningCandidateComponentProvider#findCandidateComponents方法，该方法的作用就是把basePackage下面的Java类转换为Spring的BeanDefinition&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">findCandidateComponents&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">basePackage&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">componentsIndex&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">indexSupportsIncludeFilters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">addCandidateComponentsFromIndex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">componentsIndex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">basePackage&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">scanCandidateComponents&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">basePackage&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//一下代码去除了Spring源码中的一些非必要的代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">scanCandidateComponents&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">basePackage&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">candidates&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LinkedHashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 例如：classpath*:com.mxsm/**/*.class
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">packageSearchPath&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">ResourcePatternResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">CLASSPATH_ALL_URL_PREFIX&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#000">resolveBasePackage&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">basePackage&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;/&amp;#39;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resourcePattern&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//将指定package以及子包下面的类转化为Resource[]
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">resources&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getResourcePatternResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">packageSearchPath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Resource&lt;/span> &lt;span style="color:#000">resource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">resources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isReadable&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//将Class的信息存储到MetadataReader中
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">MetadataReader中&lt;/span> &lt;span style="color:#000">metadataReader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getMetadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getMetadataReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//调用过滤器来处理metadataReader--默认的是包含component
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//注解的类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">isCandidateComponent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadataReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//转化为扫描定义
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ScannedGenericBeanDefinition&lt;/span> &lt;span style="color:#000">sbd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ScannedGenericBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadataReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">sbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">sbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//再次判断 如果是实体类 返回true,如果是抽象类，但是抽象方法 被 @Lookup 注解注释返回true
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">isCandidateComponent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">candidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//日志打印
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//日志打印
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanDefinitionStoreException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Failed to read candidate component class: &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//日志打印
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanDefinitionStoreException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;I/O failure during classpath scanning&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">candidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="22-annotationconfigutilsregisterannotationconfigprocessors源码分析">2.2 AnnotationConfigUtils.registerAnnotationConfigProcessors源码分析&lt;/h4>
&lt;p>这个方法主要用于注册一些注解配置处理器例如注解：&lt;strong>@Configuration&lt;/strong> 等等。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">registerAnnotationConfigProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">BeanDefinitionRegistry&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">source&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">DefaultListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">unwrapDefaultListableBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getDependencyComparator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">AnnotationAwareOrderComparator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setDependencyComparator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AnnotationAwareOrderComparator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">INSTANCE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAutowireCandidateResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">ContextAnnotationAutowireCandidateResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setAutowireCandidateResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ContextAnnotationAutowireCandidateResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">beanDefs&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LinkedHashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">8&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//往Spring容器中注入ConfigurationClassPostProcessor -- 处理注解Configuration配置等等
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">def&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurationClassPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">source&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanDefs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registerPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理Autowired和Value注解以及javax.inject.Inject(JSR-330)注解的处理器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AUTOWIRED_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">def&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AutowiredAnnotationBeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">source&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanDefs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registerPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">AUTOWIRED_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 对 JSR-250 通用规范注解的处理.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">jsr250Present&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">COMMON_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">def&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">CommonAnnotationBeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">source&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanDefs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registerPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">COMMON_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 对JPA注解的注解处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">jpaPresent&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PERSISTENCE_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">def&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setBeanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">forName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PERSISTENCE_ANNOTATION_PROCESSOR_CLASS_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ClassNotFoundException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">IllegalStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Cannot load optional framework class: &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">PERSISTENCE_ANNOTATION_PROCESSOR_CLASS_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">source&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanDefs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registerPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">PERSISTENCE_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//事件监听方法处理器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">EVENT_LISTENER_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">def&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">EventListenerMethodProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">source&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanDefs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registerPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">EVENT_LISTENER_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//默认事件监听方法的处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">EVENT_LISTENER_FACTORY_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">def&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">DefaultEventListenerFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">source&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanDefs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registerPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">EVENT_LISTENER_FACTORY_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">beanDefs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>大部分Processor分为两类：&lt;br>
1 实现了 &lt;strong>BeanPostProcessor&lt;/strong> 接口，主要用来处理Java类内部的注解。例如： @Value&lt;br>
2 实现了 &lt;strong>BeanFactoryPostProcessor&lt;/strong> 接口，主要用来处理Java类上面的注解。例如：@Configuration&lt;/p>
&lt;/blockquote>
&lt;p>通过这样的就把对应的注解都处理了。达到了和XML配置一样的效果。对于其中的类的代码会有专门的笔记对其进行详细的分析。&lt;/p>
&lt;h3 id="3-总结加载过程">3 总结加载过程&lt;/h3>
&lt;p>通过上面的源码对Spring的AnnotationConfigApplicationContext源码分析来总结一下对于注解的这个加载过程&lt;/p>
&lt;ol>
&lt;li>&lt;strong>创建AnnotationConfigApplicationContext的对象，设置需要加载的basePackages&lt;/strong>&lt;/li>
&lt;/ol></description></item><item><title>Spring-Framework: spring注解源码解析之-Conditional</title><link>/spring-framework/annotation-source-analysis/conditional/</link><pubDate>Sun, 15 Apr 2018 00:00:00 +0000</pubDate><guid>/spring-framework/annotation-source-analysis/conditional/</guid><description>
&lt;h3 id="1-conditional注解的作用">1. Conditional注解的作用&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">({&lt;/span>&lt;span style="color:#000">ElementType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">TYPE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ElementType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">METHOD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">})&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Retention&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RetentionPolicy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">RUNTIME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Documented&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@interface&lt;/span> &lt;span style="color:#000">Conditional&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Condition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;[]&lt;/span> &lt;span style="color:#000">value&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@FunctionalInterface&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">Condition&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">matches&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConditionContext&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">AnnotatedTypeMetadata&lt;/span> &lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>一个是注解、一个是接口。&lt;/p>
&lt;h3 id="2-从源码解析conditional如何发挥作用">2. 从源码解析Conditional如何发挥作用&lt;/h3>
&lt;p>通过源码分析注解 &lt;strong>Conditional&lt;/strong> 主要在三个类中。 &lt;strong>AnnotatedBeanDefinitionReader&lt;/strong> 、 &lt;strong>ClassPathScanningCandidateComponentProvider&lt;/strong> 、 &lt;strong>ConditionEvaluator&lt;/strong> 。通过进一步分析发现 &lt;strong>AnnotatedBeanDefinitionReader、ClassPathScanningCandidateComponentProvider&lt;/strong> 中都包含了 &lt;strong>&lt;code>ConditionEvaluator&lt;/code>&lt;/strong> 类的变量。&lt;strong>&lt;code>AnnotatedBeanDefinitionReader&lt;/code>&lt;/strong> 主要用来读取注解的BeanDefinition，而 &lt;strong>&lt;code>ClassPathScanningCandidateComponentProvider&lt;/code>&lt;/strong> 主要由 &lt;strong>&lt;code>ClassPathBeanDefinitionScanner&lt;/code>&lt;/strong> 继承，该类主要用来扫描class path 的BeanDefinition。下面通过分析一下 &lt;strong>&lt;code>ClassPathBeanDefinitionScanner&lt;/code>&lt;/strong> 源码来看一下如何发挥作用的，看一下 &lt;strong>&lt;code>ClassPathBeanDefinitionScanner#doScan&lt;/code>&lt;/strong> 方法：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">doScan&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span> &lt;span style="color:#000">basePackages&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略部分代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">basePackage&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">basePackages&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//这个方法来找到候选的BeanDefinition
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">candidates&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">findCandidateComponents&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">basePackage&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//生路部分代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>那么再来看一下 &lt;strong>ClassPathScanningCandidateComponentProvider#findCandidateComponents&lt;/strong> 方法：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">findCandidateComponents&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">basePackage&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">componentsIndex&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">indexSupportsIncludeFilters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">addCandidateComponentsFromIndex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">componentsIndex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">basePackage&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">scanCandidateComponents&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">basePackage&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>进一步分析上面的 &lt;strong>scanCandidateComponents&lt;/strong> 和 &lt;strong>addCandidateComponentsFromIndex&lt;/strong> 方法发现，这两个方法中都调用了同一个方法 &lt;strong>ClassPathScanningCandidateComponentProvider#isCandidateComponent&lt;/strong> ：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">isCandidateComponent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">MetadataReader&lt;/span> &lt;span style="color:#000">metadataReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//excludeFilters排除
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">TypeFilter&lt;/span> &lt;span style="color:#000">tf&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">excludeFilters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">tf&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">match&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadataReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getMetadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">TypeFilter&lt;/span> &lt;span style="color:#000">tf&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">includeFilters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">tf&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">match&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadataReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getMetadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//这个方法就是Conditional注解的实现
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">isConditionMatch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadataReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">isConditionMatch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">MetadataReader&lt;/span> &lt;span style="color:#000">metadataReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">conditionEvaluator&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">conditionEvaluator&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ConditionEvaluator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getRegistry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">environment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resourcePatternResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">conditionEvaluator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">shouldSkip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadataReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAnnotationMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过代码分析可以看出来最后是通过调用 &lt;em>&lt;strong>&lt;code>ConditionEvaluator#shouldSkip&lt;/code>&lt;/strong>&lt;/em> 的方法来实现的。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">shouldSkip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AnnotatedTypeMetadata&lt;/span> &lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">shouldSkip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">shouldSkip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">AnnotatedTypeMetadata&lt;/span> &lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">ConfigurationPhase&lt;/span> &lt;span style="color:#000">phase&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否有注解Conditional
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadata&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isAnnotated&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Conditional&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断配置解析的类型
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">phase&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//配置类的类型
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadata&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">AnnotationMetadata&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span>
&lt;span style="color:#000">ConfigurationClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isConfigurationCandidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">AnnotationMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">shouldSkip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ConfigurationPhase&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PARSE_CONFIGURATION&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//bean注册类型
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">shouldSkip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ConfigurationPhase&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">REGISTER_BEAN&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Condition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">conditions&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">conditionClasses&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">getConditionClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">conditionClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">conditionClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Condition&lt;/span> &lt;span style="color:#000">condition&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getCondition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">conditionClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">conditions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">condition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">AnnotationAwareOrderComparator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">sort&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">conditions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Condition&lt;/span> &lt;span style="color:#000">condition&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">conditions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ConfigurationPhase&lt;/span> &lt;span style="color:#000">requiredPhase&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">condition&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">ConfigurationCondition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">requiredPhase&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">ConfigurationCondition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">condition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">getConfigurationPhase&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//调用Condition#matches接口来判断是否加载该类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">requiredPhase&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#000">requiredPhase&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">phase&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">condition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">matches&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过源码解析就知道了注解@Conditional配合Condition接口在Spring容器中进行条件化加载Bean。这个在SpringBoot中被广泛的应用。&lt;/p>
&lt;blockquote>
&lt;p>这个条件加载Bean和策略模式差不多。通过不同的策略来加载不同的Bean&lt;/p>
&lt;/blockquote></description></item><item><title>Spring-Framework: spring注解源码解析之-配置类注解</title><link>/spring-framework/annotation-source-analysis/config-annotation/</link><pubDate>Fri, 09 Mar 2018 00:00:00 +0000</pubDate><guid>/spring-framework/annotation-source-analysis/config-annotation/</guid><description>
&lt;h3 id="1-spring配置类注解">1. Spring配置类注解&lt;/h3>
&lt;p>在Spring中的配置类主要包含五个注解：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Component&lt;/strong>&lt;/li>
&lt;li>&lt;strong>ComponentScan&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Import&lt;/strong>&lt;/li>
&lt;li>&lt;strong>ImportResource&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Configuration&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3 id="2-spring配置类注解源码解析">2. Spring配置类注解源码解析&lt;/h3>
&lt;p>配置类注解主要是由 &lt;em>&lt;strong>&lt;code>ConfigurationClassPostProcessor&lt;/code>&lt;/strong>&lt;/em> 来处理。下面看一下源码：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">ConfigurationClassPostProcessor&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">PriorityOrdered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ResourceLoaderAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanClassLoaderAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">EnvironmentAware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略各种代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>实现了 &lt;strong>BeanDefinitionRegistryPostProcessor&lt;/strong> 接口。该接口是 &lt;strong>BeanFactoryPostProcessor&lt;/strong> 继承而来。这个接口主要用来处理类上面的注解。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">postProcessBeanDefinitionRegistry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionRegistry&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">registryId&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">identityHashCode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registriesPostProcessed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contains&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registryId&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">IllegalStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;postProcessBeanDefinitionRegistry already called on this post-processor against &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">factoriesPostProcessed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contains&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registryId&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">IllegalStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;postProcessBeanFactory already called on this post-processor against &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registriesPostProcessed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registryId&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">processConfigBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过源码可以看出来主要是通过 &lt;strong>&lt;em>ConfigurationClassPostProcessor&lt;/em>#processConfigBeanDefinitions&lt;/strong> 方法处理。下面来看一下方法 &lt;em>&lt;strong>processConfigBeanDefinitions&lt;/strong>&lt;/em> 源码：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">processConfigBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionRegistry&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">configCandidates&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取Bean的定义名称
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">candidateNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinitionNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">candidateNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanDefinition&lt;/span> &lt;span style="color:#000">beanDef&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanDef&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurationClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">CONFIGURATION_CLASS_ATTRIBUTE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略打印日志
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否为ConfigurationClass
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurationClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">checkConfigurationClassCandidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanDef&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">metadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">configCandidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanDef&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略后续处理代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过代码发现主要是通过 &lt;em>&lt;strong>ConfigurationClassUtils.checkConfigurationClassCandidate&lt;/strong>&lt;/em> 方法来校验是否为 &lt;strong>ConfigurationClass&lt;/strong> 。那么来研究一下方法 &lt;strong>checkConfigurationClassCandidate&lt;/strong> ：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">checkConfigurationClassCandidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">BeanDefinition&lt;/span> &lt;span style="color:#000">beanDef&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">MetadataReaderFactory&lt;/span> &lt;span style="color:#000">metadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略部分代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取是否Configuration修饰的类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Map&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">config&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAnnotationAttributes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Configuration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">config&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">Boolean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">FALSE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">equals&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">config&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;proxyBeanMethods&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">beanDef&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">CONFIGURATION_CLASS_ATTRIBUTE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">CONFIGURATION_CLASS_FULL&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否为Component、ComponentScan、Import、ImportResource中的一个
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">config&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#000">isConfigurationCandidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">beanDef&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">CONFIGURATION_CLASS_ATTRIBUTE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">CONFIGURATION_CLASS_LITE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略部分代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//isConfigurationCandidate源码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">isConfigurationCandidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AnnotationMetadata&lt;/span> &lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 判断是否为接口
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isInterface&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 是否为Component、ComponentScan、Import、ImportResource配置类中的一个
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">indicator&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">candidateIndicators&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isAnnotated&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">indicator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 查询是否有被@Bean注解修复的方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">hasAnnotatedMethods&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略日志打印
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过源码分析可以发现配置Class分为两类：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>full configurationClass&lt;/strong>&lt;/p>
&lt;p>Spring中称为full configurationClass,这个是由注解@Configuration注解修饰的。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>lite configurationClass&lt;/strong>&lt;/p>
&lt;p>Spring中称为lite configurationClass，也就是轻量级的配置类，由注解@Component、@ComponentScan、@Import、@ImportResource&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>在来看一下 &lt;em>&lt;em>ConfigurationClassPostProcessor&lt;/em>#&lt;em>processConfigBeanDefinitions&lt;/em>&lt;/em>* 中是如何来处理configurationClass：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">processConfigBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionRegistry&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//configCandidates的处理代码如下
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//ConfigurationClassParser处理类来处理configCandidates
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ConfigurationClassParser&lt;/span> &lt;span style="color:#000">parser&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ConfigurationClassParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">metadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">problemReporter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">environment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resourceLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">componentScanBeanNameGenerator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">candidates&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LinkedHashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">configCandidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">ConfigurationClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">alreadyParsed&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">HashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">configCandidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">size&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">do&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//解析candidates
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">parser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">parser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">validate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取解析后的配置类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">ConfigurationClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">configClasses&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LinkedHashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">parser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getConfigurationClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">configClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">removeAll&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">alreadyParsed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 创建解析后的配置类Bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">reader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">reader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ConfigurationClassBeanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">sourceExtractor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resourceLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">environment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">importBeanNameGenerator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">parser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getImportRegistry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">reader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">loadBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">alreadyParsed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAll&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">candidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">clear&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//循环处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinitionCount&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">candidateNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">length&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">newCandidateNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinitionNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">oldCandidateNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">HashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">Arrays&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">asList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidateNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">alreadyParsedClasses&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">HashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurationClass&lt;/span> &lt;span style="color:#000">configurationClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">alreadyParsed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">alreadyParsedClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configurationClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">candidateName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">newCandidateNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">oldCandidateNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contains&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidateName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanDefinition&lt;/span> &lt;span style="color:#000">bd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidateName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurationClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">checkConfigurationClassCandidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">metadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">alreadyParsedClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contains&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">candidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">candidateName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">candidateNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">newCandidateNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">while&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">candidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过代码分析上面的代码主要处理ConfigurationClass是通过 &lt;em>&lt;strong>ConfigurationClassParser&lt;/strong>&lt;/em> 解析器来处理。下面看一下解析器的 &lt;em>&lt;strong>ConfigurationClassParser#parse&lt;/strong>&lt;/em> 方法：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">configCandidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span> &lt;span style="color:#000">holder&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">configCandidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanDefinition&lt;/span> &lt;span style="color:#000">bd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">holder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bd&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">AnnotatedBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(((&lt;/span>&lt;span style="color:#000">AnnotatedBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">bd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">holder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bd&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">AbstractBeanDefinition&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">AbstractBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">bd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">hasBeanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(((&lt;/span>&lt;span style="color:#000">AbstractBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">bd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">getBeanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">holder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">holder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionStoreException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanDefinitionStoreException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Failed to parse configuration class [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">bd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;]&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理DeferredImportSelector接口
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">deferredImportSelectorHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">process&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过上面代码可以看出来主要是分为两部分：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>ConfigurationClassParser#parse ConfigurationClass解析&lt;/strong>&lt;/p>
&lt;p>ConfigurationClassParser#parse是一个空壳方法，当中调用了一个 ConfigurationClassParser#processConfigurationClass方法&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>DeferredImportSelector接口的处理&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>下面来分析一下 &lt;strong>ConfigurationClassParser#processConfigurationClass&lt;/strong> 方法：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">processConfigurationClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurationClass&lt;/span> &lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//条件加载的判定之前有分析过@Conditional注解
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">conditionEvaluator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">shouldSkip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">ConfigurationPhase&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PARSE_CONFIGURATION&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">ConfigurationClass&lt;/span> &lt;span style="color:#000">existingClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">configurationClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略部分代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">SourceClass&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">asSourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">do&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理ConfigurationClass
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">doProcessConfigurationClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">while&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sourceClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">configurationClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>代码分析可以看出来主要是通过 &lt;em>&lt;strong>doProcessConfigurationClass&lt;/strong>&lt;/em> 方法来处理ConfigurationClass类：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">SourceClass&lt;/span> &lt;span style="color:#000">doProcessConfigurationClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurationClass&lt;/span> &lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">SourceClass&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//@Component注解处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">isAnnotated&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Component&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">processMemberClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// @PropertySource注解处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AnnotationAttributes&lt;/span> &lt;span style="color:#000">propertySource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">attributesForRepeatable&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">PropertySources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">org&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">springframework&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">annotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PropertySource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">environment&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">ConfigurableEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">processPropertySource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">propertySource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略日志打印
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// @ComponentScan 注解处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">AnnotationAttributes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">componentScans&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">attributesForRepeatable&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">ComponentScans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ComponentScan&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">componentScans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">conditionEvaluator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">shouldSkip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">ConfigurationPhase&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">REGISTER_BEAN&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AnnotationAttributes&lt;/span> &lt;span style="color:#000">componentScan&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">componentScans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// The config class is annotated with @ComponentScan -&amp;gt; perform the scan immediately
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">scannedBeanDefinitions&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">componentScanParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">componentScan&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Check the set of scanned definitions for any further config classes and parse recursively if needed
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span> &lt;span style="color:#000">holder&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">scannedBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanDefinition&lt;/span> &lt;span style="color:#000">bdCand&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">holder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getOriginatingBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bdCand&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">bdCand&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">holder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurationClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">checkConfigurationClassCandidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bdCand&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">metadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bdCand&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">holder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// @Import 注解处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">processImports&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getImports&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">),&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// @ImportResource 注解处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">AnnotationAttributes&lt;/span> &lt;span style="color:#000">importResource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">attributesFor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">ImportResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">importResource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">resources&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">importResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getStringArray&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;locations&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">BeanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">readerClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">importResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;reader&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">resource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">resources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">resolvedResource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">environment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resolveRequiredPlaceholders&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addImportedResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resolvedResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">readerClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// @Bean 注解方法处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">MethodMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">beanMethods&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">retrieveBeanMethodMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">MethodMetadata&lt;/span> &lt;span style="color:#000">methodMetadata&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">beanMethods&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addBeanMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">methodMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 处理默认的接口方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">processInterfaces&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 处理父类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">hasSuperClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">superclass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getSuperClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">superclass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">superclass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">startsWith&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;java&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">knownSuperclasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">superclass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">knownSuperclasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">superclass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Superclass found, return its annotation metadata and recurse
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getSuperClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通上面的代码可以发现主要处理了这样几个注解：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>@Component注解处理&lt;/strong>&lt;/li>
&lt;li>&lt;strong>@PropertySource注解处理&lt;/strong>&lt;/li>
&lt;li>&lt;strong>@ComponentScan 注解处理&lt;/strong>&lt;/li>
&lt;li>&lt;strong>@Import 注解处理&lt;/strong>&lt;/li>
&lt;li>&lt;strong>@ImportResource 注解处理&lt;/strong>&lt;/li>
&lt;li>&lt;strong>@Bean 注解方法处理&lt;/strong>&lt;/li>
&lt;li>&lt;strong>处理默认的接口方法&lt;/strong>&lt;/li>
&lt;li>&lt;strong>处理父类&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>分析到这里就可以看出来， &lt;em>&lt;strong>ConfigurationClassPostProcessor&lt;/strong>&lt;/em> 类主要是处理一下的几个注解： &lt;strong>Component、PropertySources、PropertySource、ComponentScans、ComponentScan、Import、ImportResource、Bean&lt;/strong> 。&lt;/p>
&lt;h3 id="3-configurationclasspostprocessor如何注入到spring-application中">3. ConfigurationClassPostProcessor如何注入到Spring Application中&lt;/h3>
&lt;p>通过 &lt;strong>AnnotationConfigUtils&lt;/strong> 类中的静态方法 &lt;strong>registerAnnotationConfigProcessors&lt;/strong> 注入：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">def&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurationClassPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">source&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanDefs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registerPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Spring-Framework: RootBeanDefinition、ChildBeanDefinition、GenericBeanDefinition的区别</title><link>/spring-framework/core-source-analysis/beandefinediff/</link><pubDate>Fri, 05 Mar 2021 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/beandefinediff/</guid><description>
&lt;p>从RootBeanDefinition、ChildBeanDefinition、GenericBeanDefinition类图看一下：
&lt;img src="https://github.com/mxsm/picture/blob/main/spring/RootBeanDefinition_uml.png?raw=true" alt="类图">&lt;/p>
&lt;p>本质上来说是没有太大的区别它们都继承了 AbstractBeanDefinition 、在它们各自的类中、并没有什么太大的特殊的逻辑、某种程度上来说、它们可以说是差别非常小的&lt;/p>
&lt;ul>
&lt;li>RootBeanDefinition可以单独作为一个BeanDefinition，也可以作为其他BeanDefinition的父类。但是他不能作为其他BeanDefinition的子类（可以去看源码，在setParentName的时候，会抛出一个异常）&lt;/li>
&lt;li>ChildBeanDefinition相当于一个子类，不可以单独存在，必须要依赖一个父BeanDetintion。（最大的区别他的parentName属性是通过构造方法设置的，而且并没有提供一个无参构造方法给我们。)&lt;/li>
&lt;li>GenericBeanDefinition是首选的&lt;/li>
&lt;/ul></description></item><item><title>Spring-Framework: SpringBean循环依赖源码解析</title><link>/spring-framework/core-source-analysis/springbean-circular-dependency/</link><pubDate>Mon, 18 Jun 2018 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/springbean-circular-dependency/</guid><description>
&lt;h3 id="1-什么是spring-bean的循环依赖">1. 什么是Spring Bean的循环依赖&lt;/h3>
&lt;p>两个或者两个以上的bean互相持有对方、最终形成 &lt;strong>闭环&lt;/strong> 。如下图：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/document/blob/master/image/Spring/Springframework/SpringBean%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8.png?raw=true" alt="">&lt;/p>
&lt;p>A、B、C三个Bean形成了循环依赖。&lt;/p>
&lt;p>Spring中循环依赖的场景有：&lt;/p>
&lt;ol>
&lt;li>构造函数循环依赖&lt;/li>
&lt;li>Field属性循环依赖&lt;/li>
&lt;/ol>
&lt;h3 id="2-怎么检查循环依赖">2. 怎么检查循环依赖&lt;/h3>
&lt;p>检测循环依赖相对比较容易，Bean在创建的时候可以给该Bean打标，如果递归调用回来发现正在创建中的话，即说明了循环依赖了。&lt;/p>
&lt;h3 id="3-spring怎么解决循环依赖">3. Spring怎么解决循环依赖&lt;/h3>
&lt;p>在分析Spring源码中如何解决循环依赖的过程中前，我们先了解一下Spring的Bean的创建过程。简化后主要分为三个主要的步骤：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/document/blob/master/image/Spring/Springframework/bean%E5%88%9B%E5%BB%BA%E7%9A%84%E4%B8%89%E4%B8%AA%E4%B8%BB%E8%A6%81%E6%AD%A5%E9%AA%A4.png?raw=true" alt="">&lt;/p>
&lt;ol>
&lt;li>&lt;strong>实例化&lt;/strong>&lt;/li>
&lt;li>&lt;strong>实例化好的Bean填充属性&lt;/strong>&lt;/li>
&lt;li>&lt;strong>初始化&lt;/strong>&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>Bean的实例化和初始化的区别？&lt;/p>
&lt;p>Java有以下几种方式创建类对象：&lt;/p>
&lt;ul>
&lt;li>利用new关键字&lt;/li>
&lt;li>利用反射Class.newInstance&lt;/li>
&lt;li>利用Constructor.newIntance(相比Class.newInstance多了有参和私有构造函数)&lt;/li>
&lt;li>利用Cloneable/Object.clone()&lt;/li>
&lt;li>利用反序列化&lt;/li>
&lt;/ul>
&lt;p>这些都是讲的实例化。而初始化是Class实例化后的具体对象才来进行初始化。&lt;/p>
&lt;p>&lt;strong>&lt;code>简单的说：实例化针对的是Class,而初始化针对的是实例对象。&lt;/code>&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;h4 id="31-spring循环依赖解决的源码解析--52x的源码版本">3.1 Spring循环依赖解决的源码解析&amp;ndash;5.2.X的源码版本&lt;/h4>
&lt;p>Spring主要是通过缓存不同状态下的Bean来解决循环依赖的问题，下面看一下 &lt;strong>&lt;code>DefaultSingletonBeanRegistry&lt;/code>&lt;/strong> 类中的三个缓存变量：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#8f5902;font-style:italic">/** 单例对象缓存 */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">Map&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">singletonObjects&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ConcurrentHashMap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">256&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/** 单例对象工厂缓存 */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">Map&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ObjectFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#000">singletonFactories&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">HashMap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">16&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/** 提前暴露对象缓存 */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">Map&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">earlySingletonObjects&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">HashMap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">16&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>三个缓存的作用简单说明：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>缓存&lt;/th>
&lt;th>作用&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>singletonObjects&lt;/td>
&lt;td>用于存放完全初始化好的 bean，从该缓存中取出的 bean 可以直接使用&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>singletonFactories&lt;/td>
&lt;td>存放原始的 bean 对象（尚未填充属性），用于解决循环依赖&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>earlySingletonObjects&lt;/td>
&lt;td>提前暴光的单例对象的Cache，用于解决循环依赖（没有init）&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>下面来看一下创建Bean实例的主要一个方法 &lt;strong>AbstractBeanFactory#doGetBean&lt;/strong>：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">T&lt;/span> &lt;span style="color:#000">doGetBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">requiredType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">typeCheckOnly&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">transformedBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 检查单例缓存是否有手动注册的单例
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">sharedInstance&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sharedInstance&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">args&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//删除日志打印代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getObjectForBeanInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sharedInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否在创建中
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">isPrototypeCurrentlyInCreation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanCurrentlyInCreationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 检查parentBeanFactory是否存在调用parentBeanFactory的getBean方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">BeanFactory&lt;/span> &lt;span style="color:#000">parentBeanFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getParentBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">parentBeanFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">containsBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Not found -&amp;gt; check parent.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">nameToLookup&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">originalBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">parentBeanFactory&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">AbstractBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">AbstractBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">parentBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">doGetBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">nameToLookup&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">requiredType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">typeCheckOnly&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">args&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Delegation to parent with explicit args.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">parentBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">nameToLookup&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">requiredType&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// No args -&amp;gt; delegate to standard getBean method.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">parentBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">nameToLookup&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">requiredType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">parentBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">nameToLookup&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">typeCheckOnly&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">markBeanAsCreated&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">mbd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getMergedLocalBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">checkMergedBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 确保当前bean依赖的bean的初始化
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">dependsOn&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getDependsOn&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dependsOn&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">dep&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">dependsOn&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">isDependent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">dep&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//抛错BeanCreationException
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">registerDependentBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dep&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dep&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">NoSuchBeanDefinitionException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//抛错BeanCreationException
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 创建Bean--单例模式、原型模式、根据Scop来创建三种
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">sharedInstance&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&amp;gt;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//关键方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">createBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//删除了部分无关紧要的代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">});&lt;/span>
&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getObjectForBeanInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sharedInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isPrototype&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// It&amp;#39;s a prototype -&amp;gt; create a new instance.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">prototypeInstance&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">beforePrototypeCreation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">prototypeInstance&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">createBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">finally&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">afterPrototypeCreation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getObjectForBeanInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">prototypeInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">scopeName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getScope&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">Scope&lt;/span> &lt;span style="color:#000">scope&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">scopes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">scopeName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">scope&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">IllegalStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;No Scope registered for scope name &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">scopeName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">scopedInstance&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">scope&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&amp;gt;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">beforePrototypeCreation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">createBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">finally&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">afterPrototypeCreation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">});&lt;/span>
&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getObjectForBeanInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">scopedInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">IllegalStateException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//抛错BeanCreationException
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">cleanupAfterBeanCreationFailure&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 检查所需的类型是否与实际bean实例的类型匹配
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">requiredType&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">requiredType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">T&lt;/span> &lt;span style="color:#000">convertedBean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getTypeConverter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">convertIfNecessary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">requiredType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">convertedBean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanNotOfRequiredTypeException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">requiredType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">convertedBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">TypeMismatchException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//抛错BeanNotOfRequiredTypeException
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>下面我们用流程图来梳理一下这一段代码的逻辑：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/spring%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96%E8%A7%A3%E5%86%B3%E6%B5%81%E7%A8%8B%E5%9B%BE.png?raw=true" alt="">&lt;/p>
&lt;p>通过上面的源码可以看出来 &lt;em>&lt;strong>&lt;code>Object sharedInstance = getSingleton(beanName)&lt;/code>&lt;/strong>&lt;/em> 调用获取是否在缓存中存在。看一下代码&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">getSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">getSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">getSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">allowEarlyReference&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//从 singletonObjects 获取实例，singletonObjects 中的实例都是准备好的 bean 实例，可以直接使用
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">singletonObject&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">singletonObjects&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 判断 beanName 对应的 bean 是否正在创建中
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">singletonObject&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">isSingletonCurrentlyInCreation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">synchronized&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">singletonObjects&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//// 从 earlySingletonObjects 中获取提前曝光的 bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">singletonObject&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">earlySingletonObjects&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">singletonObject&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">allowEarlyReference&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 获取相应的 bean 工厂
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ObjectFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">singletonFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">singletonFactories&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">singletonFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 提前曝光 bean 实例（raw bean），用于解决循环依赖
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">singletonObject&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">singletonFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getObject&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 将 singletonObject 放入earlySingletonObjects缓存中，并将 singletonFactory 从缓存中移除
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">earlySingletonObjects&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">singletonObject&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">singletonFactories&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">remove&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">singletonObject&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>看一下单例模式的创建的 &lt;em>&lt;strong>&lt;code>AbstractAutowireCapableBeanFactory#createBean&lt;/code>&lt;/strong>&lt;/em> 方法：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">createBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>&lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeanCreationException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//删除部分无关紧要的代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">mbdToUse&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">resolvedClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">resolveBeanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resolvedClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">hasBeanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">mbdToUse&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">mbdToUse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setBeanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resolvedClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//准备方法重写
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">mbdToUse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">prepareMethodOverrides&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//执行InstantiationAwareBeanPostProcessor#postProcessBeforeInstantiation的方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//如果bean不等于NULL还会执行BeanPostProcessor#postProcessAfterInitialization
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">resolveBeforeInstantiation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbdToUse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//创建Bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">beanInstance&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">doCreateBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbdToUse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>从代码可以看出来如果存在 &lt;em>&lt;strong>&lt;code>InstantiationAwareBeanPostProcessor&lt;/code>&lt;/strong>&lt;/em> 处理器，调用 &lt;strong>&lt;code>InstantiationAwareBeanPostProcessor#postProcessBeforeInstantiation&lt;/code>&lt;/strong> 方法。如果该方法执行的返回的Bean是空就调用 &lt;em>&lt;strong>&lt;code>AbstractAutowireCapableBeanFactory#doCreateBean&lt;/code>&lt;/strong>&lt;/em> 方法。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Spring-Framework: BeanPostProcessor讲解</title><link>/spring-framework/core-source-analysis/beanpostprocessor/</link><pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/beanpostprocessor/</guid><description>
&lt;blockquote>
&lt;p>Spring Framework版本 5.3.4&lt;/p>
&lt;/blockquote>
&lt;h3 id="1-beanpostprocessor是干什么的">1. BeanPostProcessor是干什么的？&lt;/h3>
&lt;p>BeanPostProcessor接口作用是：如果我们需要在Spring容器完成Bean的实例化、配置和其他的初始化前后添加一些自己的逻辑处理，我们就可以定义一个或者多个BeanPostProcessor接口的实现，然后注册到容器中。(类似于拦截器和过滤器)。&lt;br>
BeanPostProcessor分为三大类如下图：
&lt;img src="https://github.com/mxsm/picture/blob/main/spring/BeanPostProcessor%E5%88%86%E7%B1%BB.png?raw=true" alt="图">&lt;/p>
&lt;ul>
&lt;li>实例化&lt;/li>
&lt;li>初始化&lt;/li>
&lt;li>销毁&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Bean实例化会执行 &lt;strong>InstantiationAwareBeanPostProcessor&lt;/strong> 、 &lt;strong>SmartInstantiationAwareBeanPostProcessor&lt;/strong> 这两类处理器，Bean实例化后每个bean就会通过 &lt;strong>BeanPostProcessor&lt;/strong> 、 &lt;strong>MergedBeanDefinitionPostProcessor&lt;/strong> 实现的类的处理。Bean销毁会通过 &lt;strong>DestructionAwareBeanPostProcessor&lt;/strong> 处理器。&lt;/p>
&lt;/blockquote>
&lt;p>Spring Bean的实例化图解：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/document/blob/master/image/Spring/Springframework/bean%E5%AE%9E%E4%BE%8B%E5%8C%96%E8%BF%87%E7%A8%8B.png?raw=true" alt="图">&lt;/p>
&lt;p>在检查完 &lt;strong>Aware&lt;/strong> 接口后，就开始调用 &lt;strong>BeanPostProcessor&lt;/strong> 进行前置处理后后置处理。下面来看一下Spring中的几类继承：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>AOP相关的&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/document/blob/master/image/Spring/Springframework/BeanPostProcessor-aop.png?raw=true" alt="图">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>bean 和 context相关的&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/document/blob/master/image/Spring/Springframework/BeanPostProcessor-core.png?raw=true" alt="图">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Spring Boot相关的实现&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/document/blob/master/image/Spring/Springframework/BeanPostProcessor-springboot.png?raw=true" alt="图">&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>BeanPostProcessor是在Bean实例化后，在自定义初始化方法前后执行。&lt;/p>
&lt;h3 id="2-beanpostprocessor">2. BeanPostProcessor&lt;/h3>
&lt;p>处理器定义了Bean &lt;strong>&lt;code>初始化&lt;/code>&lt;/strong> 前后执行的方法。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">BeanPostProcessor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//自定义初始化方法之前执行
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">postProcessBeforeInitialization&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//自定义初始化方法之后执行
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">postProcessAfterInitialization&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>代码示例地址：https://github.com/mxsm/spring-sample/tree/master/spring-beanPostProcessor&lt;/p>
&lt;/blockquote>
&lt;p>代码演示：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">MyBeanPostProcessor&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">BeanPostProcessor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">postProcessBeforeInitialization&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">System&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">out&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">println&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span> &lt;span style="color:#4e9a06">&amp;#34; ----before----- &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">postProcessAfterInitialization&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">System&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">out&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">println&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span> &lt;span style="color:#4e9a06">&amp;#34; ----after----- &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">TestBean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">init&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(){&lt;/span>
&lt;span style="color:#000">System&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">out&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">println&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;TestBean---init()&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">name&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;test&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">name&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#8f5902;font-style:italic">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;beans&lt;/span> &lt;span style="color:#c4a000">xmlns=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;http://www.springframework.org/schema/beans&amp;#34;&lt;/span>
&lt;span style="color:#c4a000">xmlns:xsi=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;span style="color:#c4a000">xmlns:context=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;http://www.springframework.org/schema/context&amp;#34;&lt;/span>
&lt;span style="color:#c4a000">xsi:schemaLocation=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;http://www.springframework.org/schema/beans
&lt;/span>&lt;span style="color:#4e9a06"> https://www.springframework.org/schema/beans/spring-beans.xsd
&lt;/span>&lt;span style="color:#4e9a06"> http://www.springframework.org/schema/context
&lt;/span>&lt;span style="color:#4e9a06"> https://www.springframework.org/schema/context/spring-context.xsd&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;bean&lt;/span> &lt;span style="color:#c4a000">id=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;testBean&amp;#34;&lt;/span> &lt;span style="color:#c4a000">class=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;com.github.mxsm.bean.TestBean&amp;#34;&lt;/span> &lt;span style="color:#c4a000">init-method=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;init&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">/&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;bean&lt;/span> &lt;span style="color:#c4a000">class=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;com.github.mxsm.processor.MyBeanPostProcessor&amp;#34;&lt;/span> &lt;span style="color:#c4a000">id=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;myBeanPostProcessor&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">/&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/beans&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">ApplicationBoot&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">args&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ApplicationContext&lt;/span> &lt;span style="color:#000">applicationContext&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ClassPathXmlApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;application.xml&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">TestBean&lt;/span> &lt;span style="color:#000">testBean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">applicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">TestBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">System&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">out&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">println&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">testBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/mxsm/document/blob/master/image/Spring/Springframework/BeanPostProcessor%E4%BB%A3%E7%A0%81%E6%BC%94%E7%A4%BA.png?raw=true" alt="图示">&lt;/p>
&lt;p>通过代码可以看出来执行结果。&lt;/p>
&lt;h3 id="3-instantiationawarebeanpostprocessor">3. &lt;strong>InstantiationAwareBeanPostProcessor&lt;/strong>&lt;/h3>
&lt;p>该处理器定义了Bean &lt;strong>&lt;code>实例化&lt;/code>&lt;/strong> 前后执行的方法。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">InstantiationAwareBeanPostProcessor&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">BeanPostProcessor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//实例化之前
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">postProcessBeforeInstantiation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//这里可以自定义代理类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//实例化后-但是执行在初始化之前
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">postProcessAfterInstantiation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理bean的Properties值
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#000">PropertyValues&lt;/span> &lt;span style="color:#000">postProcessProperties&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PropertyValues&lt;/span> &lt;span style="color:#000">pvs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4destructionawarebeanpostprocessor">4.DestructionAwareBeanPostProcessor&lt;/h3>
&lt;p>该处理器了销毁Bean之前的操作。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">DestructionAwareBeanPostProcessor&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">BeanPostProcessor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//bean销毁之前
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">postProcessBeforeDestruction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//bean是否需要销毁
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">requiresDestruction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="5-看一下spring自身的实现">5. 看一下Spring自身的实现&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">ApplicationContextAwareProcessor&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">BeanPostProcessor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">ConfigurableApplicationContext&lt;/span> &lt;span style="color:#000">applicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">StringValueResolver&lt;/span> &lt;span style="color:#000">embeddedValueResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * Create a new ApplicationContextAwareProcessor for the given context.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">ApplicationContextAwareProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurableApplicationContext&lt;/span> &lt;span style="color:#000">applicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applicationContext&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">applicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">embeddedValueResolver&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">EmbeddedValueResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">applicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">postProcessBeforeInitialization&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">AccessControlContext&lt;/span> &lt;span style="color:#000">acc&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">System&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getSecurityManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">EnvironmentAware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">EmbeddedValueResolverAware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span>
&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">ResourceLoaderAware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">ApplicationEventPublisherAware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span>
&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">MessageSourceAware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">ApplicationContextAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">acc&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getAccessControlContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">acc&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">AccessController&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">doPrivileged&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">PrivilegedAction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&amp;gt;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">invokeAwareInterfaces&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">},&lt;/span> &lt;span style="color:#000">acc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">invokeAwareInterfaces&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">invokeAwareInterfaces&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">Aware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">EnvironmentAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">EnvironmentAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">setEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">EmbeddedValueResolverAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">EmbeddedValueResolverAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">setEmbeddedValueResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">embeddedValueResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">ResourceLoaderAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">ResourceLoaderAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">setResourceLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">ApplicationEventPublisherAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">ApplicationEventPublisherAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">setApplicationEventPublisher&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">MessageSourceAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">MessageSourceAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">setMessageSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">ApplicationContextAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">ApplicationContextAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">setApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">postProcessAfterInitialization&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>当前类主要用来处理继承了 &lt;strong>&lt;code>Aware&lt;/code>&lt;/strong> 接口类。然后根据 &lt;strong>&lt;code>Aware&lt;/code>&lt;/strong> 接口的不同实现设置对应的接口对象&lt;/p>
&lt;h3 id="6-beanpostprocessor-spring源码分析">6. BeanPostProcessor Spring源码分析&lt;/h3>
&lt;p>首先明确一点 &lt;strong>&lt;code>BeanPostProcessor&lt;/code>&lt;/strong> 实现的类都是Spring容器中的一个Bean。在 &lt;strong>&lt;code>AbstractApplicationContext#refresh&lt;/code>&lt;/strong> 是最重要的一个方法：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">refresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">IllegalStateException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">synchronized&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">startupShutdownMonitor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省了部分代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省了部分代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// Register bean processors that intercept bean creation.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">registerBeanPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省了部分代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">finally&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省了部分代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">registerBeanPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurableListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//通过PostProcessorRegistrationDelegate类的静态方法处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">PostProcessorRegistrationDelegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerBeanPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>下面看一下 &lt;strong>&lt;code>PostProcessorRegistrationDelegate.registerBeanPostProcessors(beanFactory, this);&lt;/code>&lt;/strong> 方法&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">registerBeanPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">ConfigurableListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">AbstractApplicationContext&lt;/span> &lt;span style="color:#000">applicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">postProcessorNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanNamesForType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Register BeanPostProcessorChecker that logs an info message when
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// a bean is created during BeanPostProcessor instantiation, i.e. when
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// a bean is not eligible for getting processed by all BeanPostProcessors.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">beanProcessorTargetCount&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanPostProcessorCount&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">1&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">postProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">length&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addBeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanPostProcessorChecker&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanProcessorTargetCount&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理分为三类：1 PriorityOrdered实现 2 Ordered 第三类就是普通的
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">priorityOrderedPostProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">internalPostProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">orderedPostProcessorNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">nonOrderedPostProcessorNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">ppName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">postProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTypeMatch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">PriorityOrdered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanPostProcessor&lt;/span> &lt;span style="color:#000">pp&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">priorityOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">pp&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">pp&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">MergedBeanDefinitionPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">internalPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">pp&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTypeMatch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Ordered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">orderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">nonOrderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 处理PriorityOrdered实现
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">sortPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">priorityOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">registerBeanPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">priorityOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 处理 Ordered实现.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">orderedPostProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">ppName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">orderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanPostProcessor&lt;/span> &lt;span style="color:#000">pp&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">orderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">pp&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">pp&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">MergedBeanDefinitionPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">internalPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">pp&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">sortPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">orderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">registerBeanPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">orderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 处理正常的
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">nonOrderedPostProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">ppName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">nonOrderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanPostProcessor&lt;/span> &lt;span style="color:#000">pp&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">nonOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">pp&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">pp&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">MergedBeanDefinitionPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">internalPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">pp&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">registerBeanPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">nonOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//注册MergedBeanDefinitionPostProcessor
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">sortPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">internalPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">registerBeanPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">internalPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Re-register post-processor for detecting inner beans as ApplicationListeners,
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// moving it to the end of the processor chain (for picking up proxies etc).
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addBeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ApplicationListenerDetector&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">applicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过该方法将 &lt;strong>&lt;code>BeanPostProcessor&lt;/code>&lt;/strong> 的以上几种实现类都注册到Spring中。&lt;/p>
&lt;p>然后在生成Bean的时候去执行， &lt;strong>&lt;code>AbstractAutowireCapableBeanFactory.createBean&lt;/code>&lt;/strong> 创建Bean&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">createBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeanCreationException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 执行实例化之前方法.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">resolveBeforeInstantiation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbdToUse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">resolveBeforeInstantiation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">Boolean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">FALSE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">equals&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">beforeInstantiationResolved&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isSynthetic&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">hasInstantiationAwareBeanPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">targetType&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">determineTargetType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">targetType&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//执行InstantiationAwareBeanPostProcessor#postProcessBeforeInstantiation(实例化之前方法)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">applyBeanPostProcessorsBeforeInstantiation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">targetType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//执行InstantiationAwareBeanPostProcessor#postProcessAfterInitialization(初始化后的方法)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">applyBeanPostProcessorsAfterInitialization&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">beforeInstantiationResolved&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过代码可以知道 &lt;strong>&lt;code>resolveBeforeInstantiation&lt;/code>&lt;/strong> 方法执行实例化之前的方法。如果实例化之前的方法返回了对应Bean那么直接执行初始化后的方法。实例化 &lt;strong>&lt;code>InstantiationAwareBeanPostProcessor#postProcessBeforeInstantiation&lt;/code>&lt;/strong> 方法执行返回Bean为空就调用 &lt;strong>&lt;code>AbstractAutowireCapableBeanFactory#doCreateBean&lt;/code>&lt;/strong> 方法。在这个方法里面有如下几个重要的方法：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>AbstractAutowireCapableBeanFactory#applyMergedBeanDefinitionPostProcessors&lt;/strong> 方法&lt;/p>
&lt;p>执行 &lt;strong>&lt;code>MergedBeanDefinitionPostProcessor#postProcessMergedBeanDefinition&lt;/code>&lt;/strong> 方法&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>AbstractAutowireCapableBeanFactory#populateBean&lt;/strong> 方法&lt;/p>
&lt;p>执行 &lt;strong>&lt;code>InstantiationAwareBeanPostProcessor#postProcessAfterInstantiation&lt;/code>&lt;/strong> 方法，如果前面方法返回true，执行 &lt;strong>&lt;code>InstantiationAwareBeanPostProcessor#postProcessProperties&lt;/code>&lt;/strong> 方法&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>AbstractAutowireCapableBeanFactory#initializeBean&lt;/strong> 方法&lt;/p>
&lt;p>执行 &lt;strong>&lt;code>BeanPostProcessor#postProcessBeforeInitialization&lt;/code>&lt;/strong> 方法，然后执行 &lt;strong>&lt;code>AbstractAutowireCapableBeanFactory#invokeInitMethods&lt;/code>&lt;/strong> 方法(包括实现了InitializingBean接口的方法或者有注解@PostConstruct的方法)，然后执行 &lt;strong>&lt;code>BeanPostProcessor#postProcessAfterInitialization&lt;/code>&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/BeanPostProcessor%E7%BB%A7%E6%89%BF%E6%96%B9%E6%B3%95%E6%89%A7%E8%A1%8C%E7%9A%84%E6%B5%81%E7%A8%8B.png?raw=true" alt="图">&lt;/p>
&lt;h3 id="7-总结">7. 总结&lt;/h3>
&lt;p>&lt;strong>BeanPostProcessor 主要用来处理Bean内部的注解。比如Spring自己实现的@Autowired、@Value， @EJB，@WebServiceRef，@PostConstruct，@PreDestroy等&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>自定义类似于@Value，@Autowired的注解，主要用于Java类变量或者方法上的注解&lt;/li>
&lt;li>主要用于处理Bean内部的注解实现，主要是变量或者方法上面的注解&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>参考文档：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cloud.tencent.com/developer/article/1409273">https://cloud.tencent.com/developer/article/1409273&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Spring-Framework: BeanFactoryPostProcessor详解</title><link>/spring-framework/core-source-analysis/beanfactorypostprocessor/</link><pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/beanfactorypostprocessor/</guid><description>
&lt;h3 id="1-beanfactorypostprocessor继承关系">1. BeanFactoryPostProcessor继承关系&lt;/h3>
&lt;p>&lt;img src="https://github.com/mxsm/document/blob/master/image/Spring/Springframework/BeanFactoryPostProcessor.png?raw=true" alt="图">&lt;/p>
&lt;p>&lt;strong>&lt;code>BeanFactoryPostProcessor&lt;/code>&lt;/strong> 主要用来处理注入Bean到BeanFactory中以及Bean类上面的注解，比如 &lt;strong>@Configuration&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>PropertySourcesPlaceholderConfigurer和 PropertyPlaceholderConfigurer&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#8f5902;font-style:italic">//xml context 元素解析
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">ContextNamespaceHandler&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">NamespaceHandlerSupport&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">init&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;property-placeholder&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">PropertyPlaceholderBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;property-override&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">PropertyOverrideBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;annotation-config&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AnnotationConfigBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;component-scan&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ComponentScanBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;load-time-weaver&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LoadTimeWeaverBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;spring-configured&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">SpringConfiguredBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;mbean-export&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">MBeanExportBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;mbean-server&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">MBeanServerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">PropertyPlaceholderBeanDefinitionParser&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">AbstractPropertyLoadingBeanDefinitionParser&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">SYSTEM_PROPERTIES_MODE_ATTRIBUTE&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;system-properties-mode&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">SYSTEM_PROPERTIES_MODE_DEFAULT&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;ENVIRONMENT&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">getBeanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Element&lt;/span> &lt;span style="color:#000">element&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// As of Spring 3.1, the default value of system-properties-mode has changed from
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// &amp;#39;FALLBACK&amp;#39; to &amp;#39;ENVIRONMENT&amp;#39;. This latter value indicates that resolution of
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// placeholders against system properties is a function of the Environment and
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// its current set of PropertySources.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">SYSTEM_PROPERTIES_MODE_DEFAULT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">equals&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">element&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">SYSTEM_PROPERTIES_MODE_ATTRIBUTE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">PropertySourcesPlaceholderConfigurer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// The user has explicitly specified a value for system-properties-mode: revert to
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// PropertyPlaceholderConfigurer to ensure backward compatibility with 3.0 and earlier.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">PropertyPlaceholderConfigurer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">doParse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Element&lt;/span> &lt;span style="color:#000">element&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ParserContext&lt;/span> &lt;span style="color:#000">parserContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanDefinitionBuilder&lt;/span> &lt;span style="color:#000">builder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">super&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">doParse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">element&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">parserContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">builder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">builder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addPropertyValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;ignoreUnresolvablePlaceholders&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">Boolean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">valueOf&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">element&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;ignore-unresolvable&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)));&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">systemPropertiesModeName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">element&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">SYSTEM_PROPERTIES_MODE_ATTRIBUTE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">StringUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">hasLength&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">systemPropertiesModeName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">systemPropertiesModeName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">equals&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">SYSTEM_PROPERTIES_MODE_DEFAULT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">builder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addPropertyValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;systemPropertiesModeName&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;SYSTEM_PROPERTIES_MODE_&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">systemPropertiesModeName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">element&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">hasAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;value-separator&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">builder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addPropertyValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;valueSeparator&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">element&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;value-separator&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">element&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">hasAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;trim-values&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">builder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addPropertyValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;trimValues&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">element&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;trim-values&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">element&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">hasAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;null-value&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">builder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addPropertyValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;nullValue&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">element&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;null-value&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这类加载了。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>ConfigurationClassPostProcessor&lt;/strong>&lt;/p>
&lt;p>这个类注入分为两种：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>XML的情况下注入&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">ContextNamespaceHandler&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">NamespaceHandlerSupport&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">init&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;property-placeholder&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">PropertyPlaceholderBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;property-override&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">PropertyOverrideBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//这个类注入
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;annotation-config&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AnnotationConfigBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//这个类注入
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;component-scan&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ComponentScanBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;load-time-weaver&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LoadTimeWeaverBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;spring-configured&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">SpringConfiguredBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;mbean-export&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">MBeanExportBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;mbean-server&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">MBeanServerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>注解的情况下注入&lt;/p>
&lt;blockquote>
&lt;p>AnnotationConfigUtils.registerAnnotationConfigProcessors(parserContext.getRegistry(), source);这个方法里面注入了&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">registerAnnotationConfigProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">BeanDefinitionRegistry&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">source&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">DefaultListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">unwrapDefaultListableBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getDependencyComparator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">AnnotationAwareOrderComparator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setDependencyComparator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AnnotationAwareOrderComparator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">INSTANCE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAutowireCandidateResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">ContextAnnotationAutowireCandidateResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setAutowireCandidateResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ContextAnnotationAutowireCandidateResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">beanDefs&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LinkedHashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">8&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//注入ConfigurationClassPostProcessor
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">def&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurationClassPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">source&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanDefs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registerPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AUTOWIRED_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">def&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AutowiredAnnotationBeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">source&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanDefs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registerPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">AUTOWIRED_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Check for JSR-250 support, and if present add the CommonAnnotationBeanPostProcessor.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">jsr250Present&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">COMMON_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">def&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">CommonAnnotationBeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">source&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanDefs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registerPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">COMMON_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Check for JPA support, and if present add the PersistenceAnnotationBeanPostProcessor.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">jpaPresent&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PERSISTENCE_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">def&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setBeanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">forName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PERSISTENCE_ANNOTATION_PROCESSOR_CLASS_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ClassNotFoundException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">IllegalStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Cannot load optional framework class: &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">PERSISTENCE_ANNOTATION_PROCESSOR_CLASS_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">source&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanDefs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registerPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">PERSISTENCE_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">EVENT_LISTENER_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">def&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">EventListenerMethodProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">source&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanDefs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registerPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">EVENT_LISTENER_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">EVENT_LISTENER_FACTORY_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">def&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">DefaultEventListenerFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">source&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanDefs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registerPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">EVENT_LISTENER_FACTORY_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">beanDefs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>在Spring源码中主要可以关注一下上面的三个实现类。&lt;/p>
&lt;blockquote>
&lt;p>主要关注下面这两个接口：&lt;/p>
&lt;p>&lt;strong>BeanFactoryPostProcessor&lt;/strong>&lt;/p>
&lt;p>&lt;strong>BeanDefinitionRegistryPostProcessor&lt;/strong> (可以注入bean)&lt;/p>
&lt;/blockquote>
&lt;h3 id="2-beanfactorypostprocessor在spring中如何工作的源码分析">2. BeanFactoryPostProcessor在Spring中如何工作的源码分析&lt;/h3>
&lt;p>首先我们应该知道，&lt;strong>不管是什么在Spring的容器中都是一个Bean&lt;/strong> ，经过bean的扫描或者xml定义后加载。代码首先会在这里进入：&lt;/p>
&lt;blockquote>
&lt;p>AbstractApplicationContext#refresh#invokeBeanFactoryPostProcessors 方法中来处理&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurableListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//这个方法主要处理实现了BeanFactoryPostProcessor接口的java类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">PostProcessorRegistrationDelegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Detect a LoadTimeWeaver and prepare for weaving, if found in the meantime
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// (e.g. through an @Bean method registered by ConfigurationClassPostProcessor)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTempClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">LOAD_TIME_WEAVER_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addBeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LoadTimeWeaverAwareProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setTempClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ContextTypeMatchClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>&lt;code>PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(beanFactory, getBeanFactoryPostProcessors())&lt;/code>&lt;/strong> 这个方法主要处理BeanFactoryPostProcessor实现的类。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">ConfigurableListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">beanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">processedBeans&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">HashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断BeanFactory是否为BeanDefinitionRegistry的实例(BeanDefinitionRegistry可以注入bean)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">BeanDefinitionRegistry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanDefinitionRegistry&lt;/span> &lt;span style="color:#000">registry&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionRegistry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//存放实现BeanFactoryPostProcessor的实例
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">regularPostProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//存放实现BeanDefinitionRegistryPostProcessor
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">registryProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span> &lt;span style="color:#000">postProcessor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">beanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//分类存放BeanDefinitionRegistryPostProcessor 和 BeanFactoryPostProcessor
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">postProcessor&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span> &lt;span style="color:#000">registryProcessor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">postProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//执行postProcessBeanDefinitionRegistry方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">registryProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">postProcessBeanDefinitionRegistry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">registryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registryProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">regularPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">postProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理当前BeanDefinitionRegistryPostProcessor实现类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">currentRegistryProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 首先执行实现了PriorityOrdered的BeanDefinitionRegistryPostProcessor实现类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// 在beanFacotry中通过BeanDefinitionRegistryPostProcessor类型获取名称
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">postProcessorNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanNamesForType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">ppName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">postProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//过滤出来PriorityOrdered的实现类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTypeMatch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">PriorityOrdered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">processedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//排序按照PriorityOrdered
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">sortPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">registryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAll&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//执行BeanDefinitionRegistryPostProcessor#postProcessBeanDefinitionRegistry()方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">invokeBeanDefinitionRegistryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">clear&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 执行BeanDefinitionRegistryPostProcessors实现了Ordered接口的类.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">postProcessorNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanNamesForType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">ppName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">postProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">processedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contains&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTypeMatch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Ordered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">processedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">sortPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">registryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAll&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">invokeBeanDefinitionRegistryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">clear&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 最后执行那些实现了BeanDefinitionRegistryPostProcessor类的
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">reiterate&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">while&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">reiterate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">reiterate&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">postProcessorNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanNamesForType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">ppName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">postProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">processedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contains&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">processedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">reiterate&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">sortPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">registryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAll&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">invokeBeanDefinitionRegistryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">clear&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//调用BeanFactoryPostProcessor的postProcessBeanFactory
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">regularPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//直接调用postProcessor#postProcessBeanFactory
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//下面处理的是实现了BeanFactoryPostProcessor的类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">postProcessorNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanNamesForType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 三种：
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 1 实现了PriorityOrdered 和 BeanFactoryPostProcessor
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 2 实现了Ordered 和 BeanFactoryPostProcessor
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 3 只实现了BeanFactoryPostProcessor
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">priorityOrderedPostProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">orderedPostProcessorNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">nonOrderedPostProcessorNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">ppName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">postProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">processedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contains&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 如果是BeanDefinitionRegistryPostProcessor处理过的就什么也不做
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTypeMatch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">PriorityOrdered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//保存实现了PriorityOrdered接口的BeanFactoryPostProcessor
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">priorityOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTypeMatch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Ordered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//保存实现了Ordered接口的BeanFactoryPostProcessor
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">orderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//正常的接口
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">nonOrderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//对priorityOrderedPostProcessors进行排序
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">sortPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">priorityOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//执行BeanFactoryPostProcessor#postProcessBeanFactory()方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">priorityOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 执行完实现了Ordered接口的BeanFactoryPostProcessor
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">orderedPostProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">postProcessorName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">orderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">orderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">postProcessorName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">sortPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">orderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">orderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 执行完剩下的BeanFactoryPostProcessor(没有实现Ordered和PriorityOrdered接口)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">nonOrderedPostProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">postProcessorName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">nonOrderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">nonOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">postProcessorName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">nonOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">clearMetadataCache&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过上面的代码可以看出来，&lt;strong>&lt;code>AbstractApplicationContext#refresh#invokeBeanFactoryPostProcessors&lt;/code>&lt;/strong> 这个方法主要用来执行 &lt;strong>&lt;code>BeanFactoryPostProcessor&lt;/code>&lt;/strong> 和 &lt;strong>&lt;code>BeanDefinitionRegistryPostProcessor&lt;/code>&lt;/strong> 这两个类的接口。 &lt;strong>&lt;code>BeanDefinitionRegistryPostProcessor&lt;/code>&lt;/strong> 继承了 &lt;strong>&lt;code>BeanFactoryPostProcessor&lt;/code>&lt;/strong> 接口。从这里可以看出来Spring容器是如何调用这两个类的。这两个类执行的顺序&lt;/p>
&lt;ul>
&lt;li>&lt;strong>BeanDefinitionRegistryPostProcessor#postProcessBeanDefinitionRegistry&lt;/strong>&lt;/li>
&lt;li>&lt;strong>BeanFactoryPostProcessor#postProcessBeanFactory&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3 id="3-总结">3. 总结&lt;/h3>
&lt;p>&lt;strong>&lt;code>BeanFactoryPostProcessor&lt;/code>&lt;/strong> 的实现类主要处理类上面的注解比如：&lt;/p>
&lt;ul>
&lt;li>@Configuration&lt;/li>
&lt;li>@Order&lt;/li>
&lt;li>@Component&lt;/li>
&lt;li>@PropertySources&lt;/li>
&lt;li>@ComponentScans&lt;/li>
&lt;li>@ComponentScan&lt;/li>
&lt;li>@Import&lt;/li>
&lt;li>@ImportResource&lt;/li>
&lt;li>@Bean(类内部方法上)&lt;/li>
&lt;/ul>
&lt;p>处理顺序图：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/BeanFactoryPostProcessor%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3%E5%A4%84%E7%90%86%E9%A1%BA%E5%BA%8F.png?raw=true" alt="">&lt;/p>
&lt;p>&lt;a href="https://blog.ljbmxsm.com/springframework/core-source-analysis/configurationclasspostprocesso/">ConfigurationClassPostProcessor详解&lt;/a>&lt;/p></description></item><item><title>Spring-Framework: ConfigurationClassPostProcessor源码解析</title><link>/spring-framework/core-source-analysis/configurationclasspostprocesso/</link><pubDate>Fri, 19 Mar 2021 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/configurationclasspostprocesso/</guid><description>
&lt;h3 id="1-configurationclasspostprocessor">1. ConfigurationClassPostProcessor&lt;/h3>
&lt;p>这个类主要用来处理Spring中的配置注解，Spring的配置注解主要包含一下几个：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>@Configuration&lt;/strong>&lt;/li>
&lt;li>&lt;strong>@Component&lt;/strong>&lt;/li>
&lt;li>&lt;strong>@PropertySources、@PropertySource&lt;/strong>&lt;/li>
&lt;li>&lt;strong>@ComponentScan 、 @ComponentScans&lt;/strong>&lt;/li>
&lt;li>&lt;strong>@Import&lt;/strong>&lt;/li>
&lt;li>&lt;strong>@ImportResource&lt;/strong>&lt;/li>
&lt;li>&lt;strong>@Bean&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>以上七个是Spring最常见的配置类注解，下面来分析一下每一个注解在Spring中的实现。&lt;/p>
&lt;h3 id="2-configurationclasspostprocessor源码分析">2. ConfigurationClassPostProcessor源码分析&lt;/h3>
&lt;p>&lt;strong>&lt;code>ConfigurationClassPostProcessor&lt;/code>&lt;/strong> 主要是通过 &lt;strong>AnnotationConfigUtils#registerAnnotationConfigProcessors&lt;/strong> 方法注入 &lt;strong>&lt;code>ConfigurationClassPostProcessor&lt;/code>&lt;/strong> 的 &lt;strong>&lt;code>BeanDefinition&lt;/code>&lt;/strong> 。下面看一下 &lt;strong>&lt;code>ConfigurationClassPostProcessor&lt;/code>&lt;/strong> 源码&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">ConfigurationClassPostProcessor&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">PriorityOrdered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ResourceLoaderAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanClassLoaderAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">EnvironmentAware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 省略里面的代码 这里看一下定义
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过上面可以看到实现了 &lt;strong>BeanDefinitionRegistryPostProcessor&lt;/strong> 这个接口。这个接口是Spring中的一个很重要的 &lt;strong>BeanFactoryPostProcessor&lt;/strong> 继承。下面具体看一下里面的两个重要的方法：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">ConfigurationClassPostProcessor&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">PriorityOrdered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ResourceLoaderAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanClassLoaderAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">EnvironmentAware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//BeanDefinitionRegistryPostProcessor的方法实现
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">postProcessBeanDefinitionRegistry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionRegistry&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">registryId&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">identityHashCode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registriesPostProcessed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contains&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registryId&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">IllegalStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;postProcessBeanDefinitionRegistry already called on this post-processor against &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">factoriesPostProcessed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contains&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registryId&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">IllegalStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;postProcessBeanFactory already called on this post-processor against &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registriesPostProcessed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registryId&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//关键性的方法--处理配置Bean定义
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">processConfigBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//BeanFactoryPostProcessor的方法实现
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">postProcessBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurableListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">factoryId&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">identityHashCode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">factoriesPostProcessed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contains&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">factoryId&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">IllegalStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;postProcessBeanFactory already called on this post-processor against &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">factoriesPostProcessed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">factoryId&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registriesPostProcessed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contains&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">factoryId&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//关键性的方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">processConfigBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">BeanDefinitionRegistry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">enhanceConfigurationClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addBeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ImportAwareBeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>下面看一下 &lt;strong>&lt;code>processConfigBeanDefinitions&lt;/code>&lt;/strong> 方法&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">processConfigBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionRegistry&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">configCandidates&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//从Spring容器中获取注册的BeanDefinition名称
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">candidateNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinitionNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">candidateNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取beanName对应的BeanDefinition
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">BeanDefinition&lt;/span> &lt;span style="color:#000">beanDef&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//排除ConfigurationClassPostProcessor
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanDef&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurationClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">CONFIGURATION_CLASS_ATTRIBUTE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isDebugEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">debug&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Bean definition has already been processed as a configuration class: &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">beanDef&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否包含Configuration注解然后判断是否包含
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurationClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">checkConfigurationClassCandidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanDef&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">metadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">configCandidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanDef&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 如果没有发现Configuration直接返回
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configCandidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 处理包含了@Order注解
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">configCandidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">sort&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">bd1&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">bd2&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&amp;gt;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">i1&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">ConfigurationClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getOrder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bd1&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">i2&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">ConfigurationClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getOrder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bd2&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">Integer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">compare&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">i1&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">i2&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">});&lt;/span>
&lt;span style="color:#000">SingletonBeanRegistry&lt;/span> &lt;span style="color:#000">sbr&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">SingletonBeanRegistry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">sbr&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">SingletonBeanRegistry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">localBeanNameGeneratorSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanNameGenerator&lt;/span> &lt;span style="color:#000">generator&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanNameGenerator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">sbr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">CONFIGURATION_BEAN_NAME_GENERATOR&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">generator&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">componentScanBeanNameGenerator&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">generator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">importBeanNameGenerator&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">generator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">environment&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">environment&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">StandardEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// ConfigurationClassParser解析每一个带有@Configuration注解的类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ConfigurationClassParser&lt;/span> &lt;span style="color:#000">parser&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ConfigurationClassParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">metadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">problemReporter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">environment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resourceLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">componentScanBeanNameGenerator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">candidates&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LinkedHashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">configCandidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">ConfigurationClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">alreadyParsed&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">HashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">configCandidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">size&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">do&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//解析包含有Configuration注解的类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">parser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">parser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">validate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">ConfigurationClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">configClasses&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LinkedHashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">parser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getConfigurationClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">configClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">removeAll&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">alreadyParsed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 读取创建解析后的BeanDefinition到上下文Context中
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">reader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">reader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ConfigurationClassBeanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">sourceExtractor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resourceLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">environment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">importBeanNameGenerator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">parser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getImportRegistry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">reader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">loadBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">alreadyParsed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAll&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">candidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">clear&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinitionCount&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">candidateNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">length&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">newCandidateNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinitionNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">oldCandidateNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">HashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">Arrays&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">asList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidateNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">alreadyParsedClasses&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">HashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurationClass&lt;/span> &lt;span style="color:#000">configurationClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">alreadyParsed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">alreadyParsedClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configurationClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">candidateName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">newCandidateNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">oldCandidateNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contains&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidateName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanDefinition&lt;/span> &lt;span style="color:#000">bd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidateName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurationClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">checkConfigurationClassCandidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">metadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">alreadyParsedClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contains&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">candidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">candidateName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">candidateNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">newCandidateNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">while&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">candidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//注册ImportRegistry作为一个Bean去支持ImportAware导入@Configuration类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sbr&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">sbr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">IMPORT_REGISTRY_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">sbr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">IMPORT_REGISTRY_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">parser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getImportRegistry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">metadataReaderFactory&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">CachingMetadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Clear cache in externally provided MetadataReaderFactory; this is a no-op
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// for a shared cache since it&amp;#39;ll be cleared by the ApplicationContext.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">CachingMetadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">metadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">clearCache&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="21-configurationclassparser对象的分析">2.1 ConfigurationClassParser对象的分析&lt;/h4>
&lt;p>&lt;em>&lt;strong>ConfigurationClassParser&lt;/strong>&lt;/em> 主要分为几个部分：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>@Component注解的解析&lt;/strong>&lt;/li>
&lt;li>&lt;strong>@PropertySources、@PropertySource 注解的解析&lt;/strong>&lt;/li>
&lt;li>&lt;strong>@ComponentScans.class, @ComponentScan.class注解的解析&lt;/strong>&lt;/li>
&lt;li>&lt;strong>@Import注解的解析&lt;/strong>&lt;/li>
&lt;li>&lt;strong>@ImportResource注解的解析&lt;/strong>&lt;/li>
&lt;li>&lt;strong>@Configuration配置类中@Bean注解的解析&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>&lt;em>&lt;strong>ConfigurationClassParser&lt;/strong>&lt;/em> 主要是解析 &lt;em>&lt;strong>@Configuration&lt;/strong>&lt;/em> 注解类上或者类里面的这些注解下面来逐一分析。&lt;/p>
&lt;p>解析 &lt;strong>&lt;code>@Configuration&lt;/code>&lt;/strong> 主要是通过 &lt;strong>&lt;code>ConfigurationClassParser&lt;/code>&lt;/strong> 对象的parse方法来进行解析&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">configCandidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span> &lt;span style="color:#000">holder&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">configCandidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanDefinition&lt;/span> &lt;span style="color:#000">bd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">holder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bd&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">AnnotatedBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//解析处理AnnotatedBeanDefinition
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(((&lt;/span>&lt;span style="color:#000">AnnotatedBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">bd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">holder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bd&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">AbstractBeanDefinition&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">AbstractBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">bd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">hasBeanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//解析处理AbstractBeanDefinition
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(((&lt;/span>&lt;span style="color:#000">AbstractBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">bd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">getBeanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">holder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">holder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionStoreException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanDefinitionStoreException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Failed to parse configuration class [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">bd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;]&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理实现了DeferredImportSelector接口的类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">deferredImportSelectorHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">process&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过上面的代码发现主要是通过调用 parse方法进行接下来的处理&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">className&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">notNull&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">className&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;No bean class name for configuration class bean definition&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">MetadataReader&lt;/span> &lt;span style="color:#000">reader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">metadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadataReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">className&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">processConfigurationClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ConfigurationClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">reader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">processConfigurationClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ConfigurationClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AnnotationMetadata&lt;/span> &lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">processConfigurationClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ConfigurationClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>parse方法有三个重载的方法，三个重写方法都是调用 &lt;strong>processConfigurationClass&lt;/strong> 方法，接下来开始分析一下这个方法：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">processConfigurationClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurationClass&lt;/span> &lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">conditionEvaluator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">shouldSkip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">ConfigurationPhase&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PARSE_CONFIGURATION&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断配置类是否存在
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ConfigurationClass&lt;/span> &lt;span style="color:#000">existingClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">configurationClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">existingClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断configClass是Import注解
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isImported&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">existingClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isImported&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//已经存在的ConfigurationClass合并新ConfigurationClass的导入者
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">existingClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">mergeImportedBy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 注册过无需再次注册
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 找到显式bean定义，可能替换导入
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// 删除旧的configClass
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">configurationClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">remove&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">knownSuperclasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">values&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">removeIf&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">equals&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 递归地处理配置类及其父类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">SourceClass&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">asSourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">do&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">sourceClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">doProcessConfigurationClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">while&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sourceClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//保存已经处理过的configClass
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">configurationClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>看一下 &lt;strong>&lt;code>doProcessConfigurationClass&lt;/code>&lt;/strong> 的方法&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">SourceClass&lt;/span> &lt;span style="color:#000">doProcessConfigurationClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurationClass&lt;/span> &lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">SourceClass&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">isAnnotated&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Component&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 递归处理成员内部内，处理带@Component注解的类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">processMemberClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 处理任何@PropertySource的类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AnnotationAttributes&lt;/span> &lt;span style="color:#000">propertySource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">attributesForRepeatable&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">PropertySources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">org&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">springframework&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">annotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PropertySource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">environment&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">ConfigurableEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理属性
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">processPropertySource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">propertySource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">info&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Ignoring @PropertySource annotation on [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;]. Reason: Environment must implement ConfigurableEnvironment&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理任何 @ComponentScan的类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">AnnotationAttributes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">componentScans&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">attributesForRepeatable&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">ComponentScans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ComponentScan&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">componentScans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">conditionEvaluator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">shouldSkip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">ConfigurationPhase&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">REGISTER_BEAN&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AnnotationAttributes&lt;/span> &lt;span style="color:#000">componentScan&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">componentScans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// The config class is annotated with @ComponentScan -&amp;gt; perform the scan immediately
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">scannedBeanDefinitions&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">componentScanParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">componentScan&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Check the set of scanned definitions for any further config classes and parse recursively if needed
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span> &lt;span style="color:#000">holder&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">scannedBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanDefinition&lt;/span> &lt;span style="color:#000">bdCand&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">holder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getOriginatingBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bdCand&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">bdCand&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">holder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurationClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">checkConfigurationClassCandidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bdCand&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">metadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bdCand&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">holder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 处理任何@Import注解的类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">processImports&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getImports&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">),&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理任何@ImportResource注解的类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">AnnotationAttributes&lt;/span> &lt;span style="color:#000">importResource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">attributesFor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">ImportResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">importResource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">resources&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">importResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getStringArray&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;locations&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">BeanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">readerClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">importResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;reader&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">resource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">resources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">resolvedResource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">environment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resolveRequiredPlaceholders&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addImportedResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resolvedResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">readerClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">MethodMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">beanMethods&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">retrieveBeanMethodMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">MethodMetadata&lt;/span> &lt;span style="color:#000">methodMetadata&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">beanMethods&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addBeanMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">methodMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 处理实现的所有接口中@Bean注解的方法，去上面的处理方法一样，但不是抽象方法，
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// 因为java8中接口有默认方法和其他具体方法，这里只会处理这些方法的@Bean注解
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">processInterfaces&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 处理父类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">hasSuperClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">superclass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getSuperClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// java包的父类和已经处理过的父类不处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">superclass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">superclass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">startsWith&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;java&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">knownSuperclasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">superclass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 标记父类已经处理过
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">knownSuperclasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">superclass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 返回父类的SourceClass再次进行递归处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getSuperClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 没有父类处理完成
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="211--component注解的处理">2.1.1 @Component注解的处理&lt;/h5>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#8f5902;font-style:italic">//判断@configuration注解的类上面是否包含有@Component注解
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">isAnnotated&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Component&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">processMemberClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="212-propertysourcespropertysource-注解的解析">2.1.2 @PropertySources、@PropertySource 注解的解析&lt;/h5>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AnnotationAttributes&lt;/span> &lt;span style="color:#000">propertySource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">attributesForRepeatable&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">PropertySources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">org&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">springframework&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">annotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PropertySource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">environment&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">ConfigurableEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">processPropertySource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">propertySource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略打印日志
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="213-componentscansclass-componentscanclass注解的解析">2.1.3 @ComponentScans.class, @ComponentScan.class注解的解析&lt;/h5>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">AnnotationAttributes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">componentScans&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">attributesForRepeatable&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">ComponentScans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ComponentScan&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">componentScans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">conditionEvaluator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">shouldSkip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">ConfigurationPhase&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">REGISTER_BEAN&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AnnotationAttributes&lt;/span> &lt;span style="color:#000">componentScan&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">componentScans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//添加有@ComponentScan注解的类 -&amp;gt; 立刻扫描
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">scannedBeanDefinitions&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">componentScanParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">componentScan&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//检查已扫描的定义集以获得更多的配置类，并在需要时进行递归解析
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span> &lt;span style="color:#000">holder&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">scannedBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanDefinition&lt;/span> &lt;span style="color:#000">bdCand&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">holder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getOriginatingBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bdCand&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">bdCand&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">holder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否有配置@Configuration，然后递归调用解析
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurationClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">checkConfigurationClassCandidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bdCand&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">metadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bdCand&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">holder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="214-import注解的解析">2.1.4 @Import注解的解析&lt;/h5>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#8f5902;font-style:italic">// Process any @Import annotations
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">processImports&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getImports&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">),&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">processImports&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurationClass&lt;/span> &lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">SourceClass&lt;/span> &lt;span style="color:#000">currentSourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">Collection&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">SourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">importCandidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">checkForCircularImports&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">importCandidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">checkForCircularImports&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">isChainedImportOnStack&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">problemReporter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">error&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">CircularImportProblem&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">importStack&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">importStack&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">push&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">SourceClass&lt;/span> &lt;span style="color:#000">candidate&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">importCandidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isAssignable&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ImportSelector&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 处理ImportSelector实现类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">candidateClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">loadClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">ImportSelector&lt;/span> &lt;span style="color:#000">selector&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">ParserStrategyUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">instantiateClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidateClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ImportSelector&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">environment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resourceLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">selector&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">DeferredImportSelector&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否为DeferredImportSelector的实现--延迟处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">deferredImportSelectorHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">handle&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">DeferredImportSelector&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">selector&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">importClassNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">selector&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">selectImports&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentSourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">Collection&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">SourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">importSourceClasses&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">asSourceClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">importClassNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">processImports&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">currentSourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">importSourceClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isAssignable&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ImportBeanDefinitionRegistrar&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//ImportBeanDefinitionRegistrar接口实现的的处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">candidateClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">loadClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">ImportBeanDefinitionRegistrar&lt;/span> &lt;span style="color:#000">registrar&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#000">ParserStrategyUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">instantiateClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidateClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ImportBeanDefinitionRegistrar&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">environment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resourceLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addImportBeanDefinitionRegistrar&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registrar&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">currentSourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 当做Config类来处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">importStack&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerImport&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">currentSourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">processConfigurationClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">asConfigClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionStoreException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanDefinitionStoreException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Failed to process import candidates for configuration class [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;]&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">finally&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">importStack&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">pop&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="215-importresource注解的解析">2.1.5 @ImportResource注解的解析&lt;/h5>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#000">AnnotationAttributes&lt;/span> &lt;span style="color:#000">importResource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">attributesFor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">ImportResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">importResource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">resources&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">importResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getStringArray&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;locations&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">BeanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">readerClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">importResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;reader&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">resource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">resources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">resolvedResource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">environment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resolveRequiredPlaceholders&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addImportedResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resolvedResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">readerClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="216-configuration配置类中bean注解的解析">2.1.6 @Configuration配置类中@Bean注解的解析&lt;/h5>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">MethodMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">beanMethods&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">retrieveBeanMethodMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">MethodMetadata&lt;/span> &lt;span style="color:#000">methodMetadata&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">beanMethods&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addBeanMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">methodMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-终结">3. 终结&lt;/h3>
&lt;ul>
&lt;li>@Import自定义注解的时候可以放在Bean上面&lt;/li>
&lt;/ul></description></item><item><title>Spring-Framework:</title><link>/spring-framework/annotation-source-analysis/component/</link><pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate><guid>/spring-framework/annotation-source-analysis/component/</guid><description>
&lt;blockquote>
&lt;p>基于Spring 5.4.2版本分析&lt;/p>
&lt;/blockquote>
&lt;h3 id="1-component概要">1. @Component概要&lt;/h3>
&lt;p>Spring中有一个重要的注解那就是 &lt;strong>&lt;code>@Component&lt;/code>&lt;/strong> 。对于Spring中不同场景下使用的注解例如：&lt;strong>&lt;code>@Repository&lt;/code>&lt;/strong> 、&lt;strong>&lt;code>@Service&lt;/code>&lt;/strong> 、 &lt;strong>&lt;code>@Controller&lt;/code>&lt;/strong> 都是通过 &lt;strong>&lt;code>@Component&lt;/code>&lt;/strong> 注解衍生出来的。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">({&lt;/span>&lt;span style="color:#000">ElementType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">TYPE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">})&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Retention&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RetentionPolicy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">RUNTIME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Documented&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Component&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@interface&lt;/span> &lt;span style="color:#000">Service&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@AliasFor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">annotation&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">Component&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">value&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在这里代码中还看到一个重要的注解来实现派生： &lt;strong>&lt;code>@AliasFor&lt;/code>&lt;/strong> 。&lt;/p>
&lt;h3 id="2-component入口">2. @Component入口&lt;/h3>
&lt;p>不论是现在Spring流行的注解方式还是以前的老式的XML配置方式都有一个入口。这里就只分析注解模式。&lt;/p>
&lt;p>对于XML配置的方式可以从下面的代码中找到入口：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">ContextNamespaceHandler&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">NamespaceHandlerSupport&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">init&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;property-placeholder&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">PropertyPlaceholderBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;property-override&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">PropertyOverrideBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;annotation-config&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AnnotationConfigBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;component-scan&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ComponentScanBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;load-time-weaver&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LoadTimeWeaverBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;spring-configured&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">SpringConfiguredBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;mbean-export&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">MBeanExportBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;mbean-server&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">MBeanServerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>对于注解方式&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">AnnotationConfigApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span> &lt;span style="color:#000">basePackages&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">scan&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">basePackages&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">refresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看一下 &lt;strong>&lt;code>AnnotationConfigApplicationContext&lt;/code>&lt;/strong> 类。&lt;/p>
&lt;p>不管是注解方式还是XML方式最终都是通过 &lt;strong>&lt;code>ClassPathBeanDefinitionScanner&lt;/code>&lt;/strong> 类来将包含有 &lt;strong>&lt;code>@Component&lt;/code>&lt;/strong> 注解的类定义加载到Spring容器里面。&lt;/p>
&lt;h3 id="3-classpathbeandefinitionscanner解析">3. ClassPathBeanDefinitionScanner解析&lt;/h3>
&lt;p>&lt;strong>&lt;code>ClassPathBeanDefinitionScanner&lt;/code>&lt;/strong> 作用主要是扫描带有 &lt;strong>&lt;code>@Component&lt;/code>&lt;/strong> 注解的类并实现注册。下面来看一下 &lt;strong>&lt;code>ClassPathBeanDefinitionScanner#doScan&lt;/code>&lt;/strong> 方法。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">doScan&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span> &lt;span style="color:#000">basePackages&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">notEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">basePackages&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;At least one base package must be specified&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">beanDefinitions&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LinkedHashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">basePackage&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">basePackages&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//找基础包下面的候选的Component
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">candidates&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">findCandidateComponents&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">basePackage&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//下面是对加载的Component做进一步处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinition&lt;/span> &lt;span style="color:#000">candidate&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">candidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ScopeMetadata&lt;/span> &lt;span style="color:#000">scopeMetadata&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">scopeMetadataResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resolveScopeMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setScope&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">scopeMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getScopeName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">beanNameGenerator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">generateBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidate&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">AbstractBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">postProcessBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">AbstractBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidate&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">AnnotatedBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">processCommonDefinitionAnnotations&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">AnnotatedBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">checkCandidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanDefinitionHolder&lt;/span> &lt;span style="color:#000">definitionHolder&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">definitionHolder&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applyScopedProxyMode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">scopeMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">definitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">definitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">registerBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">definitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">beanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过上面的代码可以看出来主要是通过 &lt;strong>&lt;code>ClassPathScanningCandidateComponentProvider#findCandidateComponents&lt;/code>&lt;/strong> 来实现加载&lt;/p>
&lt;h3 id="4-findcandidatecomponents解析">4. findCandidateComponents解析&lt;/h3>
&lt;p>findCandidateComponents方法属于ClassPathScanningCandidateComponentProvider#findCandidateComponents。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">findCandidateComponents&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">basePackage&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">componentsIndex&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">indexSupportsIncludeFilters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">addCandidateComponentsFromIndex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">componentsIndex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">basePackage&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">scanCandidateComponents&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">basePackage&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">scanCandidateComponents&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">basePackage&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">candidates&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LinkedHashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">packageSearchPath&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">ResourcePatternResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">CLASSPATH_ALL_URL_PREFIX&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#000">resolveBasePackage&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">basePackage&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;/&amp;#39;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resourcePattern&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">Resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">resources&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getResourcePatternResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">packageSearchPath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略了部分打印的代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Resource&lt;/span> &lt;span style="color:#000">resource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">resources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isReadable&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">MetadataReader&lt;/span> &lt;span style="color:#000">metadataReader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getMetadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getMetadataReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">isCandidateComponent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadataReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ScannedGenericBeanDefinition&lt;/span> &lt;span style="color:#000">sbd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ScannedGenericBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadataReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">sbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">isCandidateComponent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">candidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanDefinitionStoreException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Failed to read candidate component class: &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanDefinitionStoreException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;I/O failure during classpath scanning&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">candidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>该方法主要还是从基础包中获取组件。从代码分析一下大概的思路：&lt;/p>
&lt;ol>
&lt;li>根据基础包拼装扫描的路径正则表达式。&lt;/li>
&lt;li>获取路径下面的 &lt;strong>&lt;code>.class&lt;/code>&lt;/strong> 文件包装成 &lt;strong>&lt;code>Resource&lt;/code>&lt;/strong> 数组。&lt;/li>
&lt;li>将 &lt;strong>&lt;code>.class&lt;/code>&lt;/strong> 文件包装成 &lt;strong>&lt;code>Resource&lt;/code>&lt;/strong> 处理成 &lt;strong>&lt;code>MetadataReader&lt;/code>&lt;/strong>&lt;/li>
&lt;li>判断 &lt;strong>&lt;code>MetadataReader&lt;/code>&lt;/strong> 是否为候选组件&lt;/li>
&lt;li>判断 &lt;strong>&lt;code>ScannedGenericBeanDefinition&lt;/code>&lt;/strong> 是否为候选组件，&lt;strong>&lt;code>ScannedGenericBeanDefinition&lt;/code>&lt;/strong> 由 &lt;strong>&lt;code>MetadataReader&lt;/code>&lt;/strong> 构建。&lt;/li>
&lt;/ol>
&lt;p>判断是否为候选组件通过 &lt;strong>&lt;code>ClassPathScanningCandidateComponentProvider#isCandidateComponent&lt;/code>&lt;/strong> 方法。&lt;/p>
&lt;h3 id="5-iscandidatecomponent方法解析">5. isCandidateComponent方法解析&lt;/h3>
&lt;p>&lt;strong>&lt;code>isCandidateComponent&lt;/code>&lt;/strong> 方法在 &lt;strong>&lt;code>ClassPathScanningCandidateComponentProvider#isCandidateComponent&lt;/code>&lt;/strong> 类中。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">isCandidateComponent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">MetadataReader&lt;/span> &lt;span style="color:#000">metadataReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略部分代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">TypeFilter&lt;/span> &lt;span style="color:#000">tf&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">includeFilters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否为@Component注解修饰
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">tf&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">match&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadataReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getMetadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">isConditionMatch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">metadataReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 &lt;strong>&lt;code>ClassPathScanningCandidateComponentProvider&lt;/code>&lt;/strong> 初始化的时候回只设置了 &lt;strong>&lt;code>@Component&lt;/code>&lt;/strong> 注解。并没有看到 &lt;strong>&lt;code>@Repository&lt;/code>&lt;/strong> 、&lt;strong>&lt;code>@Service&lt;/code>&lt;/strong> 、 &lt;strong>&lt;code>@Controller&lt;/code>&lt;/strong> 这些。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#8f5902;font-style:italic">//ClassPathScanningCandidateComponentProvider#registerDefaultFilters
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">registerDefaultFilters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">includeFilters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AnnotationTypeFilter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Component&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">ClassLoader&lt;/span> &lt;span style="color:#000">cl&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">ClassPathScanningCandidateComponentProvider&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">includeFilters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AnnotationTypeFilter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Annotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;)&lt;/span> &lt;span style="color:#000">ClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">forName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;javax.annotation.ManagedBean&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">cl&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)),&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">trace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;JSR-250 &amp;#39;javax.annotation.ManagedBean&amp;#39; found and supported for component scanning&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ClassNotFoundException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// JSR-250 1.1 API (as included in Java EE 6) not available - simply skip.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">includeFilters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AnnotationTypeFilter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Annotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;)&lt;/span> &lt;span style="color:#000">ClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">forName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;javax.inject.Named&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">cl&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)),&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">trace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;JSR-330 &amp;#39;javax.inject.Named&amp;#39; annotation found and supported for component scanning&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ClassNotFoundException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// JSR-330 API not available - simply skip.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>前面说过 &lt;strong>&lt;code>@Repository&lt;/code>&lt;/strong> 、&lt;strong>&lt;code>@Service&lt;/code>&lt;/strong> 、 &lt;strong>&lt;code>@Controller&lt;/code>&lt;/strong> 都是通过 &lt;strong>&lt;code>@Component&lt;/code>&lt;/strong> 派生来的。&lt;/p>
&lt;h3 id="6-component派生过程解析">6. @Component派生过程解析&lt;/h3>
&lt;p>在 &lt;strong>&lt;code>ClassPathScanningCandidateComponentProvider#scanCandidateComponents&lt;/code>&lt;/strong> 有这样一段代码&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#000">MetadataReader&lt;/span> &lt;span style="color:#000">metadataReader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getMetadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getMetadataReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">MetadataReaderFactory&lt;/span> &lt;span style="color:#000">getMetadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">metadataReaderFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">metadataReaderFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">CachingMetadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">metadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这一段代码主要是为了获取 &lt;strong>&lt;code>MetadataReader&lt;/code>&lt;/strong> 。该接口定义了获取当前类注解的元数据和当前类的元数据。在Spring框架中唯一的实现就是 &lt;strong>&lt;code>SimpleMetadataReader&lt;/code>&lt;/strong> 。下面来看一下 &lt;strong>&lt;code>SimpleMetadataReader&lt;/code>&lt;/strong> 类的构造函数：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#000">SimpleMetadataReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Resource&lt;/span> &lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">ClassLoader&lt;/span> &lt;span style="color:#000">classLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">SimpleAnnotationMetadataReadingVisitor&lt;/span> &lt;span style="color:#000">visitor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">SimpleAnnotationMetadataReadingVisitor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">classLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">getClassReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">accept&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">visitor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">PARSING_OPTIONS&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">annotationMetadata&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">visitor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在构造函数中有两个类：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>SimpleAnnotationMetadataReadingVisitor&lt;/strong>&lt;/p>
&lt;p>主要用于访问注解&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/ClassVisitor.png?raw=true" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>ClassReader&lt;/strong>&lt;/p>
&lt;p>类读取器，基于ASM框架实现的。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>这里我们还可以看一下类的元数据类的继承关系：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/ClassMetadata.png?raw=true" alt="">&lt;/p>
&lt;p>在 &lt;strong>SimpleMetadataReader&lt;/strong> 类的构造函数中有这样一段代码 &lt;strong>getClassReader(resource).accept(visitor, PARSING_OPTIONS);&lt;/strong> 主要是用来类上面的注解。包括注解上面的注解。&lt;/p>
&lt;blockquote>
&lt;p>getClassReader(resource).accept(visitor, PARSING_OPTIONS)这段代码就是实现了注解派生的关键&lt;/p>
&lt;/blockquote>
&lt;h3 id="7-猜想验证">7. 猜想验证&lt;/h3>
&lt;p>首先写一个Controller&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/%E9%AA%8C%E8%AF%81%E7%8C%9C%E6%83%B31.png?raw=true" alt="">&lt;/p>
&lt;p>然后在 IDEA设置条件断点：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/%E9%AA%8C%E8%AF%81%E7%8C%9C%E6%83%B32.png?raw=true" alt="">&lt;/p>
&lt;p>看一下metadata变量：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/%E9%AA%8C%E8%AF%81%E7%8C%9C%E6%83%B33.png?raw=true" alt="">&lt;/p>
&lt;p>然后看一下变量值annotations:&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/%E9%AA%8C%E8%AF%81%E7%8C%9C%E6%83%B34.png?raw=true" alt="">&lt;/p>
&lt;p>这里可以看出来已经读取到了 &lt;strong>&lt;code>AsyncController&lt;/code>&lt;/strong> 类上面的注解，然后在变量中有一个mappings的变量下面来看一下：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/%E9%AA%8C%E8%AF%81%E7%8C%9C%E6%83%B35.png?raw=true" alt="">&lt;/p>
&lt;p>这个里面就包含了除了Java的注解以外的所有注解。（这里由于页面的关系不能完全展示）&lt;/p>
&lt;h3 id="8-总结">8. 总结&lt;/h3>
&lt;ul>
&lt;li>@Component是spring注解的基础&lt;/li>
&lt;li>ClassPathBeanDefinitionScanner扫描制定基础包下面的包含@Component注解&lt;/li>
&lt;li>通过ClassReader（基于ASM实现）来读取类上面所有的注解。&lt;/li>
&lt;/ul></description></item><item><title>Spring-Framework: Spring中的拓展原理实战</title><link>/spring-framework/custom-component/spring-extend/</link><pubDate>Mon, 18 Jan 2021 00:00:00 +0000</pubDate><guid>/spring-framework/custom-component/spring-extend/</guid><description>
&lt;h3 id="1-spring拓展分类">1. Spring拓展分类&lt;/h3>
&lt;p>Spring在Java框架中有着不可撼动的地位，只要是Java开发者就没有不用的。对于这样一个优秀的框架可拓展性是必不可少的。这里通过分析Spring的原理然后根据工作中的需要基于Spring的一些常用的拓展：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/custom/Spring%E4%B8%AD%E7%9A%84%E6%8B%93%E5%B1%95.png" alt="Spring中的拓展">&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://spring.io/">Spring官网&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/spring-projects/spring-framework">Spring Framework Github&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>拓展分类：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>XML Schema拓展&lt;/strong>&lt;/p>
&lt;p>在Spring中有除了比较常见的标签 bean、aop标签以外，还可以通过自定义XSD然后和Spring的拓展接口实现自定义&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>自定义注解&lt;/strong>&lt;/p>
&lt;p>首先要明白自定义注解有什么好处：&lt;/p>
&lt;ul>
&lt;li>自定义注解能够通过注解很好的表达我们这个注解表干的事情，例如：@Log这个在Spring中没有这个注解，通过注解我们很好猜到这个是用来记录日志的。在Spring Web中的注解@RestController&lt;/li>
&lt;li>能够在Spring的原有的注解上做一些额外的功能&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>AOP拓展&lt;/strong>&lt;/p>
&lt;p>对于AOP拓展，Spring中已经有了几个例子：&lt;strong>&lt;code>@Transactional&lt;/code>&lt;/strong> &lt;strong>&lt;code>@Async&lt;/code>&lt;/strong> &lt;strong>&lt;code>@Cacheable&lt;/code>&lt;/strong> ，这几个都是AOP拓展的体现，但是在实际的工作中远远不止这些拓展。例如：日志记录，方法调用时间统计等等&lt;/p>
&lt;blockquote>
&lt;p>Async原理源码分析可以阅读 《&lt;a href="https://juejin.cn/post/7045587358174937101">Spring AOP应用之EnableAsync&lt;/a>》&lt;/p>
&lt;p>Transactional原理源码分析可以阅读 《&lt;a href="https://juejin.cn/post/7040748897915895821">Spring AOP应用之Spring事务管理&lt;/a>》&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>校验拓展&lt;/strong>&lt;/p>
&lt;p>在web项目中，有一类注解像：@NotBlank 这一类注解，这些只是Java本身提供的，Spring给了支持。但是例如判断是不是电子邮件、电话号码等等都需要自定义。(严格意义上来说这只能是Spring对校验的一种支持)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>其他拓展&lt;/strong>&lt;/p>
&lt;p>对一些接口拓展，例如Aware接口拓展等等&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="2-为什么要拓展自定义">2. 为什么要拓展(自定义)？&lt;/h3>
&lt;p>拓展自定义的意义在哪里？从代码可读性上来说能够让使用者更加清楚明白当前的组件是干什么的，从解决问题的角度来说更好的解决每个具体业务的问题。实现个性化定制。&lt;/p>
&lt;p>接下来通过一系列文章进行分门别类，从原理到实际编写代码来实现以上的这些拓展。结合工作中的一些实际需求对拓展做一些实现！同时把Spring的拓展进行分门别类。在更新完成Spring拓展的系列后还会继续更新Spring Boot的相关拓展以及源码分析的文章。&lt;/p></description></item><item><title>Spring-Framework: 如何自定义Spring xml Namespace</title><link>/spring-framework/custom-component/spring-extend-xml/</link><pubDate>Tue, 19 Jan 2021 00:00:00 +0000</pubDate><guid>/spring-framework/custom-component/spring-extend-xml/</guid><description>
&lt;p>在Spring XML配置文件中除了Spring 默认的Namespace，今天我们来看一下如何自定义Namespace&lt;/p>
&lt;h3 id="1-spring自定义xml的namespace原理">1. Spring自定义XML的Namespace原理&lt;/h3>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/custom/%E8%87%AA%E5%AE%9A%E4%B9%89xml%20schema.png" alt="自定义xml schema">&lt;/p>
&lt;p>整个Spring容器启动的时候流程还是一样，但是在加载Bean的定义的时候，XML配置文件调用的是 &lt;strong>AbstractXmlApplicationContext#loadBeanDefinitions&lt;/strong> 方法来加载XML中的Bean的定义。然后通过 &lt;strong>XmlBeanDefinitionReader&lt;/strong> 从设置的默认位置或者指定位置的xml解析成为Document到内存。&lt;strong>BeanDefinitionDocumentReader&lt;/strong> 负责解析 XML Document中每个 Element。&lt;/p>
&lt;blockquote>
&lt;p>整个过程会读取META-INF/spring.schemas文件中配置的Namespace和XSD文件的对应关系进行校验&lt;/p>
&lt;/blockquote>
&lt;p>在解析的过程中会去判断是Spring默认的Namespace还是用户自定义Namespace&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Spring 默认Element处理&lt;/p>
&lt;p>默认的Element: import,alias,bean,beans,这些都是由 &lt;strong>DefaultBeanDefinitionDocumentReader&lt;/strong> 提供默认解析&lt;/p>
&lt;/li>
&lt;li>
&lt;p>自定义的Element处理&lt;/p>
&lt;p>通过获取配置在 &lt;strong>META-INF/spring.handlers&lt;/strong> 文件中对应Namespace的处理类。这个Namespace的处理类实现 &lt;strong>NamespaceHandler或者NamespaceHandlerSupport&lt;/strong> 。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>然后调用NamespaceHandler具体实例的NamespaceHandler#parse方法对Element进行解析。&lt;/p>
&lt;h3 id="2-spring自定义xml的namespace实战">2. Spring自定义XML的Namespace实战&lt;/h3>
&lt;p>定义一个和Spring默认的bean拥有相同功能的Element,这个Element可以叫：&lt;strong>mxsmBean&lt;/strong>, 具体的步骤如下图：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/custom/Spring%20%E8%87%AA%E5%AE%9A%E4%B9%89XML%20Namespace%E6%AD%A5%E9%AA%A4.png" alt="Spring 自定义XML Namespace步骤">&lt;/p>
&lt;h4 id="21-xsd定义">2.1 XSD定义&lt;/h4>
&lt;p>通过XSD文件定义mxsmBean需要有哪些属性。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#8f5902;font-style:italic">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-16&amp;#34; ?&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;xsd:schema&lt;/span> &lt;span style="color:#c4a000">xmlns=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;https://github.com/mxsm/schema/mxsm&amp;#34;&lt;/span> &lt;span style="color:#a40000">(1)&lt;/span>
&lt;span style="color:#c4a000">xmlns:xsd=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;http://www.w3.org/2001/XMLSchema&amp;#34;&lt;/span>
&lt;span style="color:#c4a000">targetNamespace=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;https://github.com/mxsm/schema/mxsm&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;gt;&lt;/span> (2)
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;xsd:import&lt;/span> &lt;span style="color:#c4a000">namespace=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;http://www.springframework.org/schema/beans&amp;#34;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">/&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;xsd:element&lt;/span> &lt;span style="color:#c4a000">name=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;mxsmBean&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;xsd:complexType&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;xsd:attribute&lt;/span> &lt;span style="color:#c4a000">name=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;name&amp;#34;&lt;/span> &lt;span style="color:#c4a000">type=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;xsd:string&amp;#34;&lt;/span> &lt;span style="color:#c4a000">use=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;required&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">/&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;xsd:attribute&lt;/span> &lt;span style="color:#c4a000">name=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;class&amp;#34;&lt;/span> &lt;span style="color:#c4a000">type=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;xsd:string&amp;#34;&lt;/span> &lt;span style="color:#c4a000">use=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;required&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">/&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/xsd:complexType&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/xsd:element&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/xsd:schema&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>(1)和(2)是加自己的Namescape,XSD存放的位置如下：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/custom/image-20220119221646852.png" alt="image-20220119221646852">&lt;/p>
&lt;h4 id="22-编写namespacehandler接口实现">2.2 编写NamespaceHandler接口实现&lt;/h4>
&lt;p>这个接口主要是用来处理我们对应的Element。例如在 &lt;a href="https://github.com/mxsm/schema/mxsm">https://github.com/mxsm/schema/mxsm&lt;/a> 下面我只是定义application这个Element所以就只需要解析这一个就可以了。&lt;/p>
&lt;blockquote>
&lt;p>NamespaceHandlerSupport是实现了部分NamespaceHandler接口的抽象方法，一般情况下我们实现NamespaceHandlerSupport类&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">MxsmSchemaHandler&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">NamespaceHandlerSupport&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">init&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">registerBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;mxsmBean&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">MxsmBeanDefinitionParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//如果有多个Element就调用多个
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">MxsmBeanDefinitionParser&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">BeanDefinitionParser&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">BeanDefinition&lt;/span> &lt;span style="color:#000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Element&lt;/span> &lt;span style="color:#000">element&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ParserContext&lt;/span> &lt;span style="color:#000">parserContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">aClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">element&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;class&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">System&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">out&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">println&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">aClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">BeanDefinitionBuilder&lt;/span> &lt;span style="color:#000">beanDefinitionBuilder&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">BeanDefinitionBuilder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">genericBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">aClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">AbstractBeanDefinition&lt;/span> &lt;span style="color:#000">beanDefinition&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanDefinitionBuilder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">parserContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getRegistry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">registerBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">element&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">),&lt;/span> &lt;span style="color:#000">beanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">beanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>每一个对应的标签对应一个解析类，解析类实现 &lt;strong>BeanDefinitionParser&lt;/strong> 接口。&lt;/p>
&lt;h4 id="23-配置meta-infspringschemas和meta-infspringhandlers文件配置">2.3 配置META-INF/spring.schemas和META-INF/spring.handlers文件配置&lt;/h4>
&lt;p>&lt;strong>spring.schemas作用&lt;/strong>：配置自定义Namespace的xsd文件的存放位置&lt;/p>
&lt;pre>&lt;code class="language-properties" data-lang="properties">https\://github.com/mxsm/schema/mxsm/mxsm.xsd=com/github/mxsm/xml/xsd/mxsm.xsd
&lt;/code>&lt;/pre>&lt;p>spring.handlers作用：配置自定义Namespace对应的NamespaceHandler&lt;/p>
&lt;pre>&lt;code class="language-properties" data-lang="properties">https\://github.com/mxsm/schema/mxsm=com.github.mxsm.handler.MxsmSchemaHandler
&lt;/code>&lt;/pre>&lt;p>在项目中存放的位置如图：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/custom/image-20220119221852581.png" alt="image-20220119221852581">&lt;/p>
&lt;h4 id="24-spring-applicationxml文件中引入自定义的element">2.4 Spring application.xml文件中引入自定义的Element&lt;/h4>
&lt;p>创建Spring应用的xml文件。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#8f5902;font-style:italic">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;beans&lt;/span> &lt;span style="color:#c4a000">xmlns=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;http://www.springframework.org/schema/beans&amp;#34;&lt;/span>
&lt;span style="color:#c4a000">xmlns:xsi=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;span style="color:#c4a000">xmlns:mxsm=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;https://github.com/mxsm/schema/mxsm&amp;#34;&lt;/span> &lt;span style="color:#a40000">(1)&lt;/span>
&lt;span style="color:#c4a000">xmlns:context=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;http://www.springframework.org/schema/context&amp;#34;&lt;/span>
&lt;span style="color:#c4a000">xsi:schemaLocation=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;http://www.springframework.org/schema/beans
&lt;/span>&lt;span style="color:#4e9a06"> https://www.springframework.org/schema/beans/spring-beans.xsd
&lt;/span>&lt;span style="color:#4e9a06"> https://github.com/mxsm/schema/mxsm (2)
&lt;/span>&lt;span style="color:#4e9a06"> https://github.com/mxsm/schema/mxsm/mxsm.xsd (3)
&lt;/span>&lt;span style="color:#4e9a06"> http://www.springframework.org/schema/context
&lt;/span>&lt;span style="color:#4e9a06"> https://www.springframework.org/schema/context/spring-context.xsd&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;mxsm:mxsmBean&lt;/span> &lt;span style="color:#c4a000">class=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;com.github.mxsm.bean.MxsmBeanTest&amp;#34;&lt;/span> &lt;span style="color:#c4a000">name=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;test&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">/&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/beans&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>(1)、(2)，(3) 这三处在使用的时候需要加上。到这里为止，自定义的步骤都已经完成了。接下来就是进行验证我们能不能把这个类注入到Spring 容器中。这里我们写一段测试代码来检验：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">App&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">args&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ApplicationContext&lt;/span> &lt;span style="color:#000">context&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ClassPathXmlApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;application.xml&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//System.out.println(context.getBean(&amp;#34;aaaa&amp;#34;,String.class));
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">MxsmBeanTest&lt;/span> &lt;span style="color:#000">test&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;test&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">MxsmBeanTest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">System&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">out&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">println&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">test&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">MxsmBeanTest&lt;/span> &lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">MxsmBeanTest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">System&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">out&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">println&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">System&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">out&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">println&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">test&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后运行看一下结果：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/custom/image-20220119223247306.png" alt="image-20220119223247306">&lt;/p>
&lt;p>从运行结果来看能够获取到 &lt;strong>MxsmBeanTest&lt;/strong> 对应的实例，并且获取的还是单例。那么说明在我们创建默认的时候注册到Spring容器中的定义获取的类实例默认是已单例的形式。&lt;/p>
&lt;blockquote>
&lt;p>完整代码地址：https://github.com/mxsm/spring-sample/tree/master/namespace-handler&lt;/p>
&lt;/blockquote>
&lt;h3 id="3-总结">3. 总结&lt;/h3>
&lt;ul>
&lt;li>在自定义拓展前，首先你要知道你拓展的Element是干什么用的，然后在根据用途来进行解析。比如我上面这个mxsmBean就是为了实现一个简化版本的和Spring默认的Bean类似的功能。&lt;/li>
&lt;li>Namespace的XSD文件的编写，需要了解XSD的编写(教程参考：https://www.w3school.com.cn/schema/schema_example.asp)&lt;/li>
&lt;li>在接口层面需要实现NamespaceHandler以及BeanDefinitionParser接口，两者搭配以前使用。&lt;/li>
&lt;li>在文件META-INF/spring.schemas和META-INF/spring.handlers中添加对应配置，Spring会默认加载这两个文件中的配置进行解析。&lt;/li>
&lt;li>在Spring的xml配置文件中导入对应自定义的Namespace。&lt;/li>
&lt;/ul>
&lt;p>上面就是整个自定义命名空间的过程，步骤以及Spring怎么样去解析。如果想了解更多的细节可以去Spring的网站(&lt;a href="https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#xsd-schemas">https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#xsd-schemas&lt;/a>)了解。同时Spring自己也实现了一些例如 util（spring-util.xsd）。可以通过这些来学习。这样能够更好的明白和理解自定义的这个过程。&lt;/p></description></item><item><title>Spring-Framework: EnableTransactionManagement注解解析来看AOP</title><link>/spring-framework/core-source-analysis/spring-aop-enabletransactionmanagement/</link><pubDate>Tue, 27 Apr 2021 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/spring-aop-enabletransactionmanagement/</guid><description>
&lt;blockquote>
&lt;p>基于spring 5.3.5版本源码分析&lt;/p>
&lt;/blockquote>
&lt;h3 id="1-enabletransactionmanagement注解">1. EnableTransactionManagement注解&lt;/h3>
&lt;p>EnableXXX类的注解主要依赖于@Import注解进行拓展。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ElementType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">TYPE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Retention&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RetentionPolicy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">RUNTIME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Documented&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Import&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">TransactionManagementConfigurationSelector&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@interface&lt;/span> &lt;span style="color:#000">EnableTransactionManagement&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">proxyTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">AdviceMode&lt;/span> &lt;span style="color:#000">mode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#000">AdviceMode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PROXY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">order&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#000">Ordered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">LOWEST_PRECEDENCE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过代码可以知道，主要的逻辑都是通过 &lt;em>&lt;strong>TransactionManagementConfigurationSelector&lt;/strong>&lt;/em> 来实现的。&lt;/p>
&lt;h3 id="2-transactionmanagementconfigurationselector类">2. TransactionManagementConfigurationSelector类&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">TransactionManagementConfigurationSelector&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">AdviceModeImportSelector&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">EnableTransactionManagement&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">selectImports&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AdviceMode&lt;/span> &lt;span style="color:#000">adviceMode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">switch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">adviceMode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#000">PROXY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#000">AutoProxyRegistrar&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span>
&lt;span style="color:#000">ProxyTransactionManagementConfiguration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()};&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#000">ASPECTJ&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#000">determineTransactionAspectClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()};&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">determineTransactionAspectClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isPresent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;javax.transaction.Transactional&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">?&lt;/span>
&lt;span style="color:#000">TransactionManagementConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">JTA_TRANSACTION_ASPECT_CONFIGURATION_CLASS_NAME&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span>
&lt;span style="color:#000">TransactionManagementConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">TRANSACTION_ASPECT_CONFIGURATION_CLASS_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>有代码可以看出来该类继承 &lt;em>&lt;strong>AdviceModeImportSelector&lt;/strong>&lt;/em> 类。分为了两种情况根据AdviceMode&lt;/p>
&lt;ul>
&lt;li>&lt;strong>AdviceMode.PROXY&lt;/strong>&lt;br>
这个也是默认情况，主要使用的是JDK代理实现通知&lt;/li>
&lt;li>&lt;strong>AdviceMode.ASPECTJ&lt;/strong>&lt;br>
使用ASPECTJ来实现通知&lt;/li>
&lt;/ul>
&lt;h3 id="3-autoproxyregistrar类">3. AutoProxyRegistrar类&lt;/h3>
&lt;p>AutoProxyRegistrar类实现了ImportBeanDefinitionRegistrar接口。通过获取EnableTransactionManagement注解的值来确定使用何种模式以及何种代理来实现Aop.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">AutoProxyRegistrar&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">ImportBeanDefinitionRegistrar&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">registerBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AnnotationMetadata&lt;/span> &lt;span style="color:#000">importingClassMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanDefinitionRegistry&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">candidateFound&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">annTypes&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">importingClassMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAnnotationTypes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">annType&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">annTypes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">AnnotationAttributes&lt;/span> &lt;span style="color:#000">candidate&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">attributesFor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">importingClassMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">annType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidate&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">continue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">mode&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;mode&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">proxyTargetClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">candidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;proxyTargetClass&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mode&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">proxyTargetClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">AdviceMode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">mode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span>
&lt;span style="color:#000">Boolean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">proxyTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">candidateFound&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置代理创建者AutoProxyCreator
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mode&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">AdviceMode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PROXY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">AopConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerAutoProxyCreatorIfNecessary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置使用代理的方式
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">Boolean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">proxyTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">AopConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">forceAutoProxyCreatorToUseClassProxying&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>注入InfrastructureAdvisorAutoProxyCreator到Spring容器&lt;/p>
&lt;p>该类是一个InstantiationAwareBeanPostProcessor实现类。通过postProcessBeforeInstantiation方法或者postProcessAfterInitialization来创建代理。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#8f5902;font-style:italic">//AbstractAutoProxyCreator#postProcessAfterInitialization
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">postProcessAfterInitialization&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">cacheKey&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getCacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">earlyProxyReferences&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">remove&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">wrapIfNecessary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>AbstractAutoProxyCreator#wrapIfNecessary用来创建代理对象如果有advice的情况&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">wrapIfNecessary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">StringUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">hasLength&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">targetSourcedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contains&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Boolean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">FALSE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">equals&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advisedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">isInfrastructureClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#000">shouldSkip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advisedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Boolean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">FALSE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 获取回调拦截器（AOP核心：代理和回调拦截器）
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">specificInterceptors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getAdvicesAndAdvisorsForBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">specificInterceptors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#000">DO_NOT_PROXY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advisedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Boolean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">TRUE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">proxy&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">createProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">specificInterceptors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">SingletonTargetSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">proxyTypes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advisedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Boolean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">FALSE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>设置代理方式，false为jdk代理，true为cglib代理&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>在代理加入了切面的实现&lt;/p>
&lt;/blockquote>
&lt;h3 id="4-proxytransactionmanagementconfiguration类">4. ProxyTransactionManagementConfiguration类&lt;/h3>
&lt;p>这个配主要管理配置代理事务&lt;/p>
&lt;ul>
&lt;li>创建TransactionAttributeSource对象&lt;/li>
&lt;li>创建TransactionInterceptor，依赖TransactionAttributeSource&lt;/li>
&lt;li>创建BeanFactoryTransactionAttributeSourceAdvisor属性通知器。依赖创建TransactionAttributeSource、创建TransactionInterceptor。&lt;/li>
&lt;/ul>
&lt;h4 id="41-annotationtransactionattributesource类">4.1 AnnotationTransactionAttributeSource类&lt;/h4>
&lt;p>方法主要用来解析注解@Transactional。同时还兼容了jta和ejb。Spring的@Transactional解析类 &lt;em>&lt;strong>SpringTransactionAnnotationParser&lt;/strong>&lt;/em>&lt;/p>
&lt;blockquote>
&lt;p>默认AnnotationTransactionAttributeSource的创建为只能公共方法能够使用@Transactional注解&lt;/p>
&lt;/blockquote>
&lt;h4 id="42-transactioninterceptor类">4.2 TransactionInterceptor类&lt;/h4>
&lt;p>主要处理@Transactional注解切面，执行方法的处理。&lt;/p>
&lt;h3 id="5-事务执行逻辑">5 事务执行逻辑&lt;/h3>
&lt;p>事务执行分为两步：&lt;/p>
&lt;ol>
&lt;li>代理对象创建&lt;/li>
&lt;li>代理对象执行方法&lt;/li>
&lt;/ol>
&lt;h4 id="51-代理对象创建">5.1 代理对象创建&lt;/h4>
&lt;p>在 &lt;em>&lt;strong>AbstractAutoProxyCreator&lt;/strong>&lt;/em> 类继承了 &lt;em>&lt;strong>SmartInstantiationAwareBeanPostProcessor&lt;/strong>&lt;/em> 通过 &lt;em>&lt;strong>AbstractAutoProxyCreator#postProcessAfterInitialization&lt;/strong>&lt;/em> 来创建代理对象。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">postProcessAfterInitialization&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">cacheKey&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getCacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">earlyProxyReferences&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">remove&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//创建代理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">wrapIfNecessary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">wrapIfNecessary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略部分代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取要代理类是否含有切面-创建代理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">specificInterceptors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getAdvicesAndAdvisorsForBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">specificInterceptors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#000">DO_NOT_PROXY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advisedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Boolean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">TRUE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//创建代理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">proxy&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">createProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">specificInterceptors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">SingletonTargetSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">proxyTypes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advisedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Boolean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">FALSE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过在代理类中设置切面的数据，然后创建代理类为后续的执行提供切面的功能。&lt;/p>
&lt;h4 id="52-代理对象执行方法">5.2 代理对象执行方法&lt;/h4>
&lt;p>代理类的执行我们首先要了解代理类是如何创建的。首先来了解一下Spring中AOP代理的类图结构：&lt;br>
&lt;img src="https://github.com/mxsm/picture/blob/main/spring/aopproxy%E7%BB%A7%E6%89%BF%E5%85%B3%E7%B3%BB%E5%9B%BE.png?raw=true" alt="image">&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">AopProxy&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">getProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">getProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">ClassLoader&lt;/span> &lt;span style="color:#000">classLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个就是创建代理的接口。下面来看一下实现用CglibAopProxy举例分析，代理创建就是cglib的标准创建方式。然后通过设置类的Callback来将切面结合到里面。看一下代码：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">getProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">ClassLoader&lt;/span> &lt;span style="color:#000">classLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略部分代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Enhancer&lt;/span> &lt;span style="color:#000">enhancer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">createEnhancer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">classLoader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">enhancer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">classLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">classLoader&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">SmartClassLoader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">SmartClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">classLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">isClassReloadable&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">proxySuperClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">enhancer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setUseCache&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">enhancer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setSuperclass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">proxySuperClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">enhancer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setInterfaces&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AopProxyUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">completeProxiedInterfaces&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advised&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">enhancer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setNamingPolicy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">SpringNamingPolicy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">INSTANCE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">enhancer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setStrategy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ClassLoaderAwareGeneratorStrategy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">classLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//重要方法：获取Callback
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Callback&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">callbacks&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getCallbacks&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">rootClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;[]&lt;/span> &lt;span style="color:#000">types&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;[&lt;/span>&lt;span style="color:#000">callbacks&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">length&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">];&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">x&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">0&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span> &lt;span style="color:#000">x&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span> &lt;span style="color:#000">types&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">length&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span> &lt;span style="color:#000">x&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">++)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">types&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#000">x&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">callbacks&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#000">x&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">].&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置CallbackFilter
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">enhancer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setCallbackFilter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ProxyCallbackFilter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advised&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getConfigurationOnlyCopy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">fixedInterceptorMap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">fixedInterceptorOffset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">enhancer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setCallbackTypes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">types&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">createProxyClassAndInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">enhancer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">callbacks&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>上面比较重要的一个方法就是 &lt;em>&lt;strong>getCallbacks&lt;/strong>&lt;/em> 方法。主要用来创建代理对象的Callback(这里主要是cglib的MethodInterceptor)：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#000">Callback&lt;/span> &lt;span style="color:#000">aopInterceptor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">DynamicAdvisedInterceptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advised&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建了一个动态通知拦截器。 &lt;em>&lt;strong>DynamicAdvisedInterceptor&lt;/strong>&lt;/em> 是 CglibAopProxy 内部静态类。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">FixedChainStaticTargetInterceptor&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">MethodInterceptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Serializable&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">intercept&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Method&lt;/span> &lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">MethodProxy&lt;/span> &lt;span style="color:#000">methodProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略了部分无关紧要的代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">oldProxy&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">setProxyContext&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">target&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">TargetSource&lt;/span> &lt;span style="color:#000">targetSource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advised&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTargetSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advised&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">exposeProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Make invocation available if necessary.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">oldProxy&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">AopContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setCurrentProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">setProxyContext&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Get as late as possible to minimize the time we &amp;#34;own&amp;#34; the target, in case it comes from a pool...
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">target&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">targetSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTarget&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">targetClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">target&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">?&lt;/span> &lt;span style="color:#000">target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">chain&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advised&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getInterceptorsAndDynamicInterceptionAdvice&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">targetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">retVal&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Check whether we only have one InvokerInterceptor: that is,
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// no real advice, but just reflective invocation of the target.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">chain&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">Modifier&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isPublic&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getModifiers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//跳过代理直接在线目标类的方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">argsToUse&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">AopProxyUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">adaptArgumentsIfNecessary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">retVal&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">methodProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">invoke&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">argsToUse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//创建一个cglib方法Invocation去执行
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">retVal&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">CglibMethodInvocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">targetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">chain&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">methodProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">proceed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">retVal&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">processReturnType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">retVal&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">retVal&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建的 &lt;strong>CglibMethodInvocation&lt;/strong> 最终是执行了 &lt;strong>ReflectiveMethodInvocation#proceed&lt;/strong> 方法：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">proceed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">currentInterceptorIndex&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">interceptorsAndDynamicMethodMatchers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">size&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#000">1&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">invokeJoinpoint&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">interceptorOrInterceptionAdvice&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">interceptorsAndDynamicMethodMatchers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(++&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">currentInterceptorIndex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">interceptorOrInterceptionAdvice&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">InterceptorAndDynamicMethodMatcher&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">InterceptorAndDynamicMethodMatcher&lt;/span> &lt;span style="color:#000">dm&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">InterceptorAndDynamicMethodMatcher&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">interceptorOrInterceptionAdvice&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">targetClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">targetClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">?&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">targetClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getDeclaringClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">methodMatcher&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">matches&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">targetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">arguments&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">dm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">interceptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">invoke&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">proceed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//执行实现了MethodInterceptor接口的方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">MethodInterceptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">interceptorOrInterceptionAdvice&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">invoke&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里对于@Transactional注解来说 ((MethodInterceptor) interceptorOrInterceptionAdvice).invoke(this) 这行代码里面的 MethodInterceptor实现就是前面在 &lt;em>&lt;strong>ProxyTransactionManagementConfiguration&lt;/strong>&lt;/em> 里面实例化的 &lt;em>&lt;strong>TransactionInterceptor&lt;/strong>&lt;/em> 类。在这个类里面包含了处理整个事务&lt;/p>
&lt;h3 id="6-总结">6. 总结&lt;/h3>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/%E4%BA%8B%E5%8A%A1%E4%BB%A3%E7%90%86%E5%88%9B%E5%BB%BA.png?raw=true" alt="">&lt;/p></description></item><item><title>Spring-Framework: Spring事务处理源码解析</title><link>/spring-framework/core-source-analysis/transaction-processing/</link><pubDate>Thu, 29 Apr 2021 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/transaction-processing/</guid><description>
&lt;blockquote>
&lt;p>基于spring 5.3.5版本源码分析&lt;/p>
&lt;/blockquote>
&lt;p>事务处理的逻辑主要在 &lt;em>&lt;strong>MethodInterceptor&lt;/strong>&lt;/em> 中，下面通过源码来解析Spring是如何处理事务的。&lt;/p>
&lt;h3 id="1-入口方法methodinterceptorinvoke">1. 入口方法MethodInterceptor#invoke&lt;/h3>
&lt;p>这个方法是事务执行的入口:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">invoke&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">MethodInvocation&lt;/span> &lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">targetClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getThis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">?&lt;/span> &lt;span style="color:#000">AopUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getThis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//事务处理的主要逻辑
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">invokeWithinTransaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">targetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">CoroutinesInvocationCallback&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">proceedWithInvocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">proceed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">getTarget&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getThis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">getArguments&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getArguments&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">});&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-transactionaspectsupportinvokewithintransaction方法">2. TransactionAspectSupport#invokeWithinTransaction方法&lt;/h3>
&lt;p>这个方法主要包含了两部分：&lt;/p>
&lt;ul>
&lt;li>响应式编程事务支持(ReactiveTransactionManager类添加与Spring5.2版本)&lt;/li>
&lt;li>标准的的事务支持&lt;/li>
&lt;/ul>
&lt;p>响应式后续分析。我们来分析一下标准的事务支持：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#8f5902;font-style:italic">// 重点：是否需要创建事务
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">TransactionInfo&lt;/span> &lt;span style="color:#000">txInfo&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">createTransactionIfNecessary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ptm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">txAttr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">joinpointIdentification&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">retVal&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 这是一个around advice: 调用链中的下一个拦截器.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// 这通常会导致调用目标对象.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">retVal&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">proceedWithInvocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 事务的异常处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">completeTransactionAfterThrowing&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">txInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">finally&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//清理事务的信息
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">cleanupTransactionInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">txInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">retVal&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">vavrPresent&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">VavrDelegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isVavrTry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">retVal&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Set rollback-only in case of Vavr failure matching our rollback rules...
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">TransactionStatus&lt;/span> &lt;span style="color:#000">status&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">txInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTransactionStatus&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">status&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">txAttr&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">retVal&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">VavrDelegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">evaluateTryFailure&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">retVal&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">txAttr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">status&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//提交事务
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">commitTransactionAfterReturning&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">txInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">retVal&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>事务主要是通过 &lt;em>&lt;strong>TransactionAspectSupport#createTransactionIfNecessary&lt;/strong>&lt;/em> 方法获取，然后执行目标方法获取方法返回结果。如果有问题处理问题，根据情况(配置的事务传递性和事务回滚的Execption)是否对事务进行回滚。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">TransactionInfo&lt;/span> &lt;span style="color:#000">createTransactionIfNecessary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">PlatformTransactionManager&lt;/span> &lt;span style="color:#000">tm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">TransactionAttribute&lt;/span> &lt;span style="color:#000">txAttr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">joinpointIdentification&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 处理txAttr没有名字的情况
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">txAttr&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">txAttr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">txAttr&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">DelegatingTransactionAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">txAttr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">joinpointIdentification&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">};&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">TransactionStatus&lt;/span> &lt;span style="color:#000">status&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">txAttr&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">tm&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//重点：通过PlatformTransactionManager管理获取事务状态
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">status&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTransaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">txAttr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isDebugEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">debug&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Skipping transactional joinpoint [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">joinpointIdentification&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;] because no transaction manager has been configured&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//将TransactionStatus包装成TransactionInfo
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">prepareTransactionInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">tm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">txAttr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">joinpointIdentification&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">status&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-事务传播">3. 事务传播&lt;/h3>
&lt;p>在通过注解@Transactional管理事务的时候需要配置Propagation的值。默认为Propagation.REQUIRED,下面来看一下AbstractPlatformTransactionManager#getTransaction。方法主要逻辑为两个：&lt;/p>
&lt;ol>
&lt;li>存在事务如何处理&lt;/li>
&lt;li>没有存在事务如何处理&lt;/li>
&lt;/ol>
&lt;p>这里就涉及到了根据事务的传播方式来处理事务。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">TransactionStatus&lt;/span> &lt;span style="color:#000">getTransaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span> &lt;span style="color:#000">definition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">TransactionException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Use defaults if no transaction definition given.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span> &lt;span style="color:#000">def&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">definition&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">?&lt;/span> &lt;span style="color:#000">definition&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">withDefaults&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">transaction&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">doGetTransaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">debugEnabled&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isDebugEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//重点：判断是否存在事务
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">isExistingTransaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">transaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 存在事务 -&amp;gt; 检查 propagation 来决定如何处理.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">handleExistingTransaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">transaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">debugEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//重点： 下面就是处理没有事务，根据propagation决定如何处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTimeout&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">TIMEOUT_DEFAULT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">InvalidTimeoutException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Invalid transaction timeout&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTimeout&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getPropagationBehavior&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PROPAGATION_MANDATORY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">IllegalTransactionStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;No existing transaction found for transaction marked with propagation &amp;#39;mandatory&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getPropagationBehavior&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PROPAGATION_REQUIRED&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getPropagationBehavior&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PROPAGATION_REQUIRES_NEW&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getPropagationBehavior&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PROPAGATION_NESTED&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">SuspendedResourcesHolder&lt;/span> &lt;span style="color:#000">suspendedResources&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">suspend&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">debugEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">debug&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Creating new transaction with name [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;]: &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">startTransaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">transaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">debugEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">suspendedResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RuntimeException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">|&lt;/span> &lt;span style="color:#000">Error&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">resume&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">suspendedResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Create &amp;#34;empty&amp;#34; transaction: no actual transaction, but potentially synchronization.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getIsolationLevel&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">ISOLATION_DEFAULT&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isWarnEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">warn&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Custom isolation level specified but no actual transaction initiated; &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;isolation level will effectively be ignored: &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">newSynch&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="31-当前存在事务的传播属性">3.1 当前存在事务的传播属性&lt;/h4>
&lt;p>方法主要是 AbstractPlatformTransactionManager#handleExistingTransaction：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>NEVER&lt;/p>
&lt;p>存在事务就报错&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">definition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getPropagationBehavior&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PROPAGATION_NEVER&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">IllegalTransactionStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Existing transaction found for transaction marked with propagation &amp;#39;never&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>NOT_SUPPORTED&lt;/p>
&lt;p>把当前事务挂起,强制不在事务中运行&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">definition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getPropagationBehavior&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PROPAGATION_NOT_SUPPORTED&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//挂起当前事务
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">suspendedResources&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">suspend&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">transaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">newSynchronization&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getTransactionSynchronization&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">SYNCHRONIZATION_ALWAYS&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">prepareTransactionStatus&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">definition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">newSynchronization&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">debugEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">suspendedResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>REQUIRES_NEW&lt;/p>
&lt;p>挂起当前事务，创建一个新事务&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">definition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getPropagationBehavior&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PROPAGATION_REQUIRES_NEW&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//挂起已有事务
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">SuspendedResourcesHolder&lt;/span> &lt;span style="color:#000">suspendedResources&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">suspend&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">transaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//开启一个新的事务
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">startTransaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">definition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">transaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">debugEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">suspendedResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RuntimeException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">|&lt;/span> &lt;span style="color:#000">Error&lt;/span> &lt;span style="color:#000">beginEx&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">resumeAfterBeginException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">transaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">suspendedResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beginEx&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">beginEx&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>NESTED&lt;/p>
&lt;p>在当前事务中创建一个嵌套事务&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">definition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getPropagationBehavior&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PROPAGATION_NESTED&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否允许嵌套事务
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">isNestedTransactionAllowed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">NestedTransactionNotSupportedException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Transaction manager does not allow nested transactions by default - &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;specify &amp;#39;nestedTransactionAllowed&amp;#39; property with value &amp;#39;true&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">useSavepointForNestedTransaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 已存在的事务创建savepoint通过TransactionStatus的SavepointManager API来实现
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//通常使用JDBC 3.0保存点。从不激活Spring同步
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">DefaultTransactionStatus&lt;/span> &lt;span style="color:#000">status&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#000">prepareTransactionStatus&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">definition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">transaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">debugEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">status&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">createAndHoldSavepoint&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">status&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//JTA通过提交和回滚
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">startTransaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">definition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">transaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">debugEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>REQUIRED、SUPPORTS、MANDATORY&lt;/p>
&lt;p>这三个都是使用当前事务&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="32-不存在事务的传播性">3.2 不存在事务的传播性&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>MANDATORY&lt;/p>
&lt;p>抛异常&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getPropagationBehavior&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PROPAGATION_MANDATORY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">IllegalTransactionStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;No existing transaction found for transaction marked with propagation &amp;#39;mandatory&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>REQUIRED、REQUIRES_NEW、NESTED&lt;/p>
&lt;p>新建事务&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getPropagationBehavior&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PROPAGATION_REQUIRED&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getPropagationBehavior&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PROPAGATION_REQUIRES_NEW&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getPropagationBehavior&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PROPAGATION_NESTED&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">SuspendedResourcesHolder&lt;/span> &lt;span style="color:#000">suspendedResources&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">suspend&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">startTransaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">transaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">debugEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">suspendedResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RuntimeException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">|&lt;/span> &lt;span style="color:#000">Error&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">resume&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">suspendedResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>SUPPORTS、NOT_SUPPORTED、NEVER&lt;/p>
&lt;p>以非事务的方式运行&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Create &amp;#34;empty&amp;#34; transaction: no actual transaction, but potentially synchronization.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">newSynchronization&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getTransactionSynchronization&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">SYNCHRONIZATION_ALWAYS&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">prepareTransactionStatus&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">newSynchronization&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">debugEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="4-事务类型传播终结">4. 事务类型传播终结&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">&lt;/th>
&lt;th style="text-align:center">不存在事务&lt;/th>
&lt;th style="text-align:center">存在事务&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">REQUIRED&lt;/td>
&lt;td style="text-align:center">新建事务&lt;/td>
&lt;td style="text-align:center">使用当前事务&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">REQUIRES_NEW&lt;/td>
&lt;td style="text-align:center">新建事务&lt;/td>
&lt;td style="text-align:center">挂起当前事务，创建一个新的事务&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">NESTED&lt;/td>
&lt;td style="text-align:center">新建事务&lt;/td>
&lt;td style="text-align:center">在当前事务中创建一个嵌套事务&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">MANDATORY&lt;/td>
&lt;td style="text-align:center">抛异常&lt;/td>
&lt;td style="text-align:center">使用当前事务&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">SUPPORTS&lt;/td>
&lt;td style="text-align:center">非事务运行&lt;/td>
&lt;td style="text-align:center">使用当前事务&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">NOT_SUPPORTED&lt;/td>
&lt;td style="text-align:center">非事务运行&lt;/td>
&lt;td style="text-align:center">挂起当前事务，强制不在事务中运行&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">NEVER&lt;/td>
&lt;td style="text-align:center">非事务运行&lt;/td>
&lt;td style="text-align:center">抛异常&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="5-事务回滚">5. 事务回滚&lt;/h3>
&lt;p>当设置了事务如果存在执行方法出现错误，就会对事务进行回滚。下面看一下 &lt;strong>&lt;code>TransactionAspectSupport#completeTransactionAfterThrowing&lt;/code>&lt;/strong> 方法主要负责回滚事务：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">completeTransactionAfterThrowing&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">TransactionInfo&lt;/span> &lt;span style="color:#000">txInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">txInfo&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">txInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTransactionStatus&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">txInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">transactionAttribute&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">txInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">transactionAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">rollbackOn&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//回滚事务
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">txInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTransactionManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">rollback&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">txInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTransactionStatus&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">TransactionSystemException&lt;/span> &lt;span style="color:#000">ex2&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">error&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Application exception overridden by rollback exception&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">ex2&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">initApplicationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex2&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RuntimeException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">|&lt;/span> &lt;span style="color:#000">Error&lt;/span> &lt;span style="color:#000">ex2&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">error&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Application exception overridden by rollback exception&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex2&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//不想回滚当前exception提交事务
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">txInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTransactionManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">commit&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">txInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTransactionStatus&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">TransactionSystemException&lt;/span> &lt;span style="color:#000">ex2&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">error&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Application exception overridden by commit exception&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">ex2&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">initApplicationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex2&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RuntimeException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">|&lt;/span> &lt;span style="color:#000">Error&lt;/span> &lt;span style="color:#000">ex2&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">error&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Application exception overridden by commit exception&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex2&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="6-事务提交">6. 事务提交&lt;/h3>
&lt;p>当方法执行完成，需要提交事务，提交是由 &lt;strong>&lt;code>TransactionAspectSupport#commitTransactionAfterReturning&lt;/code>&lt;/strong> 处理事务提交：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">commitTransactionAfterReturning&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">TransactionInfo&lt;/span> &lt;span style="color:#000">txInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">txInfo&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">txInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTransactionStatus&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">txInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTransactionManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">commit&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">txInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTransactionStatus&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Spring-Framework: Spring AOP 源码解析</title><link>/spring-framework/spring-aop/aop-source-analysis/</link><pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate><guid>/spring-framework/spring-aop/aop-source-analysis/</guid><description>
&lt;blockquote>
&lt;p>Spring framework版本 5.3.x&lt;/p>
&lt;/blockquote>
&lt;h3 id="1-基本概念">1. 基本概念&lt;/h3>
&lt;p>AOP 是面向切面｜面向方面编程的简称，Aspect-Oriented Programming。 Aspect 是一种模块化机制，是用来描述分散在对象，类，函数中的横切关注点。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>基础&lt;/strong>： 待增强对象或者目标对象&lt;/li>
&lt;li>&lt;strong>切面&lt;/strong>： 包含对基础的增强应用&lt;/li>
&lt;li>&lt;strong>配置&lt;/strong>： 可以看成一种编织，通过在AOP体系中提供这个配置环境，将基础和切面结合起来，从而完成切面对目标对象的编织实现&lt;/li>
&lt;li>&lt;strong>Advice（通知）&lt;/strong>： 定义在连接点做什么，为切面增强提供织入接口。在Spring AOP 中，它主要描述Spring AOP 围绕方法调用而注入的切面行为。&lt;/li>
&lt;li>&lt;strong>Pointcut（切点）&lt;/strong>：决定Advice通知应该作用于哪个连接点，也就是说通过Pointcut来定义需要增强的方法集合。&lt;/li>
&lt;li>&lt;strong>Advisor（通知器）&lt;/strong>：完成对目标方法的切面增强设计（advice）和关注点的设计以后，需要一个对象把它们结合起来，完成这个作用的就是Advisor（通知器）。通过Advisor ，可以定义应该使用那个通知并在哪个关注点使用它。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/aop/Pointcut,Advice,Advisor%E4%B8%89%E8%80%85%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB.png?raw=true" alt="">&lt;/p>
&lt;h3 id="2-源码解析">2. 源码解析&lt;/h3>
&lt;blockquote>
&lt;p>源码解析以注解为分析&lt;/p>
&lt;/blockquote>
&lt;p>通过 &lt;strong>&lt;code>@EnableAspectJAutoProxy&lt;/code>&lt;/strong> 注解开开启AOP:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ElementType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">TYPE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Retention&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RetentionPolicy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">RUNTIME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Documented&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Import&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AspectJAutoProxyRegistrar&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@interface&lt;/span> &lt;span style="color:#000">EnableAspectJAutoProxy&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * false:表示使用java代理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * true：表示使用cglib代理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">proxyTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 代理的暴露方式,解决内部调用不能使用代理的场景，默认为false
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">exposeProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>注解使用 &lt;strong>&lt;code>@Import&lt;/code>&lt;/strong> 注解引入了 &lt;strong>&lt;code>AspectJAutoProxyRegistrar&lt;/code>&lt;/strong> 类，接下来跟踪一下 &lt;strong>&lt;code>AspectJAutoProxyRegistrar&lt;/code>&lt;/strong> 类&lt;/p>
&lt;h4 id="21-aspectjautoproxyregistrar源码解析">2.1 AspectJAutoProxyRegistrar源码解析&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">AspectJAutoProxyRegistrar&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">ImportBeanDefinitionRegistrar&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">registerBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">AnnotationMetadata&lt;/span> &lt;span style="color:#000">importingClassMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanDefinitionRegistry&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//注册AnnotationAwareAspectJAutoProxyCreator
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">AopConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerAspectJAnnotationAutoProxyCreatorIfNecessary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//读取配置的注解EnableAspectJAutoProxy属性
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">AnnotationAttributes&lt;/span> &lt;span style="color:#000">enableAspectJAutoProxy&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">attributesFor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">importingClassMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">EnableAspectJAutoProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">enableAspectJAutoProxy&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">enableAspectJAutoProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBoolean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;proxyTargetClass&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">AopConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">forceAutoProxyCreatorToUseClassProxying&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">enableAspectJAutoProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBoolean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;exposeProxy&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">AopConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">forceAutoProxyCreatorToExposeProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过源代码发现 &lt;strong>&lt;code>AspectJAutoProxyRegistrar&lt;/code>&lt;/strong> 实现了 &lt;strong>&lt;code>ImportBeanDefinitionRegistrar&lt;/code>&lt;/strong> 接口，在Spring容器启动的时候会调用 &lt;strong>&lt;code>ImportBeanDefinitionRegistrar#registerBeanDefinitions&lt;/code>&lt;/strong> 方法来注入 &lt;strong>&lt;code>AnnotationAwareAspectJAutoProxyCreator&lt;/code>&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#000">AopConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerAspectJAnnotationAutoProxyCreatorIfNecessary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>注册的Bean名称为:org.springframework.aop.config.internalAutoProxyCreator&lt;/p>
&lt;/blockquote>
&lt;p>最终调用的是 &lt;strong>&lt;code>AopConfigUtils#registerOrEscalateApcAsRequired&lt;/code>&lt;/strong> 方法&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#000">BeanDefinition&lt;/span> &lt;span style="color:#000">registerOrEscalateApcAsRequired&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">cls&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanDefinitionRegistry&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">source&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">notNull&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;BeanDefinitionRegistry must not be null&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AUTO_PROXY_CREATOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanDefinition&lt;/span> &lt;span style="color:#000">apcDefinition&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AUTO_PROXY_CREATOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">cls&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">equals&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">apcDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">currentPriority&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">findPriorityForClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">apcDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">requiredPriority&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">findPriorityForClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cls&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentPriority&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span> &lt;span style="color:#000">requiredPriority&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">apcDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setBeanClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cls&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">beanDefinition&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cls&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">source&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getPropertyValues&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;order&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Ordered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">HIGHEST_PRECEDENCE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setRole&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">ROLE_INFRASTRUCTURE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AUTO_PROXY_CREATOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">beanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>到这里 &lt;strong>&lt;code>AnnotationAwareAspectJAutoProxyCreator&lt;/code>&lt;/strong> 类注册完成。接下来看 &lt;strong>&lt;code>AnnotationAwareAspectJAutoProxyCreator&lt;/code>&lt;/strong> 是如何创建代理类的。&lt;/p>
&lt;h4 id="22-annotationawareaspectjautoproxycreator源码解析">2.2 AnnotationAwareAspectJAutoProxyCreator源码解析&lt;/h4>
&lt;p>首先看一下类的继承关系：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/aop/AnnotationAwareAspectJAutoProxyCreator.png?raw=true" alt="">&lt;/p>
&lt;p>通过继承关系发现实现了 &lt;strong>&lt;code>SmartInstantiationAwareBeanPostProcessor，BeanFactoryAware，InstantiationAwareBeanPostProcessor，BeanPostProcessor&lt;/code>&lt;/strong>。 下面看一下接口执行的方式：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/aop/AOP%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B%E5%9B%BE.png?raw=true" alt="">&lt;/p>
&lt;p>&lt;strong>&lt;code>AbstractAutoProxyCreator&lt;/code>&lt;/strong> 重写了 &lt;strong>&lt;code>BeanPostProcessor#postProcessAfterInitialization方法 和InstantiationAwareBeanPostProcessor#postProcessBeforeInstantiation方法&lt;/code>&lt;/strong> ,接下来详细分析一下这个两个方法：&lt;/p>
&lt;h5 id="221-abstractautoproxycreatorpostprocessbeforeinstantiation">2.2.1 AbstractAutoProxyCreator#postProcessBeforeInstantiation&lt;/h5>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">postProcessBeforeInstantiation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取bean的key
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">cacheKey&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getCacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断bean是否已经处理过了，处理了的会放在targetSourcedBeans
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">StringUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">hasLength&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">targetSourcedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contains&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否包含了advise
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advisedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断类型和是否应该跳过
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">isInfrastructureClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#000">shouldSkip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advisedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Boolean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">FALSE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">TargetSource&lt;/span> &lt;span style="color:#000">targetSource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getCustomTargetSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">targetSource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">StringUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">hasLength&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">targetSourcedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取通知和通知器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">specificInterceptors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getAdvicesAndAdvisorsForBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">targetSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//创建代理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">proxy&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">createProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">specificInterceptors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">targetSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">proxyTypes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="221-abstractautoproxycreatorpostprocessafterinitialization">2.2.1 AbstractAutoProxyCreator#postProcessAfterInitialization&lt;/h5>
&lt;p>看一下这个方法的调用链：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/aop/AbstractAutoProxyCreator%23postProcessAfterInitialization%E8%B0%83%E7%94%A8%E9%93%BE.png?raw=true" alt="">&lt;/p>
&lt;p>下面看一下 &lt;strong>&lt;code>AbstractAutoProxyCreator#postProcessAfterInitialization&lt;/code>&lt;/strong> 方法：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">postProcessAfterInitialization&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">cacheKey&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getCacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">earlyProxyReferences&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">remove&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//包装成代理类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">wrapIfNecessary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>主要生成代理类的方法是 &lt;code>wrapIfNecessary&lt;/code> 下面来看一下具体实现：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">wrapIfNecessary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//创建代理类的前面校验和检测
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">StringUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">hasLength&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">targetSourcedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contains&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Boolean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">FALSE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">equals&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advisedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否生成代理对象
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">isInfrastructureClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#000">shouldSkip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advisedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Boolean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">FALSE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 获取通知和通知器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">specificInterceptors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getAdvicesAndAdvisorsForBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">specificInterceptors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#000">DO_NOT_PROXY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advisedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Boolean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">TRUE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//创建代理对象
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">proxy&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">createProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">specificInterceptors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">SingletonTargetSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">proxyTypes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advisedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cacheKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Boolean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">FALSE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>&lt;code>getAdvicesAndAdvisorsForBean&lt;/code>&lt;/strong> 方法最终调用的是 &lt;strong>&lt;code>AbstractAdvisorAutoProxyCreator#getAdvicesAndAdvisorsForBean&lt;/code>&lt;/strong> 方法,进一步调用的是**&lt;code>AbstractAdvisorAutoProxyCreator#findEligibleAdvisors&lt;/code>** 方法：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Advisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">findEligibleAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//查找候选的Advisor
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Advisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">candidateAdvisors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">findCandidateAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//过滤出来可用的
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Advisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">eligibleAdvisors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">findAdvisorsThatCanApply&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidateAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">extendAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">eligibleAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">eligibleAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">eligibleAdvisors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">sortAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">eligibleAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">eligibleAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>&lt;strong>findCandidateAdvisors&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#a40000">#&lt;/span>&lt;span style="color:#000">AnnotationAwareAspectJAutoProxyCreator实现类&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Advisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">findCandidateAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 根据父类规则查找所有的Spring advisor
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Advisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">advisors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">super&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">findCandidateAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">aspectJAdvisorsBuilder&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//查找所有的Aspect（标注了注解的@Aspect的Bean) 并且解析
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">advisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAll&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">aspectJAdvisorsBuilder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">buildAspectJAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">advisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>findAdvisorsThatCanApply&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Advisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">findAdvisorsThatCanApply&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Advisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">candidateAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ProxyCreationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setCurrentProxiedBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">AopUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">findAdvisorsThatCanApply&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidateAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">finally&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ProxyCreationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setCurrentProxiedBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>到这里这两个方法就分析完成了。当获取到了通知和通知器就开始创建代理对象&lt;/p>
&lt;h5 id="222-abstractautoproxycreatorcreateproxy创建代理类">2.2.2 AbstractAutoProxyCreator#createProxy创建代理类&lt;/h5>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">createProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">specificInterceptors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">TargetSource&lt;/span> &lt;span style="color:#000">targetSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">beanFactory&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">ConfigurableListableBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">AutoProxyUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">exposeTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">ConfigurableListableBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//创建代理工厂
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ProxyFactory&lt;/span> &lt;span style="color:#000">proxyFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ProxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">copyFrom&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断使用jdk代理还是CGLIB代理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isProxyTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Explicit handling of JDK proxy targets (for introduction advice scenarios)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Proxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isProxyClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Must allow for introductions; can&amp;#39;t just set interfaces to the proxy&amp;#39;s interfaces only.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">ifc&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getInterfaces&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addInterface&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ifc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// No proxyTargetClass flag enforced, let&amp;#39;s apply our default checks...
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">shouldProxyTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setProxyTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">evaluateProxyInterfaces&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//加入通知器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Advisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">advisors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">buildAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">specificInterceptors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">advisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setTargetSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">targetSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">customizeProxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setFrozen&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">freezeProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">advisorsPreFiltered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setPreFiltered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Use original ClassLoader if bean class not locally loaded in overriding class loader
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ClassLoader&lt;/span> &lt;span style="color:#000">classLoader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getProxyClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">classLoader&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">SmartClassLoader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">classLoader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">classLoader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">SmartClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">classLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">getOriginalClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//创建代理对象
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">classLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-spring-创建bean的简易流程">3. Spring 创建Bean的简易流程&lt;/h3>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/aop/Spring%20Bean%E5%88%9B%E5%BB%BA%E6%B5%81%E7%A8%8B.png?raw=true" alt="">&lt;/p>
&lt;p>Bean的获取主要是通过BeanFactory获取，但是创建工作主要有BeanPostProcessor完成。代理类的创建就是通过 &lt;strong>AbstractAutoProxyCreator&lt;/strong> 类执行实现&lt;/p>
&lt;p>postProcessBeforeInstantiation 方法和 postProcessAfterInitialization 方法来对改变创建对象和对对象进行增强实现代理。&lt;/p>
&lt;h3 id="4-总结">4. 总结&lt;/h3>
&lt;p>Spring AOP的整个启动过程：&lt;/p>
&lt;ul>
&lt;li>创建 &lt;strong>&lt;code>BeanFactoryAdvisorRetrievalHelperAdapter&lt;/code>&lt;/strong> 类(通知器检索适配器)和 &lt;strong>&lt;code>BeanFactoryAspectJAdvisorsBuilderAdapter&lt;/code>&lt;/strong> 类&lt;/li>
&lt;li>调用 &lt;strong>&lt;code>AbstractAutoProxyCreator#postProcessBeforeInstantiation&lt;/code>&lt;/strong> 方法查找所有的Advisor和切面，将切面构建成Advisor&lt;/li>
&lt;li>调用 &lt;strong>&lt;code>AbstractAutoProxyCreator#postProcessAfterInitialization&lt;/code>&lt;/strong> 方法，从缓存取出所有的将所有的增强器，创建代理工厂，并织入增强器，创建代理对象&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Tips: 主要是通过实现 postProcessBeforeInstantiation 和 postProcessAfterInitialization 这两个方法来判断是否创建代理对象和如何创建代理&lt;/p>
&lt;/blockquote></description></item><item><title>Spring-Framework: Spring AOP Apis</title><link>/spring-framework/spring-aop/spring-aop-apis/</link><pubDate>Sat, 04 Dec 2021 00:00:00 +0000</pubDate><guid>/spring-framework/spring-aop/spring-aop-apis/</guid><description>
&lt;p>一起养成写作习惯！这是我参与「掘金日新计划 · 4 月更文挑战」的第12天，&lt;a href="https://juejin.cn/post/7080800226365145118">点击查看活动详情&lt;/a>。&lt;/p>
&lt;blockquote>
&lt;p>Spring framework版本 5.3.x&lt;/p>
&lt;/blockquote>
&lt;p>Spring AOP我们用注解比较多，今天我们来看一点不一样的。如何通过API来实现。&lt;/p>
&lt;h3 id="1--pointcut-api">1. Pointcut API&lt;/h3>
&lt;p>先看一下在Spring框架中的继承关系：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/aop/Pointcut%E7%BB%A7%E6%89%BF%E5%9B%BE.png?raw=true" alt="">&lt;/p>
&lt;p>&lt;strong>&lt;code>org.springframework.aop.Pointcut&lt;/code>&lt;/strong> 核心接口用来通知特定的类和方法：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">Pointcut&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ClassFilter&lt;/span> &lt;span style="color:#000">getClassFilter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">MethodMatcher&lt;/span> &lt;span style="color:#000">getMethodMatcher&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>将Pointcut接口分成两个部分，允许重用类和方法匹配部分以及细粒度的组合操作(例如与另一个方法匹配器执行“联合”)。ClassFilter接口用于将切入点限制为一组给定的目标类。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">ClassFilter&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">matches&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Class&lt;/span> &lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>MethodMatcher接口通常更重要,接口定义如下：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">MethodMatcher&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">matches&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Method&lt;/span> &lt;span style="color:#000">m&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">targetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">isRuntime&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">matches&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Method&lt;/span> &lt;span style="color:#000">m&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">targetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Spring提供了有用的切入点超类来帮助您实现自己的切入点。因为静态切入点是最有用的，所以您可能应该子类化StaticMethodMatcherPointcut。这只需要实现一个抽象方法(尽管您可以覆盖其他方法来定制行为)。下面的示例展示了如何创建StaticMethodMatcherPointcut的子类:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">LogPointcut&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">StaticMethodMatcherPointcut&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">matches&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Method&lt;/span> &lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">targetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">AnnotatedElementUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">hasAnnotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Log&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Tips: 通常我们自定义切入点的话也是通过继承StaticMethodMatcherPointcut类来实现。&lt;/p>
&lt;p>例子参考github项目：https://github.com/mxsm/mxsm-log4j.git&lt;/p>
&lt;/blockquote>
&lt;h3 id="2-advice-api">2. Advice API&lt;/h3>
&lt;p>Advice的继承关系：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/aop/Advice%E7%BB%A7%E6%89%BF%E5%9B%BE.png?raw=true" alt="">&lt;/p>
&lt;p>每一个Advice都是一个Spring Bean。通知实例可以在所有被通知对象之间共享，也可以对每个被通知对象唯一。这对应于每个类或每个实例的通知。&lt;/p>
&lt;h4 id="21-spring-advice-类型">2.1 Spring Advice 类型&lt;/h4>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/aop/Advice%E7%B1%BB%E5%9E%8B.png?raw=true" alt="">&lt;/p>
&lt;p>advice类型分成上面五类，平时用的比较多的是 &lt;strong>&lt;code>Intercepter&lt;/code>&lt;/strong> 和 &lt;strong>&lt;code>MethodInterceptor&lt;/code>&lt;/strong> 。&lt;/p>
&lt;h3 id="3-advisor-api">3. Advisor API&lt;/h3>
&lt;p>在Spring中，Advisor是一个方面，它只包含一个与切入点表达式关联的通知对象。除了介绍的特殊情况外，任何advisor都可以与任何Advice一起使用。&lt;strong>&lt;code>org.springframework.aop.support.DefaultPointcutAdvisor&lt;/code>&lt;/strong> 是最常用的类在Spring中。&lt;/p>
&lt;p>使用&lt;code>ProxyFactoryBean&lt;/code> 创建AOP代理&lt;/p>
&lt;p>参考文档：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#aop-api">https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#aop-api&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Spring-Framework: Spring依赖注入时，什么时候会创建代理类</title><link>/spring-framework/spring-aop/when-create-proxy/</link><pubDate>Wed, 08 Dec 2021 00:00:00 +0000</pubDate><guid>/spring-framework/spring-aop/when-create-proxy/</guid><description>
&lt;blockquote>
&lt;p>用到的代码地址：https://github.com/mxsm/spring-sample/tree/spring-5.3.x/spring-proxy&lt;/p>
&lt;/blockquote>
&lt;h3 id="1-现象">1. 现象&lt;/h3>
&lt;p>第一种情况：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/aop/proxy1.png?raw=true" alt="">&lt;/p>
&lt;p>第二种情况：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/aop/proxy2.png?raw=true" alt="">&lt;/p>
&lt;p>第三种情况：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/aop/proxy3.png?raw=true" alt="">&lt;/p>
&lt;h3 id="2-现象说明">2. 现象说明&lt;/h3>
&lt;p>第一种是最常见的在普通的Spring应用中，会发现 &lt;strong>&lt;code>UserService&lt;/code>&lt;/strong> 和 &lt;strong>&lt;code>TeacherService&lt;/code>&lt;/strong> 都没有创建代理。这个就是最常见的使用方式。&lt;/p>
&lt;p>第二种是使用了 &lt;strong>&lt;code>@EnableAspectJAutoProxy&lt;/code>&lt;/strong> 注解开启了Spring AOP， 发现**&lt;code>UserService&lt;/code>** 使用的是JDK代理，**&lt;code>TeacherService&lt;/code>** 使用的是CGLIB代理&lt;/p>
&lt;p>第三种是使用了 &lt;strong>&lt;code>@EnableAspectJAutoProxy(proxyTargetClass = true)&lt;/code>&lt;/strong> ，会发现 &lt;strong>&lt;code>UserService&lt;/code>&lt;/strong> 和 &lt;strong>&lt;code>TeacherService&lt;/code>&lt;/strong> 都使用的是CGlib代理&lt;/p>
&lt;p>现象总结：在没有开启AOP的情况下是不会创建代理的，在使用了 &lt;strong>&lt;code>@EnableAspectJAutoProxy&lt;/code>&lt;/strong> 默认的情况下接口的代理使用的是JDK代理实现，类的代理使用的CGLIB（jdk不能实现类的代理）。 &lt;strong>&lt;code>@EnableAspectJAutoProxy(proxyTargetClass = true)&lt;/code>&lt;/strong> 强制使用CGLIB代理。&lt;/p>
&lt;h3 id="3-源码分析">3. 源码分析&lt;/h3>
&lt;h4 id="31-上面时候会使用代理类">3.1 上面时候会使用代理类&lt;/h4>
&lt;p>通过之前的《Spring AOP 源码解析》可以知道，注解方式下的AOP的创建代理类主要的类是： &lt;strong>&lt;code>AnnotationAwareAspectJAutoProxyCreator&lt;/code>&lt;/strong> ，这个类重写了 &lt;strong>&lt;code>initBeanFactory&lt;/code>&lt;/strong> 和 &lt;strong>&lt;code>findCandidateAdvisors&lt;/code>&lt;/strong> 两个方法：&lt;/p>
&lt;p>&lt;strong>initBeanFactory方法&lt;/strong>：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">initBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurableListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">super&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">initBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">aspectJAdvisorFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">aspectJAdvisorFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ReflectiveAspectJAdvisorFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">aspectJAdvisorsBuilder&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanFactoryAspectJAdvisorsBuilderAdapter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">aspectJAdvisorFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>功能：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>新建了ReflectiveAspectJAdvisorFactory&lt;/p>
&lt;/li>
&lt;li>
&lt;p>新建了BeanFactoryAspectJAdvisorsBuilderAdapter&lt;/p>
&lt;p>用来将包含了 &lt;strong>&lt;code>@Aspect&lt;/code>&lt;/strong> 注解的Bean构建成一个Advisor&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>findCandidateAdvisors:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Advisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">findCandidateAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Add all the Spring advisors found according to superclass rules.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Advisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">advisors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">super&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">findCandidateAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Build Advisors for all AspectJ aspects in the bean factory.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">aspectJAdvisorsBuilder&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">advisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAll&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">aspectJAdvisorsBuilder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">buildAspectJAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">advisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>功能：&lt;/p>
&lt;ul>
&lt;li>查找候选的Advisor(实现了Advisor接口的)&lt;/li>
&lt;li>将 AspectJ的构建成Advisor(@Aspec, @Before等等相关的Aspect的注解解析构建成Advisor)&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Tips: 上面的第二种和第三种就是通过自己定义的Advisor来实现的。没有使用Spring的注解例如：@Transactional (事务管理注解)。如果嫌麻烦也可以用这个注解或者其他的AOP的注解来观察上面的三种情况。&lt;/p>
&lt;/blockquote>
&lt;p>所以从上面的代码就能看出来就能知道是否使用代理就是看是否开启了 Spring AOP， 同时对应的类是否包含Aop需要处理的逻辑。例如上面自定义的 &lt;strong>&lt;code>@Log&lt;/code>&lt;/strong> 注解或者AspectJ的相关注解。&lt;/p>
&lt;h4 id="32-如何选择jdk代理和cglib代理">3.2 如何选择JDK代理和Cglib代理&lt;/h4>
&lt;p>&lt;strong>&lt;code>@EnableAspectJAutoProxy(proxyTargetClass = true)&lt;/code>&lt;/strong> 强制使用Cglib代理。但是默认的情况下是怎么样的，我们还是根据看一下源码来分析一下。在创建代理类的时候在 &lt;strong>&lt;code>AbstractAutoProxyCreator#createProxy&lt;/code>&lt;/strong> 方法：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">createProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">specificInterceptors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">TargetSource&lt;/span> &lt;span style="color:#000">targetSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">beanFactory&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">ConfigurableListableBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">AutoProxyUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">exposeTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">ConfigurableListableBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">ProxyFactory&lt;/span> &lt;span style="color:#000">proxyFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ProxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">copyFrom&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置强制使用Cglib代理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isProxyTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Explicit handling of JDK proxy targets (for introduction advice scenarios)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Proxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isProxyClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Must allow for introductions; can&amp;#39;t just set interfaces to the proxy&amp;#39;s interfaces only.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">ifc&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getInterfaces&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addInterface&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ifc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 没有proxyTargetClass强制的情况下判断是否使用Cglib代理，这里根据是代理接口还是代理类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">shouldProxyTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setProxyTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//评估代理接口
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">evaluateProxyInterfaces&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">Advisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">advisors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">buildAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">specificInterceptors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">advisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setTargetSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">targetSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">customizeProxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setFrozen&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">freezeProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">advisorsPreFiltered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setPreFiltered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Use original ClassLoader if bean class not locally loaded in overriding class loader
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ClassLoader&lt;/span> &lt;span style="color:#000">classLoader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getProxyClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">classLoader&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">SmartClassLoader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">classLoader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">classLoader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">SmartClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">classLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">getOriginalClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//创建代理类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">classLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>根据 &lt;strong>&lt;code>proxyTargetClass&lt;/code>&lt;/strong> 标记来判断是否强制使用Cglib来创建代理&lt;/li>
&lt;li>如果没有设置 &lt;strong>&lt;code>proxyTargetClass=true&lt;/code>&lt;/strong> 就根据是代理接口还是代理类来动态处理选择代理方式&lt;/li>
&lt;li>创建代理类返回&lt;/li>
&lt;/ol>
&lt;h3 id="4-总结">4. 总结&lt;/h3>
&lt;ul>
&lt;li>在没有开启AOP的时候如果不自己定义是不会使用和创建代理类。 也就是使用我们平时使用的不同类实例&lt;/li>
&lt;li>&lt;strong>&lt;code>@EnableAspectJAutoProxy(proxyTargetClass = true)&lt;/code>&lt;/strong> 强制所有的方式都使用Cglib进行代理&lt;/li>
&lt;li>&lt;strong>&lt;code>@EnableAspectJAutoProxy&lt;/code>&lt;/strong> 默认情况下会根据情况来判断是否创建代理类，和用Jdk代理实现还是Cglib实现&lt;/li>
&lt;/ul></description></item><item><title>Spring-Framework: Spring AOP应用之Spring事务管理</title><link>/spring-framework/spring-aop/spring-aop-transaction-management/</link><pubDate>Sat, 11 Dec 2021 00:00:00 +0000</pubDate><guid>/spring-framework/spring-aop/spring-aop-transaction-management/</guid><description>
&lt;blockquote>
&lt;p>Spring framework版本 5.3.x&lt;/p>
&lt;/blockquote>
&lt;h3 id="1-核心对象的关系">1. 核心对象的关系&lt;/h3>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/aop/%E4%BA%8B%E5%8A%A1%E7%9B%B8%E5%85%B3%E7%B1%BB%E7%9A%84%E5%8A%9F%E8%83%BD%E5%9B%BE.png?raw=true" alt="//tu">&lt;/p>
&lt;p>如上图可以看出来注解 &lt;strong>&lt;code>@EnableTransactionManagement&lt;/code>&lt;/strong> 负责开启事务管理，然后通过 &lt;strong>&lt;code>TransactionManagementConfigurationSelector&lt;/code>&lt;/strong> 注入下面两个类：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>AutoProxyRegistrar&lt;/p>
&lt;p>负责创建代理类&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ProxyTransactionManagementConfiguration&lt;/p>
&lt;p>负责创建事务管理的逻辑(Spring AOP)&lt;/p>
&lt;ul>
&lt;li>
&lt;p>BeanFactoryTransactionAttributeSourceAdvisor&lt;/p>
&lt;p>Spring AOP中的Advisor&lt;/p>
&lt;/li>
&lt;li>
&lt;p>TransactionAttributeSource&lt;/p>
&lt;p>Spring AOP中的Pointcut&lt;/p>
&lt;/li>
&lt;li>
&lt;p>TransactionInterceptor&lt;/p>
&lt;p>Spring AOP中的advice&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>这样就能看得出来事务管理其实就是Spring AOP的一个应用实现。&lt;/p>
&lt;h3 id="2-注解事务运行流程">2. 注解事务运行流程&lt;/h3>
&lt;p>Spring注解事务管理运行流程图：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/aop/%E4%BA%8B%E5%8A%A1%E5%90%AF%E5%8A%A8%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B.png?raw=true" alt="">&lt;/p>
&lt;h3 id="3-源码解析">3. 源码解析&lt;/h3>
&lt;p>源码从事务管理AOP的三个组件来分析，下面就会分别是：&lt;/p>
&lt;ul>
&lt;li>[TransactionAttributeSource (Poincut)](#3.1 TransactionAttributeSource 源码解析)&lt;/li>
&lt;li>[TransactionInterceptor(Advice)](#3.2 TransactionInterceptor源码解析)&lt;/li>
&lt;li>BeanFactoryTransactionAttributeSourceAdvisor(Advisor)&lt;/li>
&lt;/ul>
&lt;h4 id="31-transactionattributesource-源码解析">3.1 TransactionAttributeSource 源码解析&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">AnnotationTransactionAttributeSource&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">AbstractFallbackTransactionAttributeSource&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">Serializable&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">publicMethodsOnly&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">AnnotationTransactionAttributeSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">AnnotationTransactionAttributeSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">publicMethodsOnly&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">publicMethodsOnly&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">publicMethodsOnly&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">jta12Present&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#000">ejb3Present&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">annotationParsers&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LinkedHashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">4&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">annotationParsers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">SpringTransactionAnnotationParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">jta12Present&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">annotationParsers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">JtaTransactionAnnotationParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ejb3Present&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">annotationParsers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">Ejb3TransactionAnnotationParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">annotationParsers&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">Collections&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">singleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">SpringTransactionAnnotationParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看 &lt;strong>&lt;code>ProxyTransactionManagementConfiguration&lt;/code>&lt;/strong> 创建 &lt;strong>&lt;code>AnnotationTransactionAttributeSource&lt;/code>&lt;/strong> 是使用的无参构造函数。&lt;/p>
&lt;blockquote>
&lt;p>Tips: 这里调用的是AnnotationTransactionAttributeSource(boolean publicMethodsOnly) 构造函数。这里也就是事务管理只能处理public方法&lt;/p>
&lt;/blockquote>
&lt;p>里面最重要的类就是 &lt;strong>&lt;code>SpringTransactionAnnotationParser&lt;/code>&lt;/strong> 注释解析类，其他两个是为了支持java的其他规范。主要的作用就是用来判断当前执行的方法或者类是否包含 &lt;strong>&lt;code>@javax.transaction.Transactional，@javax.ejb.TransactionAttribute， @org.springframework.transaction.annotation.Transactional&lt;/code>&lt;/strong> 注解。&lt;/p>
&lt;p>看到这里就会有人问了不是说好的 &lt;strong>&lt;code>TransactionAttributeSource&lt;/code>&lt;/strong> 相当于 &lt;strong>&lt;code>Pointcut&lt;/code>&lt;/strong> 也没用看到实现了 &lt;strong>&lt;code>Pointcut&lt;/code>&lt;/strong> 接口。别急下面来看一下 &lt;strong>&lt;code>ProxyTransactionManagementConfiguration&lt;/code>&lt;/strong> 类中有这样的一段代码：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#5c35cc;font-weight:bold">@Bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">name&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">TransactionManagementConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">TRANSACTION_ADVISOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Role&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">ROLE_INFRASTRUCTURE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">BeanFactoryTransactionAttributeSourceAdvisor&lt;/span> &lt;span style="color:#000">transactionAdvisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">TransactionAttributeSource&lt;/span> &lt;span style="color:#000">transactionAttributeSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">TransactionInterceptor&lt;/span> &lt;span style="color:#000">transactionInterceptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanFactoryTransactionAttributeSourceAdvisor&lt;/span> &lt;span style="color:#000">advisor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanFactoryTransactionAttributeSourceAdvisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">advisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setTransactionAttributeSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">transactionAttributeSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">advisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setAdvice&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">transactionInterceptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">enableTx&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">advisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setOrder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">enableTx&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&amp;lt;&lt;/span>&lt;span style="color:#000">Integer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span>&lt;span style="color:#000">getNumber&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;order&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">advisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>将 &lt;strong>&lt;code>TransactionAttributeSource&lt;/code>&lt;/strong> 的实现类设置为 &lt;strong>&lt;code>BeanFactoryTransactionAttributeSourceAdvisor&lt;/code>&lt;/strong> 的一个属性。(这里其实就是AnnotationTransactionAttributeSource的实例)。下面看一下 &lt;strong>&lt;code>BeanFactoryTransactionAttributeSourceAdvisor&lt;/code>&lt;/strong> 类里面有这样的一段代码：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">TransactionAttributeSourcePointcut&lt;/span> &lt;span style="color:#000">pointcut&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">TransactionAttributeSourcePointcut&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">TransactionAttributeSource&lt;/span> &lt;span style="color:#000">getTransactionAttributeSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">transactionAttributeSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这不就变成了 &lt;strong>&lt;code>Pointcut&lt;/code>&lt;/strong> 了。不是直接继承了接口 &lt;strong>&lt;code>Pointcut&lt;/code>&lt;/strong> 而是通过上面代码的方式间接的变成Poincut。看一下**&lt;code>TransactionAttributeSourcePointcut&lt;/code>** 代码&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">abstract&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">TransactionAttributeSourcePointcut&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">StaticMethodMatcherPointcut&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">Serializable&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过包装了 &lt;strong>&lt;code>AnnotationTransactionAttributeSource&lt;/code>&lt;/strong> 变成 Pointcut&lt;/p>
&lt;h4 id="32-transactioninterceptor源码解析">3.2 TransactionInterceptor源码解析&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">TransactionInterceptor&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">TransactionAspectSupport&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">MethodInterceptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Serializable&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>从上面可以看到实现了接口 &lt;strong>&lt;code>MethodInterceptor&lt;/code>&lt;/strong> ，那么主要的逻辑就在 &lt;strong>&lt;code>MethodInterceptor#invoke&lt;/code>&lt;/strong> 方法中。 TransactionInterceptor实现了 invoke 接口：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">invoke&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">MethodInvocation&lt;/span> &lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取到目标类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">targetClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getThis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">?&lt;/span> &lt;span style="color:#000">AopUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getThis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Adapt to TransactionAspectSupport&amp;#39;s invokeWithinTransaction...
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">invokeWithinTransaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">targetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">CoroutinesInvocationCallback&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">proceedWithInvocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">proceed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">getTarget&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getThis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">getArguments&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getArguments&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">});&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>找到调用的目标类，然后调用 &lt;strong>&lt;code>TransactionAspectSupport&lt;/code>&lt;/strong> 类的 &lt;strong>&lt;code>invokeWithinTransaction&lt;/code>&lt;/strong> 方法。 这个方法也是主要的处理逻辑：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/aop/TransactionAspectSupport%23invokeWithinTransaction%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B.png?raw=true" alt="">&lt;/p>
&lt;p>根据 &lt;strong>&lt;code>TransactionAttributeSource&lt;/code>&lt;/strong> 来决定使用 &lt;strong>&lt;code>ReactiveTransactionManager&lt;/code>&lt;/strong> 还是 &lt;strong>&lt;code>PlatformTransactionManager&lt;/code>&lt;/strong> （这里只分析PlatformTransactionManager）。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#000">TransactionInfo&lt;/span> &lt;span style="color:#000">txInfo&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">createTransactionIfNecessary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ptm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">txAttr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">joinpointIdentification&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>根据 PlatformTransactionManager，TransactionAttributeSource和切入点方法去处理事务管理如何创建，下面看一下 TransactionAspectSupport#createTransactionIfNecessary方法，里面有一段代码：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">TransactionInfo&lt;/span> &lt;span style="color:#000">createTransactionIfNecessary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">PlatformTransactionManager&lt;/span> &lt;span style="color:#000">tm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">TransactionAttribute&lt;/span> &lt;span style="color:#000">txAttr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">joinpointIdentification&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略部分代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">TransactionStatus&lt;/span> &lt;span style="color:#000">status&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">txAttr&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">tm&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//这段代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">status&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTransaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">txAttr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">prepareTransactionInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">tm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">txAttr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">joinpointIdentification&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">status&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>事务管理器根据 &lt;strong>&lt;code>TransactionAttributeSource&lt;/code>&lt;/strong> 获取事务状态 &lt;strong>&lt;code>TransactionStatus&lt;/code>&lt;/strong> 。&lt;/p>
&lt;p>&lt;strong>&lt;code>status = tm.getTransaction(txAttr)&lt;/code>&lt;/strong> 这段代码里面说明了根据注解 &lt;strong>&lt;code>@Transactional&lt;/code>&lt;/strong> 当中的属性如何创建事务，最好包装成 &lt;strong>&lt;code>TransactionStatus&lt;/code>&lt;/strong> 。下面来分析这一段代码，由 &lt;strong>&lt;code>AbstractPlatformTransactionManager&lt;/code>&lt;/strong> 实现了方法 &lt;strong>&lt;code>getTransaction&lt;/code>&lt;/strong> 。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">TransactionStatus&lt;/span> &lt;span style="color:#000">getTransaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span> &lt;span style="color:#000">definition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">TransactionException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 没有事务定义给出就使用默认的
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span> &lt;span style="color:#000">def&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">definition&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">?&lt;/span> &lt;span style="color:#000">definition&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">withDefaults&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取事务
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">transaction&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">doGetTransaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">debugEnabled&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isDebugEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断事务是否存在
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">isExistingTransaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">transaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Existing transaction found -&amp;gt; check propagation behavior to find out how to behave.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">handleExistingTransaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">transaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">debugEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 检查新的事务配置
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTimeout&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">TIMEOUT_DEFAULT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">InvalidTimeoutException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Invalid transaction timeout&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTimeout&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// No existing transaction found -&amp;gt; check propagation behavior to find out how to proceed.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getPropagationBehavior&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PROPAGATION_MANDATORY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">IllegalTransactionStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;No existing transaction found for transaction marked with propagation &amp;#39;mandatory&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getPropagationBehavior&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PROPAGATION_REQUIRED&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getPropagationBehavior&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PROPAGATION_REQUIRES_NEW&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span>
&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getPropagationBehavior&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PROPAGATION_NESTED&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">SuspendedResourcesHolder&lt;/span> &lt;span style="color:#000">suspendedResources&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">suspend&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">debugEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">debug&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Creating new transaction with name [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;]: &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">startTransaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">transaction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">debugEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">suspendedResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RuntimeException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">|&lt;/span> &lt;span style="color:#000">Error&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">resume&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">suspendedResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Create &amp;#34;empty&amp;#34; transaction: no actual transaction, but potentially synchronization.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getIsolationLevel&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#000">TransactionDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">ISOLATION_DEFAULT&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isWarnEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">warn&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Custom isolation level specified but no actual transaction initiated; &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;isolation level will effectively be ignored: &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">newSynchronization&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getTransactionSynchronization&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">SYNCHRONIZATION_ALWAYS&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">prepareTransactionStatus&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">newSynchronization&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">debugEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>上面就是根据设置的事务的传播行为来对事务作出处理。事务的传播行为如下：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>@Transactional(propagation=Propagation.REQUIRED) ：如果有事务, 那么加入事务, 没有的话新建一个(默认情况下)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>@Transactional(propagation=Propagation.NOT_SUPPORTED) ：以非事务方式执行，如果存在当前事务，则挂起当前事务&lt;/p>
&lt;/li>
&lt;li>
&lt;p>@Transactional(propagation=Propagation.REQUIRES_NEW) ：不管是否存在事务,都创建一个新的事务,原来的挂起,新的执行完毕,继续执行老的事务&lt;/p>
&lt;/li>
&lt;li>
&lt;p>@Transactional(propagation=Propagation.MANDATORY) ：必须在一个已有的事务中执行,否则抛出异常&lt;/p>
&lt;/li>
&lt;li>
&lt;p>@Transactional(propagation=Propagation.NEVER) ：以非事务方式执行，如果存在事务则抛出异常。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>@Transactional(propagation=Propagation.SUPPORTS) ：如果其他bean调用这个方法,在其他bean中声明事务,那就用事务.如果其他bean没有声明事务,那就不用事务.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>@Transactional(propagation=Propagation.NESTED) ： 如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则进行PROPAGATION_REQUIRED类似的操作。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>创建完成 &lt;strong>&lt;code>TransactionInfo&lt;/code>&lt;/strong> 后就开始执行业务逻辑方法，如果执行业务逻辑报错那么就执行：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#000">completeTransactionAfterThrowing&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">txInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后在 finally 代码块中执行：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#000">cleanupTransactionInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">txInfo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>清除事务的信息，提交事务。到这里整个事务就基本上完成了。&lt;/p>
&lt;h4 id="33-beanfactorytransactionattributesourceadvisor源码解析">3.3 BeanFactoryTransactionAttributeSourceAdvisor源码解析&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">BeanFactoryTransactionAttributeSourceAdvisor&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">AbstractBeanFactoryPointcutAdvisor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#000">TransactionAttributeSource&lt;/span> &lt;span style="color:#000">transactionAttributeSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">TransactionAttributeSourcePointcut&lt;/span> &lt;span style="color:#000">pointcut&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">TransactionAttributeSourcePointcut&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">TransactionAttributeSource&lt;/span> &lt;span style="color:#000">getTransactionAttributeSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">transactionAttributeSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">};&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * Set the transaction attribute source which is used to find transaction
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * attributes. This should usually be identical to the source reference
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * set on the transaction interceptor itself.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @see TransactionInterceptor#setTransactionAttributeSource
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setTransactionAttributeSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">TransactionAttributeSource&lt;/span> &lt;span style="color:#000">transactionAttributeSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">transactionAttributeSource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">transactionAttributeSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * Set the {@link ClassFilter} to use for this pointcut.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * Default is {@link ClassFilter#TRUE}.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setClassFilter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ClassFilter&lt;/span> &lt;span style="color:#000">classFilter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">pointcut&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setClassFilter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">classFilter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Pointcut&lt;/span> &lt;span style="color:#000">getPointcut&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">pointcut&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个类比较简单就是将Advice和Pointcut组装成Advisor&lt;/p>
&lt;h3 id="4-总结">4. 总结&lt;/h3>
&lt;p>Spring事务管理底层使用的是AOP的原理来实现。结合数据库的事务来的。&lt;/p></description></item><item><title>Spring-Framework: Spring常用的拓展接口</title><link>/spring-framework/custom-component/spring-custom-used-interface/</link><pubDate>Sun, 19 Dec 2021 00:00:00 +0000</pubDate><guid>/spring-framework/custom-component/spring-custom-used-interface/</guid><description>
&lt;ul>
&lt;li>
&lt;p>Spring框架是一个拓展性很好的框架，在平时的开发中我们也会进行一些拓展。那么来看一下常用的拓展类：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/picture/blob/main/spring/Spring%E5%B8%B8%E8%A7%81%E7%9A%84%E6%8B%93%E5%B1%95%E6%8E%A5%E5%8F%A3.png?raw=true" alt="">&lt;/p>
&lt;p>这里把拓展接口分成了四大类&lt;/p>
&lt;h3 id="1-导入类拓展接口">1. 导入类拓展接口&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>ImportAware&lt;/p>
&lt;p>从Spring的源码注释来看&lt;code>ImportAware&lt;/code>接口是需要和&lt;code>@Import&lt;/code>一起使用的。通过&lt;code>@Import&lt;/code>导入的配置类如果实现了&lt;code>ImportAware&lt;/code>接口就可以获取到导入该配置类接口的数据配置。同时需要搭配 &lt;strong>&lt;code>@Configuration注解&lt;/code>&lt;/strong>&lt;/p>
&lt;p>例如Spring实现的注解**&lt;code>@ EnableAsync&lt;/code>** 中的 **&lt;code>ProxyAsyncConfiguration&lt;/code>** 就实现了。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ImportSelector，DeferredImportSelector&lt;/p>
&lt;p>动态导入配置类,例如Spring的实现：&lt;strong>&lt;code>@ EnableAsync&lt;/code>&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ImportBeanDefinitionRegistrar&lt;/p>
&lt;p>可以实现自己的注解管理自己的Bean。例如Spring注解： &lt;strong>&lt;code>@EnableAspectJAutoProxy&lt;/code>&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Tips： 以上的接口都是搭配 @Import、@Configuration使用的。 例如用来实现自定义的Enablexxx功能&lt;/p>
&lt;/blockquote>
&lt;h3 id="2-aop相关接口">2. AOP相关接口&lt;/h3>
&lt;p>对于AOP记住三点就好，Advisor、Advice、Pointcut。所以Spring提供了三个对应的接口来给使用者拓展实现。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>StaticMethodMatcherPointcut&lt;/p>
&lt;p>切点实现&lt;/p>
&lt;/li>
&lt;li>
&lt;p>AbstractBeanFactoryPointcutAdvisor&lt;/p>
&lt;p>通知器实现&lt;/p>
&lt;/li>
&lt;li>
&lt;p>MethodInterceptor&lt;/p>
&lt;p>切面实现&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="3-bean后置处理器接口">3. Bean后置处理器接口&lt;/h3>
&lt;p>对于Bean的后置处理器接口主要都是实现了 &lt;strong>&lt;code>BeanPostProcessor&lt;/code>&lt;/strong> 接口&lt;/p>
&lt;ul>
&lt;li>SmartInstantiationAwareBeanPostProcessor&lt;/li>
&lt;li>InstantiationAwareBeanPostProcessor&lt;/li>
&lt;li>DestructionAwareBeanPostProcessor&lt;/li>
&lt;li>MergedBeanDefinitionPostProcessor&lt;/li>
&lt;/ul>
&lt;p>就是来自定义Bean的管理和对Bean进行功能增强。例如Spring AOP的实现就是实现了 &lt;strong>&lt;code>SmartInstantiationAwareBeanPostProcessor&lt;/code>&lt;/strong> 接口。实现自定义注解就可以使用当前的这些处理器来实现。&lt;/p>
&lt;h3 id="4-aware类型接口">4. Aware类型接口&lt;/h3>
&lt;p>aware类型接口比较多，主要的作用就是在继承了相对应的aware接口的Bean里面可以获取到相对应的aware对象。这里平时日常的开发过程中使用的比较多的：&lt;/p>
&lt;ul>
&lt;li>ApplicationContextAware&lt;/li>
&lt;li>BeanNameAware&lt;/li>
&lt;li>ApplicationEventPublisherAware&lt;/li>
&lt;li>BeanClassLoaderAware&lt;/li>
&lt;li>BeanFactoryAware&lt;/li>
&lt;li>NotificationPublisherAware&lt;/li>
&lt;li>EnvironmentAware&lt;/li>
&lt;/ul>
&lt;p>其他的在自定义拓展的过程中使用的频率都没用那么的高&lt;/p>
&lt;h3 id="5-使用小技巧">5. 使用小技巧&lt;/h3>
&lt;p>对于上面这么多拓展的接口如何使用，下面有一些自己在开发过程中的一些小心得：&lt;/p>
&lt;ul>
&lt;li>参照Spring源码的实现进行拓展，这个准没错。Spring本身实现的源码就是一个很好的例子。例如你要自己开发一个 &lt;strong>&lt;code>@EnableXXXX&lt;/code>&lt;/strong> 的注解功能。那么你可以参照一下Spring源码中实现的 &lt;strong>&lt;code>@EnableAsync、@EnableTransactionManagement&lt;/code>&lt;/strong> 等一些注解来作为参照&lt;/li>
&lt;li>参照一些开源系统的Spring支持系列框架，这里面有很多基于Spring的自定义注解实现。这些例子也给自己去拓展平时工作中的注解等做了很好的参考和例子。比如：例如 &lt;a href="https://github.com/nacos-group/nacos-spring-project">Nacos Spring 项目&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Spring-Framework: Spring AOP应用之EnableAsync</title><link>/spring-framework/spring-aop/spring-aop-enableasync/</link><pubDate>Sat, 25 Dec 2021 00:00:00 +0000</pubDate><guid>/spring-framework/spring-aop/spring-aop-enableasync/</guid><description>
&lt;blockquote>
&lt;p>Spring framework版本 5.3.x&lt;/p>
&lt;/blockquote>
&lt;h3 id="1-异步核心类">1. 异步核心类&lt;/h3>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/aop/EnableAsync%E5%85%B3%E7%B3%BB.png" alt="EnableAsync关系">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>@EnableAsync&lt;/strong>&lt;/p>
&lt;p>开启Spring的异步功能&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>AsyncConfigurationSelector&lt;/strong>&lt;/p>
&lt;p>导入异步功能的配置和处理相关的类&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>ProxyAsyncConfiguration&lt;/strong>&lt;/p>
&lt;p>代理异步配置类，设置了执行线程池、异步错误的处理器，以及AOP相关的三个类&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>AsyncAnnotationBeanPostProcessor&lt;/strong>&lt;/p>
&lt;p>处理标记了@Async类和方法（也就是Spring AOP）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>AOP的三大组件&lt;/strong>&lt;/p>
&lt;p>AsyncAnnotationAdvisor、AnnotationMatchingPointcut、AnnotationAsyncExecutionInterceptor&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="2-源码分析">2. 源码分析&lt;/h3>
&lt;h4 id="21-enableasync源码解析">2.1 @EnableAsync源码解析&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ElementType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">TYPE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Retention&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RetentionPolicy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">RUNTIME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Documented&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Import&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AsyncConfigurationSelector&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@interface&lt;/span> &lt;span style="color:#000">EnableAsync&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置自定义的注解
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Annotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">annotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#000">Annotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">proxyTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">AdviceMode&lt;/span> &lt;span style="color:#000">mode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#000">AdviceMode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PROXY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">order&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#000">Ordered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">LOWEST_PRECEDENCE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>从上面可以看出主要使用了 &lt;strong>&lt;code>AsyncConfigurationSelector&lt;/code>&lt;/strong> 来导入选择导入配置类，下面来看一下&lt;/p>
&lt;h4 id="22-asyncconfigurationselector源码解析">2.2 AsyncConfigurationSelector源码解析&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">AsyncConfigurationSelector&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">AdviceModeImportSelector&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">EnableAsync&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">ASYNC_EXECUTION_ASPECT_CONFIGURATION_CLASS_NAME&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;org.springframework.scheduling.aspectj.AspectJAsyncConfiguration&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">selectImports&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AdviceMode&lt;/span> &lt;span style="color:#000">adviceMode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">switch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">adviceMode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#000">PROXY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#000">ProxyAsyncConfiguration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()};&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#000">ASPECTJ&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#000">ASYNC_EXECUTION_ASPECT_CONFIGURATION_CLASS_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">};&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在这里主要导入了配置 &lt;strong>&lt;code>ProxyAsyncConfiguration&lt;/code>&lt;/strong> 。这个类主要的作用也是导入配置类。接着来看一下配置类。&lt;/p>
&lt;h4 id="23-proxyasyncconfiguration源码解析">2.3 ProxyAsyncConfiguration源码解析&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Configuration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">proxyBeanMethods&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Role&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">ROLE_INFRASTRUCTURE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">ProxyAsyncConfiguration&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">AbstractAsyncConfiguration&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">name&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">TaskManagementConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">ASYNC_ANNOTATION_PROCESSOR_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Role&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">ROLE_INFRASTRUCTURE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">AsyncAnnotationBeanPostProcessor&lt;/span> &lt;span style="color:#000">asyncAdvisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">notNull&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">enableAsync&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;@EnableAsync annotation metadata was not injected&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">AsyncAnnotationBeanPostProcessor&lt;/span> &lt;span style="color:#000">bpp&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AsyncAnnotationBeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">bpp&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">configure&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">executor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">exceptionHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Annotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">customAsyncAnnotation&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">enableAsync&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;annotation&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">customAsyncAnnotation&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#000">AnnotationUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getDefaultValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">EnableAsync&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;annotation&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">bpp&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setAsyncAnnotationType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">customAsyncAnnotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">bpp&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setProxyTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">enableAsync&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBoolean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;proxyTargetClass&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">bpp&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setOrder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">enableAsync&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&amp;lt;&lt;/span>&lt;span style="color:#000">Integer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span>&lt;span style="color:#000">getNumber&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;order&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bpp&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>&lt;code>ProxyAsyncConfiguration&lt;/code>&lt;/strong> 配置继承了 &lt;strong>&lt;code>AbstractAsyncConfiguration&lt;/code>&lt;/strong> 。整个主要做了三件事情：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>ProxyAsyncConfiguration创建了AsyncAnnotationBeanPostProcessor。AsyncAnnotationBeanPostProcessor主要用来实现AOP&lt;/p>
&lt;/li>
&lt;li>
&lt;p>AbstractAsyncConfiguration主要设置了异步执行的线程池Executor，和执行报错没有捕捉到的错误的处理器 AsyncUncaughtExceptionHandler&lt;/p>
&lt;p>Executor和AsyncUncaughtExceptionHandler可以通过AsyncConfigurer来进行配置。&lt;/p>
&lt;blockquote>
&lt;p>Tpis: AsyncConfigurer只能配置一个&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h4 id="24-asyncannotationbeanpostprocessor源码解析">2.4 AsyncAnnotationBeanPostProcessor源码解析&lt;/h4>
&lt;p>在类中有这样的一段代码：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">super&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">AsyncAnnotationAdvisor&lt;/span> &lt;span style="color:#000">advisor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AsyncAnnotationAdvisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">executor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">exceptionHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">asyncAnnotationType&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">advisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setAsyncAnnotationType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">asyncAnnotationType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">advisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advisor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">advisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建一个 &lt;strong>&lt;code>AsyncAnnotationAdvisor&lt;/code>&lt;/strong> 。看一下使用的构造函数：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">AsyncAnnotationAdvisor&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">AbstractPointcutAdvisor&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">BeanFactoryAware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#000">Advice&lt;/span> &lt;span style="color:#000">advice&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#000">Pointcut&lt;/span> &lt;span style="color:#000">pointcut&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略了部分代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">AsyncAnnotationAdvisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Supplier&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Executor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">executor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Supplier&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">AsyncUncaughtExceptionHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">exceptionHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Annotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#000">asyncAnnotationTypes&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LinkedHashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">2&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">asyncAnnotationTypes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Async&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">asyncAnnotationTypes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Annotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;)&lt;/span>
&lt;span style="color:#000">ClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">forName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;javax.ejb.Asynchronous&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">AsyncAnnotationAdvisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ClassNotFoundException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// If EJB 3.1 API not present, simply ignore.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advice&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">buildAdvice&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">executor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">exceptionHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">pointcut&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">buildPointcut&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">asyncAnnotationTypes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>从代码可以看出来有两个属性 Advice和Pointcut两个属性加上类本身就是 AOP的三大标准组件。&lt;/p>
&lt;p>设置异步Spring定义注解@Async和javax.ejb.Asynchronous注解。&lt;/p>
&lt;p>&lt;strong>&lt;code>buildAdvice&lt;/code>&lt;/strong> 用来创建 &lt;strong>&lt;code>Advice&lt;/code>&lt;/strong> :&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Advice&lt;/span> &lt;span style="color:#000">buildAdvice&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Supplier&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Executor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">executor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Supplier&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">AsyncUncaughtExceptionHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">exceptionHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">AnnotationAsyncExecutionInterceptor&lt;/span> &lt;span style="color:#000">interceptor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AnnotationAsyncExecutionInterceptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">interceptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">configure&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">executor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">exceptionHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">interceptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>&lt;code>buildPointcut&lt;/code>&lt;/strong> 来创建 &lt;strong>&lt;code>Pointcut&lt;/code>&lt;/strong> :&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Pointcut&lt;/span> &lt;span style="color:#000">buildPointcut&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Annotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#000">asyncAnnotationTypes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ComposablePointcut&lt;/span> &lt;span style="color:#000">result&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Annotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">asyncAnnotationType&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">asyncAnnotationTypes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//创建类的Pointcut
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Pointcut&lt;/span> &lt;span style="color:#000">cpc&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AnnotationMatchingPointcut&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">asyncAnnotationType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//创建方法的Pointcut
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Pointcut&lt;/span> &lt;span style="color:#000">mpc&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AnnotationMatchingPointcut&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">asyncAnnotationType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">result&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">result&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ComposablePointcut&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cpc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">result&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">union&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cpc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">result&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">result&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">union&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mpc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">result&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">?&lt;/span> &lt;span style="color:#000">result&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">Pointcut&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">TRUE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>&lt;code>Pointcut&lt;/code>&lt;/strong> 分成两类：&lt;/p>
&lt;ul>
&lt;li>@Async放在类上面&lt;/li>
&lt;li>@Async放在方法上面&lt;/li>
&lt;/ul>
&lt;p>创建完成 &lt;strong>&lt;code>AsyncAnnotationAdvisor&lt;/code>&lt;/strong> 后然后设置自定义的异步注解和创建 &lt;strong>&lt;code>Pointcut&lt;/code>&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setAsyncAnnotationType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Annotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">asyncAnnotationType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">notNull&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">asyncAnnotationType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#39;asyncAnnotationType&amp;#39; must not be null&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Annotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#000">asyncAnnotationTypes&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">HashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#000">asyncAnnotationTypes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">asyncAnnotationType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">pointcut&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">buildPointcut&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">asyncAnnotationTypes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>到这里基本上就完成Advisor的创建。下面就是看如何创建代理类。&lt;/p>
&lt;h4 id="25--abstractadvisingbeanpostprocessorpostprocessafterinitialization创建代理类">2.5 AbstractAdvisingBeanPostProcessor#postProcessAfterInitialization创建代理类&lt;/h4>
&lt;p>和前面的 &lt;strong>&lt;code>@EnableAspectJAutoProxy&lt;/code>&lt;/strong> 注解一样都是通过 &lt;strong>&lt;code>postProcessAfterInitialization&lt;/code>&lt;/strong> 方法来实现代理类：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">postProcessAfterInitialization&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advisor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">AopInfrastructureBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Ignore AOP infrastructure such as scoped proxies.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否继承了Advised接口
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">Advised&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Advised&lt;/span> &lt;span style="color:#000">advised&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Advised&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">advised&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isFrozen&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">isEligible&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AopUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Add our local Advisor to the existing proxy&amp;#39;s Advisor chain...
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">beforeExistingAdvisors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">advised&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAdvisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">0&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">advised&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAdvisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是bean是否符合条件
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">isEligible&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ProxyFactory&lt;/span> &lt;span style="color:#000">proxyFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">prepareProxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isProxyTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">evaluateProxyInterfaces&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAdvisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">advisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">customizeProxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Use original ClassLoader if bean class not locally loaded in overriding class loader
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ClassLoader&lt;/span> &lt;span style="color:#000">classLoader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getProxyClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">classLoader&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">SmartClassLoader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">classLoader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">classLoader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">SmartClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">classLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">getOriginalClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">proxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">classLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// No proxy needed.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>上面有两个判断：&lt;/p>
&lt;ul>
&lt;li>判断是否是 &lt;strong>&lt;code>Advised&lt;/code>&lt;/strong> 的实例如果是并且没有冻结并且符合条件的目标类那么将Advisor添加到 Adviced类&lt;/li>
&lt;li>如果是符合条件的类（符合条件：被@Async和配置在 @EnableAsync 的 annotation 属性中的注解）&lt;/li>
&lt;/ul>
&lt;p>这里就完成代理类生成。&lt;/p>
&lt;h4 id="26-异步方法如何执行">2.6 异步方法如何执行&lt;/h4>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/aop/image-20211225182531669.png" alt="image-20211225182531669">&lt;/p>
&lt;p>如上图的类关系图，&lt;strong>&lt;code>AsyncExecutionInterceptor&lt;/code>&lt;/strong> 实现了 &lt;strong>&lt;code>MethodInterceptor#invoke&lt;/code>&lt;/strong> 方法。&lt;/p>
&lt;p>下面来看一下这个实现方法的代码（AsyncExecutionInterceptor#invoke）：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">invoke&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">MethodInvocation&lt;/span> &lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">targetClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getThis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">?&lt;/span> &lt;span style="color:#000">AopUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getThis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Method&lt;/span> &lt;span style="color:#000">specificMethod&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">ClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMostSpecificMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">targetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">Method&lt;/span> &lt;span style="color:#000">userDeclaredMethod&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">BridgeMethodResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">findBridgedMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">specificMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">AsyncTaskExecutor&lt;/span> &lt;span style="color:#000">executor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">determineAsyncExecutor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">userDeclaredMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">executor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">IllegalStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;No executor specified and no default executor set on AsyncExecutionInterceptor either&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">Callable&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">task&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&amp;gt;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">result&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">proceed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">result&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">Future&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">Future&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;)&lt;/span> &lt;span style="color:#000">result&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ExecutionException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">handleError&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getCause&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">userDeclaredMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getArguments&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">handleError&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">userDeclaredMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getArguments&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">};&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">doSubmit&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">task&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">executor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getReturnType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>从代码可以看出来有这样几个步骤&lt;/p>
&lt;ul>
&lt;li>根据执行的方法的具体配置来决定到底使用哪个线程池&lt;/li>
&lt;li>构建 Callable 任务&lt;/li>
&lt;li>提交任务给线程执行&lt;/li>
&lt;/ul>
&lt;h3 id="3-总结">3. 总结&lt;/h3>
&lt;p>对于Spring异步来说，总体的原理还是利用Spring AOP作为基础来实现。&lt;/p></description></item><item><title>Spring-Framework: 如何自定义Spring Enable注解</title><link>/spring-framework/custom-component/spring-extend-enable-annotation/</link><pubDate>Thu, 20 Jan 2022 00:00:00 +0000</pubDate><guid>/spring-framework/custom-component/spring-extend-enable-annotation/</guid><description>
&lt;p>Spring中有这样一类注解以Enable开头，例如：&lt;strong>@EnableAsync、@EnableWebMvc、@EnableTransactionManagement&lt;/strong> 等等，这三个是在工作中见的比较多也比较常见的一个。从注解字面上的意思来看，主要用于开启某项功能，例如：&lt;strong>@EnableTransactionManagement&lt;/strong> 注解是开启事务管理，然后搭配 &lt;strong>@Transactional&lt;/strong> 注解使用。在工作过程中仅仅是Spring提供的注解是完全不够的，所以需要我们进行自定义Enable类型注解，来开启某一个功能，然后搭配对应的注解来使用。这里先讲如何自定义Enable类型的注解，后面结合拓展AOP类型注解进行搭配使用。&lt;/p>
&lt;h3 id="1-enable注解原理解析">1. @Enable注解原理解析&lt;/h3>
&lt;p>@Enable类型注解原理解析流程如下图：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/custom/Enable%E5%8E%9F%E7%90%86%20.png" alt="Enable原理 ">&lt;/p>
&lt;p>从@Enable注解的解析流程图可以分析一下原理：&lt;/p>
&lt;ul>
&lt;li>注解的解析的入口在 &lt;strong>ConfigurationClassPostProcessor&lt;/strong> ，这个类是 &lt;strong>BeanDefinitionRegistryPostProcessor&lt;/strong> 接口的实现，而&lt;strong>BeanDefinitionRegistryPostProcessor&lt;/strong> 接口继承了&lt;strong>BeanFactoryPostProcessor&lt;/strong> 。(Spring容器启动就会调用&lt;strong>BeanFactoryPostProcessor&lt;/strong> 一系列相关的继承和实现实例的方法)&lt;/li>
&lt;li>&lt;strong>ConfigurationClassPostProcessor&lt;/strong> 从Spring容器中获取被 &lt;strong>@Configuration&lt;/strong> 修饰的类，然后交给新建的 &lt;strong>ConfigurationClassParser&lt;/strong> 实例处理。&lt;/li>
&lt;li>&lt;strong>ConfigurationClassParser&lt;/strong> 负责处理 &lt;strong>@Component、@PropertySources、@PropertySource、@ComponentScans、@ComponentScan、@ImportResource、@Configuration修饰的类方法上面的@Bean、@Import&lt;/strong>。&lt;/li>
&lt;li>&lt;strong>@Import&lt;/strong> 作为 &lt;strong>@Enable&lt;/strong> 注解的入口，&lt;strong>@Import&lt;/strong> 导入的配置类需要实现 &lt;strong>DeferredImportSelector、ImportSelector、ImportBeanDefinitionRegistrar&lt;/strong> 三个当中的一个,以这三个类往Spring容器中注入自己实现功能相关的类来达到我们自己的功能实现的目的&lt;/li>
&lt;/ul>
&lt;p>通过Spring解析配置了@Configuration的类，然后解析类上面配置了@Import的注解配置 value 值的接口，这些类都是实现了&lt;strong>DeferredImportSelector、ImportSelector、ImportBeanDefinitionRegistrar&lt;/strong> 这三个接口中的一个。执行了三个接口的实现这里就已经完成了我们自定义的类注册到Spring容器。&lt;/p>
&lt;blockquote>
&lt;p>Tpis:在自定义Enable用到的Spring原生的注解以及接口&lt;/p>
&lt;ul>
&lt;li>
&lt;p>注解&lt;/p>
&lt;p>@Configuration、@Import&lt;/p>
&lt;/li>
&lt;li>
&lt;p>接口&lt;/p>
&lt;p>DeferredImportSelector、ImportSelector、ImportBeanDefinitionRegistrar&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="2-自定义enable注解实战">2. 自定义@Enable注解实战&lt;/h3>
&lt;p>自定义一个@EnableLog注解，功能：用来是否允许来进行日志记录。自定义需要如下几个步骤：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/custom/Enable%E8%87%AA%E5%AE%9A%E4%B9%89%E6%AD%A5%E9%AA%A4.png" alt="Enable自定义步骤">&lt;/p>
&lt;h4 id="21-定义enable注解">2.1 定义@Enable注解&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Documented&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">({&lt;/span>&lt;span style="color:#000">ElementType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">TYPE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">})&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Retention&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RetentionPolicy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">RUNTIME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Inherited&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@interface&lt;/span> &lt;span style="color:#000">EnableLog&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">value&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * use asynchronization method to record log
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @return
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">async&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * log name
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @return
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">loggerName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">proxyTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>注解里面的属性可以根据实现的功能自己定义。&lt;/p>
&lt;h4 id="22-实现接口">2.2 实现接口&lt;/h4>
&lt;p>需要实现三个接口中的任意一个：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>ImportSelector&lt;/strong>&lt;/li>
&lt;li>&lt;strong>DeferredImportSelector&lt;/strong>&lt;/li>
&lt;li>&lt;strong>ImportBeanDefinitionRegistrar&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>ImportSelector&lt;/strong>和&lt;strong>DeferredImportSelector&lt;/strong>接口算是一类接口执行的时间不同而已。&lt;strong>ImportBeanDefinitionRegistrar&lt;/strong> 往Spring容器中注入BeanDefinition。这三个接口选择看实现功能的需要。我们这里使用的 &lt;strong>ImportSelector&lt;/strong> (这个也是最常用的)：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">LogImportSelector&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">ImportSelector&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * Select and return the names of which class(es) should be imported based on the {@link AnnotationMetadata} of the
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * importing @{@link Configuration} class.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> *
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @param importingClassMetadata
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @return the class names, or an empty array if none
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">selectImports&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AnnotationMetadata&lt;/span> &lt;span style="color:#000">importingClassMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">AnnotationAttributes&lt;/span> &lt;span style="color:#000">attributes&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">AnnotationAttributes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">fromMap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">importingClassMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAnnotationAttributes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">EnableLog&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">value&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">attributes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBoolean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;value&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">value&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]{&lt;/span>&lt;span style="color:#000">LogConfig&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">LogImportBeanDefinitionRegistrar&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()};&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#000">0&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">];&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里往Spring容器中注入了一个 &lt;strong>LogConfig&lt;/strong> 的配置类，以及一个 &lt;strong>LogImportBeanDefinitionRegistrar&lt;/strong> 类。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>LogConfig&lt;/strong>： 主要用来配置记录日志的AOP相关的类实例&lt;/li>
&lt;li>&lt;strong>LogImportBeanDefinitionRegistrar&lt;/strong>：开启AOP的处理，以及Spring在日志处理过程中使用的代理方式&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>代码具体会在基于AOP拓展的时候进行讲解&lt;/p>
&lt;/blockquote>
&lt;h4 id="23-自定义注解增加import注解">2.3 自定义注解增加@Import注解&lt;/h4>
&lt;p>上面自定义的 &lt;strong>@EnableLog&lt;/strong> 注解只是定义一个普通的注解，那么要如何跟Spring相结合，这就需要用到 &lt;strong>@Import&lt;/strong> 注解。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Documented&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">({&lt;/span>&lt;span style="color:#000">ElementType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">TYPE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">})&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Retention&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RetentionPolicy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">RUNTIME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Inherited&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Import&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">LogImportSelector&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">1&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@interface&lt;/span> &lt;span style="color:#000">EnableLog&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略部分代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>增加(1)位置的代码。这里就把自定义的注解和Spring框架结合一起。到这里自定义 &lt;strong>@EnableLog&lt;/strong> 完成了。&lt;/p>
&lt;h4 id="24-配合configuration使用">2.4 配合@Configuration使用&lt;/h4>
&lt;p>在使用自定义的Enable注解需要搭配Spring原生的 &lt;strong>@Configuration&lt;/strong> 进行使用(原理已经在上面介绍)&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@EnableLog&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Configuration&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">EnableLogConfig&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>如上代码这样就可以使用了。&lt;/p>
&lt;blockquote>
&lt;p>Tips: 如果是SpringBoot项目，可以直接放在@SpringBootApplication注解的类上面，有人会问为什么放在这里可以呢？原因就是 @SpringBootConfiguration注解上面配置了 @Configuration 注解。原因就在这里@SpringBootApplication就相当于一个@Configuration注解，所以我们自定义的Enable注解可以直接放在@SpringBootApplication，当然也可以自定义一个用@Configuration修饰的类上面。&lt;/p>
&lt;/blockquote>
&lt;p>代码会在后续的文章给出来。这里涉及到AOP的拓展。&lt;/p>
&lt;h3 id="3-总结">3. 总结&lt;/h3>
&lt;ul>
&lt;li>Enable类型的注解从Spring原生的和自己拓展的来看，相当于一个开关。增加这个注解就开启了一个功能，需要搭配其他的注解来使用，例如：@EnableAsync搭配@Async注解，@EnableTransactionManagement搭配@Transactional注解使用&lt;/li>
&lt;li>Enable类型注解生效需要搭配@Configuration注解&lt;/li>
&lt;li>Enable类型注解的实现需要搭配注解@Import导入，功能实现需要实现&lt;strong>DeferredImportSelector、ImportSelector、ImportBeanDefinitionRegistrar&lt;/strong> 三个接口中一个。&lt;/li>
&lt;/ul>
&lt;p>将Spring的原生注解和一些特定的拓展接口实现自定义Enable类型注解。&lt;/p></description></item><item><title>Spring-Framework: 基于Spring AOP自定义注解</title><link>/spring-framework/custom-component/spring-extend-aop-annotation/</link><pubDate>Fri, 21 Jan 2022 00:00:00 +0000</pubDate><guid>/spring-framework/custom-component/spring-extend-aop-annotation/</guid><description>
&lt;p>Spring AOP在Spring项目中有了很多自己的应用，例如@EnableAsync和@Async就是AOP的体现，那么我们如何自己在Spring AOP的原理下自定义自己的注解。&lt;/p>
&lt;h3 id="1-基于spring-aop自定义注解原理">1. 基于Spring AOP自定义注解原理&lt;/h3>
&lt;p>Spring AOP基于动态代理来实现，默认如果使用接口的，用JDK提供的动态代理实现，如果是类则使用CGLIB实现。通过@EnableAspectJAutoProxy开启AOP（同时开启对AspectJ的支持）。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/custom/%E5%9F%BA%E4%BA%8EAOP%E6%B3%A8%E8%A7%A3%E8%87%AA%E5%AE%9A%E4%B9%89.png" alt="基于AOP注解自定义">&lt;/p>
&lt;ul>
&lt;li>@EnableAspectJAutoProxy启动Spring AOP&lt;/li>
&lt;li>Spring AOP分为两种实现：
&lt;ul>
&lt;li>基于AspectJ注解&lt;/li>
&lt;li>基于Spring AOP思想，也就是&lt;strong>Advice&lt;/strong> 、 &lt;strong>Pointcut&lt;/strong> 、 &lt;strong>Advisor&lt;/strong> 这个三个，对应MethodInterceptor、AbstractBeanFactoryPointcutAdvisor、StaticMethodMatcherPointcut 三个类。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>在Spring容器启动后生成对应的代理类，在执行方法的时候根据切面来执行对应的方法&lt;/li>
&lt;/ul>
&lt;h3 id="2-代码实战">2. 代码实战&lt;/h3>
&lt;p>将@Enable类型的注解与AOP拓展的接口相结合完成一个完整的功能。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/custom/%E5%9F%BA%E4%BA%8EAOP%E6%B3%A8%E8%A7%A3%E8%87%AA%E5%AE%9A%E4%B9%89%E6%AD%A5%E9%AA%A4.png" alt="基于AOP注解自定义步骤">&lt;/p>
&lt;h4 id="21-定义enable注解">2.1 定义@Enable注解&lt;/h4>
&lt;p>结合上一篇文章《&lt;a href="https://juejin.cn/post/7055288159042535460">如何自定义Spring Enable注解&lt;/a>》的@EnableLog的功能&lt;/p>
&lt;h4 id="22-定义切面注解">2.2 定义切面注解&lt;/h4>
&lt;p>定义一个@Log注解，功能：用来记录日志&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Documented&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">({&lt;/span>&lt;span style="color:#000">ElementType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">METHOD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">})&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Retention&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RetentionPolicy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">RUNTIME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Inherited&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@interface&lt;/span> &lt;span style="color:#000">Log&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * log template
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @return
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">template&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="23-实现aop的三个接口">2.3 实现AOP的三个接口&lt;/h4>
&lt;p>&lt;strong>MethodInterceptor&lt;/strong> 是动态类的方法拦截器，用来拦截执行方法。这里就是AOP动态类的增强&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">LogAdvice&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">MethodInterceptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanFactoryAware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略了部分代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">invoke&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">MethodInvocation&lt;/span> &lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Method&lt;/span> &lt;span style="color:#000">method&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">execute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getThis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">invocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getArguments&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">execute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">MethodInvocation&lt;/span> &lt;span style="color:#000">invoker&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Method&lt;/span> &lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">LogWorker&lt;/span> &lt;span style="color:#000">worker&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LogWorker&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">async&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logExecutor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">submit&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">worker&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span> &lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">worker&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">run&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span> &lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Exception&lt;/span> &lt;span style="color:#000">e&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//e.printStackTrace();
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">warn&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Failure to record logs!&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">e&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">invoker&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">proceed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>主要是实现 &lt;strong>invoke&lt;/strong> 方法，这里实现了日志记录的方法。和调用目标类的返回执行结果。&lt;/p>
&lt;p>&lt;strong>StaticMethodMatcherPointcut&lt;/strong> 切入点的实现类：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">LogPointcut&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">StaticMethodMatcherPointcut&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">matches&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Method&lt;/span> &lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">targetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">AnnotatedElementUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">hasAnnotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Log&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里决定了切入点，代码表示了当方法被注解@Log标注了就是匹配到了切入点&lt;/p>
&lt;p>&lt;strong>AbstractBeanFactoryPointcutAdvisor&lt;/strong> ：通知器用来组织 Advice 和 Pointcut&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">LogAdvisor&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">AbstractBeanFactoryPointcutAdvisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#000">Pointcut&lt;/span> &lt;span style="color:#000">logPointcut&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">LogAdvisor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Pointcut&lt;/span> &lt;span style="color:#000">logPointcut&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">logPointcut&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">logPointcut&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * Get the Pointcut that drives this advisor.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Pointcut&lt;/span> &lt;span style="color:#000">getPointcut&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">logPointcut&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这三个接口实现后把 &lt;strong>Advice&lt;/strong> 、 &lt;strong>Pointcut&lt;/strong> 、 &lt;strong>Advisor&lt;/strong> 三者组织起来，然后注册到Spring IOC容器。&lt;/p>
&lt;h4 id="24-使用切面注解在需要的方法类">2.4 使用切面注解在需要的方法(类)&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@SpringBootApplication&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@EnableLog&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">Application&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">SpringApplication&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">run&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Application&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>&lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Component&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">Test&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">test&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(){&lt;/span>
&lt;span style="color:#000">System&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">out&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">println&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">1111&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Log&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">template&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;用户${#user.name}信息：${@test.getName(#user)}&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">addUser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">User&lt;/span> &lt;span style="color:#000">user&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">){&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">User&lt;/span> &lt;span style="color:#000">user&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">){&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">user&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>首先在SpringBoot启动类上加入 &lt;strong>@EnableLog&lt;/strong> 然后在需要记录的类的方法上加上 &lt;strong>@Log&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>AOP注解定义代码：https://github.com/mxsm/mxsm-log4j&lt;/p>
&lt;p>测试代码：https://github.com/mxsm/spring-sample/tree/spring-5.3.x/spring-boot&lt;/p>
&lt;/blockquote>
&lt;p>这里是基于Spring AOP接口来实现自定义接口的功能实现，在Spring中还有可以根据AspectJ注解来实现。这里就不详细讲解。想要了解的同学可以在&lt;a href="https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#aop">Spring官网 AOP&lt;/a> 的 &lt;strong>Aspect Oriented Programming with Spring&lt;/strong> 章节查看。所以基于Spring AOP的注解定义就有两种方式。&lt;/p>
&lt;h3 id="3-总结">3. 总结&lt;/h3>
&lt;ul>
&lt;li>基于AspectJ的定义实现比较简单，无需搭配自定义的@Enablexxx注解使用，只需要用@EnableAspectJAutoProxy(完成了我们自定义@Enablexxx的注解)开启AOP即可。&lt;/li>
&lt;li>基于Spring AOP定义注解底层是基于动态代理。Spring动态代理可以选择JDK或者Cglib&lt;/li>
&lt;/ul></description></item><item><title>Spring-Framework: Spring BeanPostProcessor执行顺序问题</title><link>/spring-framework/core-source-analysis/spring-beanpostprocessor-order/</link><pubDate>Sun, 23 Jan 2022 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/spring-beanpostprocessor-order/</guid><description>
&lt;blockquote>
&lt;p>Spring Framework版本：5.3.x&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>&lt;code>BeanPostProcessor&lt;/code>&lt;/strong> 在Spring框架中举足轻重，还有很多继承的类。&lt;/p>
&lt;p>&lt;strong>作用：管理Bean的生命周期：Bean实例化&amp;mdash;&amp;gt;Bean初始化&amp;mdash;&amp;gt;Bean使用中&amp;mdash;&amp;gt;Bean销毁&lt;/strong>&lt;/p>
&lt;p>在Spring 容器初始化的时候就会存在这些类执行的一个先后的问题，今天我们就把这些类的执行先后顺序进行梳理。&lt;/p>
&lt;h3 id="1-beanpostprocessor的分类">1. BeanPostProcessor的分类&lt;/h3>
&lt;p>&lt;strong>&lt;code>BeanPostProcessor&lt;/code>&lt;/strong> 作为顶层接口会有很多的继承接口和实现类，下图就是分类：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/BeanPostProcessor%E5%88%86%E9%97%A8%E5%88%AB%E7%B1%BB.png" alt="BeanPostProcessor分门别类">&lt;/p>
&lt;p>如上图所示包括 &lt;strong>BeanPostProcessor&lt;/strong> 在内，一共有五个接口类。分成了三个功能模块。&lt;/p>
&lt;ul>
&lt;li>Bean实例化这要由InstantiationAwareBeanPostProcessor、SmartInstantiationAwareBeanPostProcessor负责。&lt;/li>
&lt;li>Bean初始化由BeanPostProcessor、MergedBeanDefinitionPostProcessor两个接口负责&lt;/li>
&lt;li>Bean销毁由DestructionAwareBeanPostProcessor接口负责&lt;/li>
&lt;/ul>
&lt;p>从分类可以看出来这个五个接口分别对应Bean的三个阶段：实例化、初始化、以及销毁。那么各个阶段里面的执行顺序是怎么样的我们接着往下分析&lt;/p>
&lt;h3 id="2-接口的执行顺序">2. 接口的执行顺序&lt;/h3>
&lt;p>BeanPostProcessor主要负责Bean的生命周期，那么我们从获取Bean的接口入手看获取到Bean的过程中需要执行那些接口。跟踪代码最终跟踪到了 AbstractBeanFactory#doGetBean方法：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#8f5902;font-style:italic">//AbstractBeanFactory#doGetBean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">sharedInstance&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&amp;gt;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">createBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Explicitly remove instance from singleton cache: It might have been put there
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// eagerly by the creation process, to allow for circular reference resolution.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// Also remove any beans that received a temporary reference to the bean.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">destroySingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">});&lt;/span>
&lt;span style="color:#000">beanInstance&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getObjectForBeanInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sharedInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在这个当中有一个 &lt;strong>createBean&lt;/strong> 方法。从名称可以知道是用来创建Bean的(实例化)。在这个方法里面主要有三段重要代码：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">doCreateBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeanCreationException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略部分代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Allow post-processors to modify the merged bean definition.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">synchronized&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">postProcessingLock&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">postProcessed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">applyMergedBeanDefinitionPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanCreationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getResourceDescription&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Post-processing of merged bean definition failed&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">postProcessed&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Initialize the bean instance.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">exposedObject&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">populateBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">instanceWrapper&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">exposedObject&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">initializeBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">exposedObject&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ex&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">BeanCreationException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">equals&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(((&lt;/span>&lt;span style="color:#000">BeanCreationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">getBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanCreationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanCreationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getResourceDescription&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Initialization of bean failed&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Register bean as disposable.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">registerDisposableBeanIfNecessary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionValidationException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanCreationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getResourceDescription&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Invalid destruction signature&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">exposedObject&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这段代码涵盖了上面五个接口的四个分别是：InstantiationAwareBeanPostProcessor、SmartInstantiationAwareBeanPostProcessor、BeanPostProcessor、MergedBeanDefinitionPostProcessor。唯一的Bean的销毁，Bean的销毁是随着Spring容器销毁而销毁的。整个执行的流程和步骤如下图：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/BeanPostProcessor%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F.png" alt="BeanPostProcessor执行顺序">&lt;/p>
&lt;p>从上图的执行顺序可以看出来：&lt;/p>
&lt;ul>
&lt;li>接口之间的执行顺序不是严格按照: &lt;strong>实例化-&amp;gt;初始化-&amp;gt;销毁&lt;/strong> 这样的严格顺序来进行。接口方法之间的顺序会有穿插的情况。&lt;/li>
&lt;li>&lt;strong>InstantiationAwareBeanPostProcessor#postProcessBeforeInstantiation&lt;/strong> 方法执行如果返回了对应的Bean的实例，后续的接口都不会执行了。 &lt;strong>&lt;code>这里我们可以加入自定义的类。典型的例子就是动态代理的实现，可以继承当前接口并且在改方法中实现动态代理。这样在Spring 容器中的实例就是一个动态代理实例。&lt;/code>&lt;/strong>&lt;/li>
&lt;li>&lt;strong>DestructionAwareBeanPostProcessor&lt;/strong> 接口一般情况下是不会执行，只有当Spring容器销毁就会触发容器里面类的销毁机制。&lt;/li>
&lt;li>同一种类型接口如果有继承 PriorityOrdered 和Ordered进行排序。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Tips: 对于基于BeanPostProcessor自定义开发来说，主要用于自定义方法或者属性类上面的注解。这里举两个Spring的例子：&lt;strong>AutowiredAnnotationBeanPostProcessor&lt;/strong> 处理@Autowired， @Value注解， &lt;strong>AsyncAnnotationBeanPostProcessor&lt;/strong> 处理 @Async注解。这些注解都是在属性上或者方法上面。&lt;/p>
&lt;/blockquote>
&lt;h3 id="3-总结">3. 总结&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>BeanPostProcessor&lt;/strong> 接口主要是启动的时候添加到Spring容器中提供给后续的使用&lt;/li>
&lt;li>&lt;strong>BeanPostProcessor&lt;/strong> 接口执行主要发生在获取Bean的流程中(Bean的生命周期)&lt;/li>
&lt;li>自定义开发可以参照Spring已有的实现，能够更加明了的知道如何进行进一步拓展使用&lt;/li>
&lt;/ul></description></item><item><title>Spring-Framework: Spring 注解解析顺序问题</title><link>/spring-framework/annotation-source-analysis/spring-annonation-parese-order/</link><pubDate>Sun, 23 Jan 2022 00:00:00 +0000</pubDate><guid>/spring-framework/annotation-source-analysis/spring-annonation-parese-order/</guid><description>
&lt;p>在之前的Spring相关文章当中分析过 &lt;strong>BeanPostProcessor&lt;/strong> 接口执行顺序问题，今天突然想到在Spring框架中常用的注解也不少。那么注解的解析到底是一个什么样的先后顺序呢？今天就通过源码来分析总结一下Spring常用注解的解析顺序，注解使用的时候应该注意什么？&lt;/p>
&lt;h3 id="1-spring-常用注解">1. Spring 常用注解&lt;/h3>
&lt;p>这里我将Spring常用注解按照添加的位置分成了两类：&lt;/p>
&lt;ul>
&lt;li>添加在类上&lt;/li>
&lt;li>添加在类的属性或者方法上面&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/Spring%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3-%E4%BF%AE%E9%A5%B0%E7%B1%BB.jpeg" alt="Spring常用注解-修饰类">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Bean创建相关的注解&lt;/strong>&lt;/p>
&lt;p>Bean创建，定义的核心注解就是 &lt;strong>&lt;code>@Component&lt;/code>&lt;/strong> 。而 &lt;strong>@Service、@Repository、@Controller&lt;/strong> 三个只是 &lt;strong>@Component&lt;/strong> 的不同语义下的延伸。本质上还是@Component。 &lt;strong>@Bean&lt;/strong> 是配合 &lt;strong>@Configuration&lt;/strong> 注解使用的另一类注解。功能和 &lt;strong>@Component&lt;/strong> 相似但是对一下创建完全有开发者来创建。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>配置相关注解&lt;/strong>&lt;/p>
&lt;p>&lt;strong>@Configuration&lt;/strong> 毋庸置疑是除了 &lt;strong>@Component&lt;/strong> 注解意外最重要的注解之一。原因是很多其他的注解都是依赖 &lt;strong>@Configuration&lt;/strong> 注解才能发挥作用。例如上图标号3、4、5、6那些注解都是依赖了它才能发挥作用。修饰的类被当做配置类。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>属性相关注解&lt;/strong>&lt;/p>
&lt;p>将注解将properties配置文件中的值存储到Spring的 Environment中&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>扫描相关注解&lt;/strong>&lt;/p>
&lt;p>根据配置的基础扫描包的路径扫描@Component注解类&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>导入注解&lt;/strong>&lt;/p>
&lt;p>这个注解算是一个辅助注解，导入一些被@Configuration修饰或者实现了 ImportSelector, ImportBeanDefinitionRegistrar接口的类，或者被 @Component修饰的类。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>导入资源相关注解&lt;/strong>&lt;/p>
&lt;p>用于导入Spring的配置文件。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="2-类修饰注解解析顺序分析">2. 类修饰注解解析顺序分析&lt;/h3>
&lt;p>Spring注解应用上下文的入口为 &lt;strong>&lt;code>AnnotationConfigApplicationContext&lt;/code>&lt;/strong> ，用一段代码作为切入：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#000">ApplicationContext&lt;/span> &lt;span style="color:#000">applicationContext&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AnnotationConfigApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;com.github.mxsm&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>根据这段代码来逐一分析这些注解的解析，以及解析的顺序。&lt;/p>
&lt;h4 id="21-component注解解析">2.1 @Component注解解析&lt;/h4>
&lt;p>&lt;strong>ClassPathBeanDefinitionScanner#scan&lt;/strong> 方法负责扫描基础包下面的带有 &lt;strong>@Component&lt;/strong> 流程图如下：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/%E6%B3%A8%E8%A7%A3Component%E8%A7%A3%E6%9E%90%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt="注解Component解析流程图">&lt;/p>
&lt;p>这里也通过设置 &lt;strong>ClassPathBeanDefinitionScanner&lt;/strong> 的 includeFilters(TypeFilter) 和excludeFilters(TypeFilter)来判断哪些是Bean哪些需要排除。&lt;/p>
&lt;h4 id="22-configuration注解解析">2.2 @Configuration注解解析&lt;/h4>
&lt;p>&lt;strong>@Configuration&lt;/strong> 注解的解析主要由 &lt;strong>ConfigurationClassPostProcessor&lt;/strong> 负责解析。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#8f5902;font-style:italic">//ConfigurationClassPostProcessor#processConfigBeanDefinitions
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">processConfigBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionRegistry&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//从Spring容器中获取包含了@Configuration注解的类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">candidateNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanDefinition&lt;/span> &lt;span style="color:#000">beanDef&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanDef&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurationClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">CONFIGURATION_CLASS_ATTRIBUTE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isDebugEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">debug&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Bean definition has already been processed as a configuration class: &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">beanDef&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurationClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">checkConfigurationClassCandidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanDef&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">metadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">configCandidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanDef&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//没有配置@Configuration的BeanDefinition直接返回不往下解析了
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configCandidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略了部分代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ConfigurationClassParser&lt;/span> &lt;span style="color:#000">parser&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ConfigurationClassParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">metadataReaderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">problemReporter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">environment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resourceLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">componentScanBeanNameGenerator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">parser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">candidates&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">parser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">validate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>从Spring容器中获取包含了@Configuration注解的类放在列表中。&lt;strong>&lt;code>ConfigurationClassParser&lt;/code>&lt;/strong> 负责后续的解析。&lt;/p>
&lt;blockquote>
&lt;p>Tips：如果包含了@Order注解，会对类进行排序&lt;/p>
&lt;/blockquote>
&lt;p>解析完成@Configuration注解后，解析和@Configuration有依赖的注解。&lt;/p>
&lt;blockquote>
&lt;p>Tips: &lt;strong>ConfigurationClassUtils.checkConfigurationClassCandidate&lt;/strong> 这段代码是检查 BeanDefinition是否包含了@Configuration注解，如果没有那么configCandidates就不会往里面放入BeanDefinition。同时configCandidates如果是空的那么也不需要进行后续解析。&lt;/p>
&lt;p>也就是说：如果没有一个类配置了@Configuration注解，那么依赖@Configuration注解的@PropertySource、@ComponentScan、@Import、@ImportResource、@Bean注解都不会起作用也不被解析&lt;/p>
&lt;/blockquote>
&lt;h4 id="23-其他注解解析">2.3 其他注解解析&lt;/h4>
&lt;p>依赖@Configuration的其他注解都是由 &lt;strong>ConfigurationClassParser#doProcessConfigurationClass&lt;/strong> 进行解析,通过代码发现解析的顺序：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#8f5902;font-style:italic">//ConfigurationClassParser#doProcessConfigurationClass
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">SourceClass&lt;/span> &lt;span style="color:#000">doProcessConfigurationClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">ConfigurationClass&lt;/span> &lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">SourceClass&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Predicate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">filter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略部分代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Process any @PropertySource annotations (1)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AnnotationAttributes&lt;/span> &lt;span style="color:#000">propertySource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">attributesForRepeatable&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">PropertySources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">org&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">springframework&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">annotation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PropertySource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">environment&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">ConfigurableEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">processPropertySource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">propertySource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Process any @ComponentScan annotations (2)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">AnnotationAttributes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">componentScans&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">attributesForRepeatable&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">ComponentScans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ComponentScan&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">componentScans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">conditionEvaluator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">shouldSkip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">ConfigurationPhase&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">REGISTER_BEAN&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AnnotationAttributes&lt;/span> &lt;span style="color:#000">componentScan&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">componentScans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// The config class is annotated with @ComponentScan -&amp;gt; perform the scan immediately
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">scannedBeanDefinitions&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">componentScanParser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">componentScan&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Process any @Import annotations (3)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">processImports&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getImports&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">),&lt;/span> &lt;span style="color:#000">filter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Process any @ImportResource annotations (4)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">AnnotationAttributes&lt;/span> &lt;span style="color:#000">importResource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#000">AnnotationConfigUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">attributesFor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">ImportResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">importResource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">resources&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">importResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getStringArray&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;locations&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">BeanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">readerClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">importResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;reader&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">resource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">resources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">resolvedResource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">environment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resolveRequiredPlaceholders&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addImportedResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resolvedResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">readerClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Process individual @Bean methods (5)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">MethodMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">beanMethods&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">retrieveBeanMethodMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">MethodMetadata&lt;/span> &lt;span style="color:#000">methodMetadata&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">beanMethods&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addBeanMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">methodMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Process default methods on interfaces
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">processInterfaces&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sourceClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// No superclass -&amp;gt; processing is complete
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>上面代码中的标号揭示了解析顺序：&lt;/p>
&lt;p>（1）解析@PropertySource&lt;/p>
&lt;p>（2）解析@ComponentScan&lt;/p>
&lt;p>（3）解析@Import&lt;/p>
&lt;p>（4）解析@ImportResource&lt;/p>
&lt;p>（5）解析@Bean&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/ConfigurationClassParser%E8%A7%A3%E6%9E%90%E6%B3%A8%E8%A7%A3%E7%9A%84%E9%A1%BA%E5%BA%8F.png" alt="ConfigurationClassParser解析注解的顺序">&lt;/p>
&lt;p>在解析 @ComponentScan注解和@Import注解的时候如果扫描或者导入的类又存在@Configuration注解就会再一次重复执行@Configuration注解的解析流程。&lt;/p>
&lt;p>通过上面分析可以总结出整体的一个解析顺序和流程如下图所示：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/Spring%E5%B8%B8%E7%94%A8%E7%B1%BB%E6%B3%A8%E8%A7%A3%E7%9A%84%E8%A7%A3%E6%9E%90%E5%85%88%E5%90%8E%E9%A1%BA%E5%BA%8F.png" alt="Spring常用类注解的解析先后顺序">&lt;/p>
&lt;h3 id="3-修饰属性或者方法注解解析顺序分析">3. 修饰属性或者方法注解解析顺序分析&lt;/h3>
&lt;p>通过对Spring源码的分析可以知道处理 &lt;strong>&lt;code>@Value&lt;/code>&lt;/strong> 和 &lt;strong>&lt;code>@Autowired&lt;/code>&lt;/strong> 注解主要由 &lt;strong>&lt;code>AutowiredAnnotationBeanPostProcessor&lt;/code>&lt;/strong> 来实现。研究源码发现， &lt;strong>&lt;code>@Value&lt;/code>&lt;/strong> 和 &lt;strong>&lt;code>@Autowired&lt;/code>&lt;/strong> 注解都可以归结为一类注解：自动装配注解，只是 &lt;strong>&lt;code>@Value&lt;/code>&lt;/strong> 装配的是基本类型或者包装类型以及String类型的数据， 而 &lt;strong>&lt;code>@Autowired&lt;/code>&lt;/strong> 自动装配的是对象。&lt;/p>
&lt;p>所以 &lt;strong>&lt;code>@Value&lt;/code>&lt;/strong> 和 &lt;strong>&lt;code>@Autowired&lt;/code>&lt;/strong> 没有严格意义上的前后顺序。&lt;/p>
&lt;h3 id="4-总结">4. 总结&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Spring 中@Component注解是很多注解的元注解(定义的注解被@Component修饰)，例如@Service只是不同语义的定义而已，本质上都是@Component注解，包括@Configuration注解&lt;/strong>&lt;/li>
&lt;li>&lt;strong>@PropertySource、@ComponentScan、@Import、@ImportResource、@Bean单独是没办法使用，从上面的解析顺序分析可以得出结论，如果一个类上面配置了这五个注解但是没有配置@Configuration注解，这些注解都没办法起作用。要想起作用必须和@Configuration搭配使用。这个是最重要的一点&lt;/strong>&lt;/li>
&lt;li>&lt;strong>@ComponentScan会重新执行ClassPathBeanDefinitionScanner#scan扫描，会在走一遍解析的流程&lt;/strong>&lt;/li>
&lt;li>&lt;strong>@Import如果导入了包含@Configuration注解的类也同样会走一遍@Configuration的解析流程&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>在注解使用的时候注意有依赖关系的需要搭配使用单独使用会没有效果。&lt;/strong>&lt;/p></description></item><item><title>Spring-Framework: Spring BeanFactoryPostProcessor执行顺序</title><link>/spring-framework/core-source-analysis/spring-beanfactorypostprocessor-order/</link><pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/spring-beanfactorypostprocessor-order/</guid><description>
&lt;h3 id="1-前言">1. 前言&lt;/h3>
&lt;p>在之前的文章《&lt;a href="https://blog.ljbmxsm.com/spring-framework/core-source-analysis/spring-beanpostprocessor-order/">Spring BeanPostProcessor执行顺序问题&lt;/a>》介绍过 &lt;strong>&lt;code>BeanPostProcessor&lt;/code>&lt;/strong> ， 使用Spring框架的人可能会注意到这样一个类 &lt;strong>&lt;code>BeanFactoryPostProcessor&lt;/code>&lt;/strong> 和 &lt;strong>&lt;code>BeanPostProcessor&lt;/code>&lt;/strong> 名称很接近。下面来看一下**&lt;code>BeanFactoryPostProcessor&lt;/code>** 的作用。&lt;/p>
&lt;p>&lt;strong>BeanFactoryPostProcessor：&lt;/strong> Spring Bean Factory的前置处理器，允许自定义修改应用上下文的Bean的定义。同时可以调整上下文的底层bean工厂的bean属性值。常用的拓展接口如下：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/%E5%B8%B8%E7%94%A8%E7%9A%84%E6%8B%93%E5%B1%95%E6%8E%A5%E5%8F%A3%E7%B1%BB.png" alt="常用的拓展接口类">&lt;/p>
&lt;p>类之间的继承关系如下：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/image-20220201120007663.png" alt="image-20220201120007663">&lt;/p>
&lt;p>上面存在两个重要的接口：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>BeanFactoryPostProcessor&lt;/strong>&lt;/li>
&lt;li>&lt;strong>BeanDefinitionRegistryPostProcessor&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>接下来着重分析这两个接口的作用&lt;/p>
&lt;h3 id="2接口的执行顺序">2.接口的执行顺序&lt;/h3>
&lt;p>接下来从 &lt;strong>&lt;code>BeanFactoryPostProcessor&lt;/code>&lt;/strong> 和 &lt;strong>&lt;code>BeanDefinitionRegistryPostProcessor&lt;/code>&lt;/strong> 实现类注入和执行顺序来看。&lt;/p>
&lt;h4 id="21-接口实现类在哪里注入">2.1 接口实现类在哪里注入？&lt;/h4>
&lt;p>用现在最常用的注解上下文来解析，通过 &lt;strong>AnnotationConfigApplicationContext&lt;/strong> 源码发现，属性 &lt;strong>AnnotatedBeanDefinitionReader&lt;/strong> 实例化有这样一段代码：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/image-20220201123122834.png" alt="image-20220201123122834">&lt;/p>
&lt;p>跟进代码 &lt;strong>AnnotationConfigUtils#registerAnnotationConfigProcessors&lt;/strong> 发现&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/image-20220201165201280.png" alt="image-20220201165201280">&lt;/p>
&lt;ol>
&lt;li>将 &lt;strong>ConfigurationClassPostProcessor&lt;/strong> 类的定义注册到了Spring容器中。&lt;/li>
&lt;/ol>
&lt;p>到这里就是 &lt;strong>&lt;code>BeanFactoryPostProcessor&lt;/code>&lt;/strong> 和 &lt;strong>&lt;code>BeanDefinitionRegistryPostProcessor&lt;/code>&lt;/strong> 的接口的实现类注册到Spring容器&lt;/p>
&lt;h4 id="22-接口的执行顺序">2.2 接口的执行顺序&lt;/h4>
&lt;p>通过 &lt;strong>AnnotationConfigApplicationContext&lt;/strong> 源码发现在 refresh 方法中有执行 &lt;strong>BeanFactoryPostProcessor&lt;/strong> 。最终调用的是调用了父类的 &lt;strong>&lt;code>AbstractApplicationContext#refresh&lt;/code>&lt;/strong> 方法，在方法中有这样一段代码：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/image-20220201170035512.png" alt="image-20220201170035512">&lt;/p>
&lt;ol>
&lt;li>这里就是执行 &lt;strong>BeanFactoryPostProcessor&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>我们看一下里面 &lt;strong>&lt;code>BeanFactoryPostProcessor&lt;/code>&lt;/strong> 和 &lt;strong>&lt;code>BeanDefinitionRegistryPostProcessor&lt;/code>&lt;/strong> 接口的执行顺序，分析源码可以知道是通过 &lt;strong>&lt;code>PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors&lt;/code>&lt;/strong> 来执行，分为以下几个执行部分：&lt;/p>
&lt;p>&lt;strong>执行BeanDefinitionRegistryPostProcessor：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>从Spring容器中获取**&lt;code>BeanFactoryPostProcessor&lt;/code>** 和 **&lt;code>BeanDefinitionRegistryPostProcessor&lt;/code>** 的实现类&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/image-20220201170822680.png" alt="image-20220201170822680">&lt;/p>
&lt;blockquote>
&lt;p>Tips: 如果是BeanDefinitionRegistryPostProcessor的实现类同时执行BeanDefinitionRegistryPostProcessor#postProcessBeanDefinitionRegistry方法&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>首先执行 &lt;strong>BeanDefinitionRegistryPostProcessors#postProcessBeanDefinitionRegistry&lt;/strong> 实现了 &lt;strong>PriorityOrdered&lt;/strong> 接口的&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/image-20220201173137323.png" alt="image-20220201173137323">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>然后执行 &lt;strong>BeanDefinitionRegistryPostProcessors#postProcessBeanDefinitionRegistry&lt;/strong> 实现了 &lt;strong>Ordered&lt;/strong> 接口的&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/image-20220201173224200.png" alt="image-20220201173224200">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在执行剩下的 &lt;strong>BeanDefinitionRegistryPostProcessors#postProcessBeanDefinitionRegistry&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/image-20220201173343336.png" alt="image-20220201173343336">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>接着执行 &lt;strong>BeanDefinitionRegistryPostProcessor#postProcessBeanFactory&lt;/strong> 方法和 &lt;strong>BeanFactoryPostProcessor#postProcessBeanFactory&lt;/strong> 方法&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/image-20220201173753538.png" alt="image-20220201173753538">&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>执行BeanFactoryPostProcessor执行：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>执行 &lt;strong>BeanFactoryPostProcessor#postProcessBeanFactory&lt;/strong> 实现了 &lt;strong>PriorityOrdered&lt;/strong> 接口的&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#000">sortPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">priorityOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">priorityOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>执行 &lt;strong>BeanFactoryPostProcessor#postProcessBeanFactory&lt;/strong> 实现了 &lt;strong>Ordered&lt;/strong> 接口的&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">orderedPostProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">orderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">size&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">postProcessorName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">orderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">orderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">postProcessorName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">sortPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">orderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">orderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>执行剩下的 &lt;strong>BeanFactoryPostProcessor#postProcessBeanFactory&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">nonOrderedPostProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">nonOrderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">size&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">postProcessorName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">nonOrderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">nonOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">postProcessorName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">nonOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>通过上面的代码分析总结一下 &lt;strong>&lt;code>BeanFactoryPostProcessor&lt;/code>&lt;/strong> 和 &lt;strong>&lt;code>BeanDefinitionRegistryPostProcessor&lt;/code>&lt;/strong> 执行顺序，如下图所示：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/BeanFactoryPostProcessor%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt="BeanFactoryPostProcessor执行流程图">&lt;/p>
&lt;ol>
&lt;li>首先应该执行 &lt;strong>BeanDefinitionRegistryPostProcessor#postProcessBeanDefinitionRegistry&lt;/strong> 方法&lt;/li>
&lt;li>然后执行 &lt;strong>BeanDefinitionRegistryPostProcessor#postProcessBeanFactory&lt;/strong> 方法&lt;/li>
&lt;li>最后执行 &lt;strong>BeanFactoryPostProcessor#postProcessBeanFactory&lt;/strong> 方法&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>Tips: BeanDefinitionRegistryPostProcessor和BeanFactoryPostProcessor的执行还和PriorityOrdered以及Ordered有关。&lt;/p>
&lt;/blockquote>
&lt;h3 id="3-总结">3. 总结&lt;/h3>
&lt;p>&lt;strong>&lt;code>BeanFactoryPostProcessor&lt;/code>&lt;/strong> 和 &lt;strong>&lt;code>BeanDefinitionRegistryPostProcessor&lt;/code>&lt;/strong> 可通过Spring原生的实现来做一些用户自定义的拓展，例如 &lt;strong>ConfigurationClassPostProcessor&lt;/strong> 可以受到启发我们可以自定义一些配置在类上面的注解，例如自定义和@Component类似的注解。&lt;/p></description></item><item><title>Spring-Framework: Spring中那些容易混淆的类开发中该如何选择?</title><link>/spring-framework/experience/spring-easy-confuse-class/</link><pubDate>Thu, 03 Feb 2022 00:00:00 +0000</pubDate><guid>/spring-framework/experience/spring-easy-confuse-class/</guid><description>
&lt;p>Spring在使用过程中会发现有很多那些名字相近的拓展接口。这些接口有的实现的功能区别很大有的区别较小。下面就来总结下一下Spring中那些容易混淆的类，同时说一下作用以及拓展应用。&lt;/p>
&lt;blockquote>
&lt;p>Spring版本：5.3.x&lt;/p>
&lt;/blockquote>
&lt;h3 id="1--beanfactorypostprocessor与beanpostprocessor">1. BeanFactoryPostProcessor与BeanPostProcessor&lt;/h3>
&lt;p>BeanFactoryPostProcessor与BeanPostProcessor因为名字很相近稍微不注意就会认为是一样的。其实这个两个是两个完全不一样的接口&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/experience/BeanFactoryPostProcessor%E4%B8%8EBeanPostProcessor.png" alt="BeanFactoryPostProcessor与BeanPostProcessor">&lt;/p>
&lt;h4 id="11-beanfactorypostprocessor">1.1 BeanFactoryPostProcessor&lt;/h4>
&lt;p>&lt;strong>作用：&lt;/strong> BeanFactory的后置处理器，允许自定义修改应用上下文的Bean的定义。同时可以调整上下文的底层bean工厂的bean属性值。&lt;/p>
&lt;p>&lt;strong>执行时间：&lt;/strong> Spring 上下文刷新的时候执行&lt;/p>
&lt;p>&lt;strong>自定义拓展：&lt;/strong> 可以用来自定义修饰类的注解,比如自定义一个@Component&lt;/p>
&lt;h4 id="12-beanpostprocessor">1.2 BeanPostProcessor&lt;/h4>
&lt;p>&lt;strong>作用：&lt;/strong> Bean的后置处理器，允许自定义修改新bean实例——例如，检查标记接口或用代理包装bean。(动态代理)&lt;/p>
&lt;p>&lt;strong>执行时间：&lt;/strong> 从Spring 容器中获取Bean的时候&lt;/p>
&lt;p>&lt;strong>自定义拓展：&lt;/strong> 可以用来自定义修饰类熟悉的注解像@Value&lt;/p>
&lt;h3 id="2-importbeandefinitionregistrar和importselector">2. ImportBeanDefinitionRegistrar和ImportSelector&lt;/h3>
&lt;p>ImportBeanDefinitionRegistrar和ImportSelector主要搭配注解@Import使用，在一些自定义拓展的过程中可能会发现有的人使用的是ImportBeanDefinitionRegistrar实现类，有的使用的是ImportSelector使用类。所以在使用的时候就很疑惑到底使用哪个？&lt;/p>
&lt;h4 id="21-importbeandefinitionregistrar">2.1 ImportBeanDefinitionRegistrar&lt;/h4>
&lt;p>看一下接口源码：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">ImportBeanDefinitionRegistrar&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">registerBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AnnotationMetadata&lt;/span> &lt;span style="color:#000">importingClassMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanDefinitionRegistry&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">BeanNameGenerator&lt;/span> &lt;span style="color:#000">importBeanNameGenerator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">registerBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">importingClassMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">registerBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">AnnotationMetadata&lt;/span> &lt;span style="color:#000">importingClassMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanDefinitionRegistry&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>ImportBeanDefinitionRegistrar#registerBeanDefinitions&lt;/strong> 方法参数有一个&lt;strong>BeanDefinitionRegistry&lt;/strong> ，说明在&lt;strong>ImportBeanDefinitionRegistrar&lt;/strong> 实现可以直接往Spring容器中注册Bean的定义。同时也可以获取到 @Import修饰的注解。&lt;/p>
&lt;h4 id="22-importselector">2.2 ImportSelector&lt;/h4>
&lt;p>ImportSelector只能选择性的往导入需要的类名称，如果导入的类是ImportBeanDefinitionRegistrar或者ImportSelector会进行进一步处理，如果导入的是普通的类会将类包装为 &lt;strong>&lt;code>ConfigurationClass&lt;/code>&lt;/strong> 存放在ConfigurationClassParser类的configurationClasses属性中。在处理ConfigurationClassParser#parse结束后会将ConfigurationClassParser类的configurationClasses属性中没有加载的配置类定义加载到Spring容器中，如下图：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/experience/image-20220204011652184.png" alt="image-20220204011652184">&lt;/p>
&lt;p>&lt;strong>在搭配@Import注解使用的时候到底使用哪一个看自定义过程中是否需要往Spring容器中自己注册Bean的定义，ImportBeanDefinitionRegistrar和ImportSelector两者功能类似有互补的情况&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>Tips: ImportSelector导入的类是否标注了@Configuration注解最终都会当做配置类加载到Spring容器&lt;/p>
&lt;/blockquote>
&lt;h3 id="3-importselector和deferredimportselector">3. ImportSelector和DeferredImportSelector&lt;/h3>
&lt;p>ImportSelector和DeferredImportSelector两个的作用是一样的，都是导入类到Spring容器中，不同之处在于执行的时间不同。ImportSelector先执行，DeferredImportSelector后执行。我们从代码层面来看一下：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/spring/experience/image-20220204111609644.png" alt="image-20220204111609644">&lt;/p>
&lt;p>在&lt;strong>ConfigurationClassParser#parse&lt;/strong> 方法中有这样一段代码如上图，前面的parse方法中执行的是 &lt;strong>ImportSelector&lt;/strong> ，如果遇到 &lt;strong>DeferredImportSelector&lt;/strong> 就会存放到属性 &lt;strong>&lt;code>deferredImportSelectorHandler&lt;/code>&lt;/strong> 在对 @Configuration注解解析完成后再一次执行 &lt;strong>DeferredImportSelector&lt;/strong> 的实现类。&lt;/p>
&lt;p>&lt;strong>两个的功能基本上一样只是执行的时间不同，有延迟的作用。所以在使用的时候根据自定义拓展的使用者来定&lt;/strong>&lt;/p>
&lt;h3 id="4-factorybean和beanfactory">4. FactoryBean和BeanFactory&lt;/h3>
&lt;p>这个两个类稍微不注意就要搞混了。单词都一样只是顺序变了一下。其实这是两个完全不同的功能两个类。&lt;/p>
&lt;h4 id="41-factorybean">4.1 FactoryBean&lt;/h4>
&lt;p>Spring中的Bean有两种：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>普通的bean&lt;/p>
&lt;/li>
&lt;li>
&lt;p>工厂Bean也就是实现了FactoryBean&lt;/p>
&lt;p>FactoryBean跟普通Bean不同，其返回的对象不是指定类的一个实例，而是该FactoryBean的getObject方法所返回的对象。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">FactoryBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">OBJECT_TYPE_ATTRIBUTE&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;factoryBeanObjectType&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#000">T&lt;/span> &lt;span style="color:#000">getObject&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Exception&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">getObjectType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">isSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>FactoryBean 通常是用来创建比较复杂的bean，一般的bean 直接用xml配置即可或者使用注解，但如果一个bean的创建过程中涉及到很多其他的bean 和复杂的逻辑，用xml配置比较困难，这时可以考虑用FactoryBean&lt;/p>
&lt;p>很多开源项目在集成Spring 时都使用到FactoryBean，比如 &lt;a href="https://link.jianshu.com/?t=https://github.com/mybatis/mybatis-3">MyBatis3&lt;/a> 提供 mybatis-spring项目中的 &lt;code>org.mybatis.spring.SqlSessionFactoryBean&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>项目地址：https://github.com/mybatis/spring/blob/master/src/main/java/org/mybatis/spring/SqlSessionFactoryBean.java&lt;/p>
&lt;/blockquote>
&lt;h4 id="42-beanfactory">4.2 BeanFactory&lt;/h4>
&lt;p>&lt;strong>BeanFactory&lt;/strong> 是Spring Bean容器的顶级接口接口。&lt;/p>
&lt;blockquote>
&lt;p>文章对你有帮助可以点个赞关注我，你的点赞、关注是我前进的动力，文章有不正确的地方请您斧正留言评论~谢谢！&lt;/p>
&lt;/blockquote></description></item><item><title>Spring-Framework: Spring AOP+SpEL实现自定义模板记录日志</title><link>/spring-framework/custom-component/spring-custom-logging/</link><pubDate>Sat, 05 Feb 2022 00:00:00 +0000</pubDate><guid>/spring-framework/custom-component/spring-custom-logging/</guid><description>
&lt;p>「这是我参与2022首次更文挑战的第20天，活动详情查看：&lt;a href="https://juejin.cn/post/7052884569032392740">2022首次更文挑战&lt;/a>」&lt;/p>
&lt;h3 id="1-前言">1. 前言&lt;/h3>
&lt;p>开发项目中的日志记录是必不可少的，对于非业务项目日志记录的一般是关键信息例如项目启动的配置信息等等，而对于业务系统，那记录的主要是请求的接口的数据。这种情况如果以硬编码的方式，业务代码有改动就同时需要改动日志。同时如果不需要记录日志就需要删除所有的日志记录代码。今天我们用Spring AOP+SpEL 来实现自定义模板记录日志：&lt;/p>
&lt;p>&lt;img src="E:%5Cdownload%5C%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95%E5%AE%9E%E7%8E%B0.png" alt="日志记录实现">&lt;/p>
&lt;h3 id="2-mxsmlog定义">2. @MxsmLog定义&lt;/h3>
&lt;p>&lt;img src="E:%5Cdownload@MxsmLog.png" alt="@MxsmLog">&lt;/p>
&lt;p>&lt;strong>@MxsmLog&lt;/strong> 包含两个属性：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>template&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>用户可以自定义日志记录模板，模板符合SpEL表达式。就可以被SpEL进行解析。&lt;/p>
&lt;ol start="2">
&lt;li>
&lt;p>&lt;strong>operateType&lt;/strong>&lt;/p>
&lt;p>修饰的方法的操作类型，默认为 &lt;strong>UNKNOWN&lt;/strong>，operateType的取值如下：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">enum&lt;/span> &lt;span style="color:#000">OperateType&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">UNKNOWN&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">ADD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">DELETE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">UPDATE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">SEARCH&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Tips: 包含了接口的主要是个操作增删改查，因为也可用于非Controller类上面，所以增加了一个默认的UNKNOWN&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;p>代码：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Documented&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">({&lt;/span>&lt;span style="color:#000">ElementType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">METHOD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">})&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Retention&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RetentionPolicy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">RUNTIME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Inherited&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@interface&lt;/span> &lt;span style="color:#000">Log&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * log template
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @return
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">template&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> *
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @return
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#000">OperateType&lt;/span> &lt;span style="color:#000">operateType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#000">OperateType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">UNKNOWN&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-enablemxsmlog">3. @EnableMxsmLog&lt;/h3>
&lt;p>&lt;img src="E:%5Cdownload@EnableMxsmLog.png" alt="@EnableMxsmLog">&lt;/p>
&lt;p>&lt;strong>@EnableMxsmLog&lt;/strong> 包含是个属性：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>value是否开启日志记录，默认为true&lt;/strong>&lt;/li>
&lt;li>&lt;strong>async是否开启同步的方式记录日志&lt;/strong>&lt;/li>
&lt;li>&lt;strong>loggerName logger的名称，这样可以设置不同的logger&lt;/strong>&lt;/li>
&lt;li>&lt;strong>proxyTargetClass使用jdk还是cglib作为代理实现&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>代码:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Documented&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">({&lt;/span>&lt;span style="color:#000">ElementType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">TYPE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">})&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Retention&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RetentionPolicy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">RUNTIME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Inherited&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Import&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">LogImportSelector&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@interface&lt;/span> &lt;span style="color:#000">EnableMxsmLog&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">value&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * use asynchronization method to record log
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @return
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">async&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * log name
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @return
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">loggerName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">proxyTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-spring-aopspel实现解析模板">4. Spring AOP+SpEL实现解析模板&lt;/h3>
&lt;p>主要的逻辑都在AOP的实现和SpEL的解析。AOP主要负责拦截执行方法上标注了**@MxsmLog** 的，然后获取注解中的模板信息，把模板信息给到SpEL进行模板解析。最后由日志进行打印出来。&lt;/p>
&lt;h4 id="41-aop实现">4.1 AOP实现&lt;/h4>
&lt;p>&lt;strong>Enable&lt;/strong> 类型的注解主要是配合 &lt;strong>@Import&lt;/strong> 注解来实现，如上的 &lt;strong>@EnableMxsmLog&lt;/strong> 注解用 &lt;strong>@Import&lt;/strong> 导入了 &lt;strong>&lt;code>LogImportSelector&lt;/code>&lt;/strong> 这个类实现了 &lt;strong>ImportSelector&lt;/strong> 接口：&lt;/p>
&lt;p>&lt;img src="C:%5CUsers%5Cmxsm%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220205142108722.png" alt="image-20220205142108722">&lt;/p>
&lt;p>在上图标注的地方导入了AOP的实现。&lt;/p>
&lt;blockquote>
&lt;p>Tips: 如果对AOP不是很了解可以看一下《&lt;a href="https://juejin.cn/post/7055664320616595492">基于Spring AOP自定义注解&lt;/a>》&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="C:%5CUsers%5Cmxsm%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220205142138055.png" alt="image-20220205142138055">&lt;/p>
&lt;ul>
&lt;li>&lt;strong>LogAdvisor实现了AbstractBeanFactoryPointcutAdvisor类&lt;/strong>&lt;/li>
&lt;li>&lt;strong>LogAdvice实现了MethodInterceptor接口&lt;/strong>&lt;/li>
&lt;li>&lt;strong>LogPointcut实现了StaticMethodMatcherPointcut类&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>上面三个被实现的类组成Spring中的AOP,这里也就完成了AOP的除了模板解析的所有功能。&lt;/p>
&lt;p>&lt;strong>&lt;code>LogImportBeanDefinitionRegistrar&lt;/code>&lt;/strong> 类负责注册生成代理的类的处理：&lt;/p>
&lt;p>&lt;img src="C:%5CUsers%5Cmxsm%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220205143450758.png" alt="image-20220205143450758">&lt;/p>
&lt;p>有部分人很可能会发现这段代码好像和 &lt;strong>&lt;code>AutoProxyRegistrar&lt;/code>&lt;/strong> 里面的代码相似。没错就是差不多因为都是利用AOP来实现的功能。这里主要是在获取类的时候自动创建代理类。&lt;/p>
&lt;h4 id="42-spel实现解析模板">4.2 SpEL实现解析模板&lt;/h4>
&lt;p>模板解析主要是用了Spring SpEL表达式来实现的。&lt;/p>
&lt;p>&lt;img src="C:%5CUsers%5Cmxsm%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220205144154908.png" alt="image-20220205144154908">&lt;/p>
&lt;p>模板的解析，因为考虑到有可能是异步的情况所以，这里抽象了一个 &lt;strong>LogWorker&lt;/strong> 来执行日志解析和记录。&lt;/p>
&lt;p>&lt;img src="C:%5CUsers%5Cmxsm%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220205144312893.png" alt="image-20220205144312893">&lt;/p>
&lt;p>在这个 &lt;strong>LogWorker#run&lt;/strong> 方法里实现了模板的绩效和日志的记录。&lt;/p>
&lt;h4 id="43-错误处理">4.3 错误处理&lt;/h4>
&lt;p>如下代码所示：&lt;/p>
&lt;p>&lt;img src="C:%5CUsers%5Cmxsm%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220205144619676.png" alt="image-20220205144619676">&lt;/p>
&lt;p>如果日志解析和记录错误的情况下不会影响到整个业务的执行。&lt;/p>
&lt;h3 id="5-案例演示">5. 案例演示&lt;/h3>
&lt;p>增加maven依赖：&lt;/p>
&lt;pre>&lt;code>&amp;lt;dependency&amp;gt;
&amp;lt;groupId&amp;gt;com.github.mxsm&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;mxsm-log&amp;lt;/artifactId&amp;gt;
&amp;lt;version&amp;gt;1.0.0&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code>&lt;/pre>&lt;p>编写测试类：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@RestController&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@RequestMapping&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;/log&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">AsyncController&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Autowired&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#000">Test&lt;/span> &lt;span style="color:#000">test&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@PostMapping&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;/user&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">long&lt;/span> &lt;span style="color:#000">currentTime1&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@RequestParam&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">value&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>&lt;span style="color:#000">required&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@RequestBody&lt;/span> &lt;span style="color:#000">User&lt;/span> &lt;span style="color:#000">user&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">){&lt;/span>
&lt;span style="color:#000">test&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addUser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">user&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">currentTimeMillis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Component&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">Test&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">test&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(){&lt;/span>
&lt;span style="color:#000">System&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">out&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">println&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">1111&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@MxsmLog&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">template&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;用户名称${#user.name}信息：${@test.getName(#user)}&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">addUser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">User&lt;/span> &lt;span style="color:#000">user&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">){&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">User&lt;/span> &lt;span style="color:#000">user&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">){&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">user&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>启动开始测试：&lt;/p>
&lt;p>&lt;img src="C:%5CUsers%5Cmxsm%5CDesktop%5Cpic%5C%E8%87%AA%E5%AE%9A%E4%B9%89%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95%E6%B5%8B%E8%AF%95.gif" alt="自定义日志记录测试">&lt;/p>
&lt;p>从这里可以看到已经可以使用了&lt;/p>
&lt;blockquote>
&lt;p>Tips: jar包已经发布到maven中央仓库&lt;/p>
&lt;p>源码地址：https://github.com/mxsm/mxsm-log4j&lt;/p>
&lt;p>测试代码地址：https://github.com/mxsm/spring-sample/tree/master/spring-boot&lt;/p>
&lt;/blockquote>
&lt;h3 id="6-总结">6 总结&lt;/h3>
&lt;p>这个只是实现了一个初步的只能说可以用。后续会基于这个实现更多的功能以及优化其实用性。能够直接用于生产！&lt;/p>
&lt;p>&lt;strong>不足：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>依赖的Spring的版本较高，需要Spring5以上&lt;/li>
&lt;li>异步的线程池配置没有给到用户自定义&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>我是蚂蚁背大象，文章对你有帮助可以点个赞关注，关注我，你的点赞、关注是我前进的动力，文章有不正确的地方请您斧正留言评论~谢谢！&lt;/p>
&lt;/blockquote></description></item><item><title>Spring-Framework: Spring框架中接口命名的艺术</title><link>/spring-framework/experience/spring-interface-art/</link><pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate><guid>/spring-framework/experience/spring-interface-art/</guid><description>
&lt;p>在Spring中有对外的拓展接口或者是内部的接口有很多。这些接口命名有一些规律。以后自己的代码也可以参照Spring的接口命名方式来进行命名。&lt;/p>
&lt;h4 id="applicationcontext和configurableapplicationcontext">ApplicationContext和ConfigurableApplicationContext&lt;/h4>
&lt;p>这两个接口代表了普通接口和 &lt;strong>&lt;code>Configurable&lt;/code>&lt;/strong> 前缀的接口。带 &lt;strong>&lt;code>Configurable&lt;/code>&lt;/strong> 前缀的表示可以配置，那么可以配置一些什么东西呢？下面来看一下接口的源码：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#8f5902;font-style:italic">// ConfigurableApplicationContext
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setId&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setParent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">ApplicationContext&lt;/span> &lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurableEnvironment&lt;/span> &lt;span style="color:#000">environment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">addBeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span> &lt;span style="color:#000">postProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">addApplicationListener&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ApplicationListener&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">listener&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">addProtocolResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ProtocolResolver&lt;/span> &lt;span style="color:#000">resolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这一类接口增加了可配置的方法但是又不是仅仅局限于增加可配置的方法，如下面的代码&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#8f5902;font-style:italic">//ConfigurableApplicationContext
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">refresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">IllegalStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">registerShutdownHook&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Spring-Framework: BeanDefinition详解</title><link>/spring-framework/core-source-analysis/beandefinition/</link><pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/beandefinition/</guid><description>
&lt;h3 id="1-beandefinition的继承图">1. BeanDefinition的继承图&lt;/h3>
&lt;p>&lt;img src="https://github.com/mxsm/document/blob/master/image/Spring/Springframework/BeanDefinition.png?raw=true" alt="图解">&lt;/p>
&lt;p>BeanDefinition其实就是对Bean的一种抽象：
Spring中的Bean抽象&amp;mdash;&amp;mdash;&amp;ndash;BeanDefinition
Bean的属性操作抽象&amp;mdash;&amp;mdash;&amp;ndash;AttributeAccessor(属性存取器)对属性进行操作
Bean的元数据项抽象&amp;mdash;&amp;mdash;&amp;ndash;BeanMetadataElement（Bean的元数据）&lt;/p>
&lt;h3 id="2-attributeaccessor属性存取器的源码解析">2. AttributeAccessor属性存取器的源码解析&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">AttributeAccessor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置属性
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">value&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取属性
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">getAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//删除属性
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">removeAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断属性name是否存在
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">hasAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取属性列表
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">attributeNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>AttributeAccessor实现的抽象方法是AttributeAccessorSupport，这里面对接口所有的方法都进行了实现。&lt;/p>
&lt;h3 id="3-beanmetadataelement源码解析">3. BeanMetadataElement源码解析&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">BeanMetadataElement&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//元数据元素的配置的源bean对象
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">getSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>BeanMetadataAttribute实现了BeanMetadataElement接口。&lt;/p>
&lt;h3 id="4-beanmetadataelement和attributeaccessor关联">4. BeanMetadataElement和AttributeAccessor关联&lt;/h3>
&lt;p>通过 BeanMetadataAttributeAccessor 类整合对Bean的操作AttributeAccessor以及BeanMetadataElement&lt;/p>
&lt;h3 id="5beandifinition源码分析">5.BeanDifinition源码分析&lt;/h3>
&lt;p>&lt;strong>&lt;code>BeanDifinition&lt;/code>&lt;/strong> 其实就是一个接口，描述一个bean的实例，包括属性值，构造方法参数值和继承自它的类的更多信息以及一些依赖信息，懒加载等等。BeanDefinition仅仅是一个最简单的接口，主要功能是允许BeanFactoryPostProcessor 例如PropertyPlaceHolderConfigure 能够检索并修改属性值和别的bean的元数据。下面来分析一下源码&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">BeanDefinition&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">AttributeAccessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanMetadataElement&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 标准单例作用域的作用域标识符：“singleton”。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 对于扩展的bean工厂可能支持更多的作用域。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 注意：在Spring中默认的创建的对象就是单例模式
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">SCOPE_SINGLETON&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">ConfigurableBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">SCOPE_SINGLETON&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 标准原型作用域的范围标识符：“prototype”。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 对于扩展的bean工厂可能支持更多的作用域。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">SCOPE_PROTOTYPE&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">ConfigurableBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">SCOPE_PROTOTYPE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 表示BeanDefinition是应用程序主要部分的角色提示。 通常对应于用户定义的bean。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">ROLE_APPLICATION&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">0&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 表示BeanDefinition是某些大型配置的支持部分的角色提示，通常是一个外部ComponentDefinition
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 当查看某个特定的ComponentDefinition时，认为bean非常重要，以便在查看应用程序的整体配置时能够意识到这一点。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 注意：实际上就是说，我这个Bean是用户的，是从配置文件中过来的
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">ROLE_SUPPORT&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">1&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 角色提示表明一个BeanDefinition是提供一个完全背后的角色，并且与最终用户没有关系。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 这个提示用于注册完全是ComponentDefinition内部工作的一部分的bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 注意：这Bean是Spring内部的和使用的用户没有关系
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">ROLE_INFRASTRUCTURE&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">2&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Modifiable attributes
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//如果父类存在，设置这个bean定义的父定义的名称
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setParentName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">parentName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">getParentName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//指定此bean定义的bean类名称。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//类名称可以在bean factory后期处理中修改，通常用它的解析变体替换原来的类名称。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setBeanClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//返回此bean定义的当前bean类名称。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//需要注意的是，这不一定是在运行时使用的实际类名，以防子类定义覆盖/继承其父类的类名。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//此外，这可能只是调用工厂方法的类，或者它 在调用方法的工厂bean引用的情况下甚至可能是空的。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//因此，不要认为这是在运行时定义的bean类型，而只是将其用于在单独的bean定义级别进行解析。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">getBeanClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置和获取scope
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setScope&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">scope&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">getScope&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置是否需要懒加载 ---- 默认是非懒加载在Spring的默认实现过程
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setLazyInit&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">lazyInit&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">isLazyInit&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> *
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 设置当前beand依赖,需要被初始化这些依赖bean,beanFacotryb保证首先初始化这些依赖的bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setDependsOn&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span> &lt;span style="color:#000">dependsOn&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> *获取依赖bean的名称
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">getDependsOn&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置这个bean是否是获得自动装配到其他bean的候选人。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//需要注意是，此标志旨在仅影响基于类型的自动装配。---默认是按照类型进行装配
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//它不会影响按名称的显式引用，即使指定的bean没有标记为autowire候选，也可以解决这个问题。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//因此，如果名称匹配，通过名称的自动装配将注入一个bean。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setAutowireCandidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">autowireCandidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 返回这个bean是否是自动装配到其他bean的候选者。就是是否在其他类中使用autowired来注入当前Bean的
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">isAutowireCandidate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//是否为主候选bean 使用注解：@Primary
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setPrimary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">primary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//返回这个bean是否是主要的autowire候选者。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">isPrimary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//指定要使用的工厂bean（如果有的话）。 这是调用指定的工厂方法的bean的名称
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setFactoryBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">factoryBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//返回工厂bean的名字，如果有的话。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">getFactoryBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//如果有的话，指定工厂方法。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//这个方法先将通过构造函数参数被调用，或者如果参数，将调用该方法的无参数构造。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//方法将在指定的工厂bean（如果有的话）上被调用，或者作为本地bean类的静态方法被调用
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setFactoryMethodName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">factoryMethodName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 返回工厂方法如果有的话
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">getFactoryMethodName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//返回此bean的构造函数参数值。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ConstructorArgumentValues&lt;/span> &lt;span style="color:#000">getConstructorArgumentValues&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否有构造函数参数--5.1版本开始
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">hasConstructorArgumentValues&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">getConstructorArgumentValues&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取普通属性集合
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">MutablePropertyValues&lt;/span> &lt;span style="color:#000">getPropertyValues&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 判断是否有PropertyValues
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @since 5.0.2
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">hasPropertyValues&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">getPropertyValues&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置和获取初始化方法的名称--从5.1版本开始
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setInitMethodName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">initMethodName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">getInitMethodName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置和获取Destroy方法的名称 -- 从5.1版本开始
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setDestroyMethodName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">destroyMethodName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">getDestroyMethodName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置和获取角色
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setRole&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">role&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">getRole&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置和获取人可以读的描述--人可以理解的描述 从5.1版本开始
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setDescription&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">description&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">getDescription&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否为单例
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">isSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否为原型
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">isPrototype&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否为抽象Bean，如果是就不能实例化
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">isAbstract&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//返回BeanDefinition的资源描述
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">getResourceDescription&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//返回原始的BeanDefinition如果没有返回null
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#000">BeanDefinition&lt;/span> &lt;span style="color:#000">getOriginatingBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Spring-Framework: FactoryBean解析</title><link>/spring-framework/core-source-analysis/factorybean/</link><pubDate>Tue, 24 Sep 2019 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/factorybean/</guid><description>
&lt;h3 id="spring-factorybean应用">Spring FactoryBean应用&lt;/h3>
&lt;p>Spring中的Bean有两种：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>普通的bean&lt;/p>
&lt;/li>
&lt;li>
&lt;p>工厂Bean也就是实现了FactoryBean&lt;/p>
&lt;p>FactoryBean跟普通Bean不同，其返回的对象不是指定类的一个实例，而是该FactoryBean的getObject方法所返回的对象。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">FactoryBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#000">T&lt;/span> &lt;span style="color:#000">getObject&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Exception&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">getObjectType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">isSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="应用场景">应用场景&lt;/h3>
&lt;p>FactoryBean 通常是用来创建比较复杂的bean，一般的bean 直接用xml配置即可，但如果一个bean的创建过程中涉及到很多其他的bean 和复杂的逻辑，用xml配置比较困难，这时可以考虑用FactoryBean&lt;/p>
&lt;h3 id="应用案例">应用案例&lt;/h3>
&lt;p>很多开源项目在集成Spring 时都使用到FactoryBean，比如 &lt;a href="https://link.jianshu.com/?t=https://github.com/mybatis/mybatis-3">MyBatis3&lt;/a> 提供 mybatis-spring项目中的 &lt;code>org.mybatis.spring.SqlSessionFactoryBean&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>项目地址：&lt;/p>
&lt;p>&lt;a href="https://github.com/mybatis/spring/blob/master/src/main/java/org/mybatis/spring/SqlSessionFactoryBean.java">https://github.com/mybatis/spring/blob/master/src/main/java/org/mybatis/spring/SqlSessionFactoryBean.java&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title>Spring-Framework: Spring 生命周期</title><link>/spring-framework/core-source-analysis/spring-lifecycle/</link><pubDate>Fri, 13 Sep 2019 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/spring-lifecycle/</guid><description>
&lt;h3 id="1-spring-bean的生命周期">1. Spring Bean的生命周期&lt;/h3>
&lt;pre>&lt;code class="language-flow" data-lang="flow">st=&amp;gt;start: 加载BeanDefination
circularCondition=&amp;gt;condition: 获取依赖并且判断不是循环依赖
beforeInstantiation=&amp;gt;operation: 实例化之前调用InstantiationAwareBeanPostProcessor#postProcessBeforeInstantiation方法
CandidateConstructors=&amp;gt;operation: 调用构造函数自动装配SmartInstantiationAwareBeanPostProcessor#determineCandidateConstructors方法
afterInstantiation=&amp;gt;operation: 调用InstantiationAwareBeanPostProcessor#postProcessAfterInstantiation方法
postProcessProperties=&amp;gt;operation: 调用InstantiationAwareBeanPostProcessor#postProcessProperties方法
instantiateBean=&amp;gt;operation: 实例化完成Bean
mergedBeanDefinitionPostProcessor=&amp;gt;operation: bean定义合并调用MergedBeanDefinitionPostProcessor#postProcessMergedBeanDefinition方法
invokeAwareMethods=&amp;gt;operation: 执行BeanNameAware,BeanClassLoaderAware,BeanFactoryAware的相关方法
BeanPostProcessorBeforeInitialization=&amp;gt;operation: 执行BeanPostProcessor#postProcessBeforeInitialization方法
invokeInitMethods=&amp;gt;operation: 执行初始化方法InitializingBean#afterPropertiesSet(实现了InitializingBean)或者使用了注解PostConstruct或者在xml中定义了Init方法
BeanPostProcessorsAfterInitialization=&amp;gt;operation: 调用初始化后的方法BeanPostProcessor#postProcessAfterInitialization
earlySingletonExposure=&amp;gt;operation: 饥饿加载Bean的属性
registerDisposableBeanIfNecessary=&amp;gt;operation: 继承了DisposableBean和定义了destroy方法来注入
e=&amp;gt;end
st-&amp;gt;circularCondition
circularCondition(yes)-&amp;gt;beforeInstantiation-&amp;gt;CandidateConstructors-&amp;gt;afterInstantiation-&amp;gt;postProcessProperties-&amp;gt;instantiateBean-&amp;gt;mergedBeanDefinitionPostProcessor-&amp;gt;invokeAwareMethods-&amp;gt;BeanPostProcessorBeforeInitialization-&amp;gt;invokeInitMethods-&amp;gt;BeanPostProcessorsAfterInitialization-&amp;gt;earlySingletonExposure-&amp;gt;registerDisposableBeanIfNecessary-&amp;gt;e
circularCondition(no)-&amp;gt;e
&lt;/code>&lt;/pre></description></item><item><title>Spring-Framework: BeanPostProcessor相关接口执行的方法</title><link>/spring-framework/core-source-analysis/beanpostprocessor-exe-method/</link><pubDate>Sun, 18 Aug 2019 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/beanpostprocessor-exe-method/</guid><description>
&lt;h3 id="1-beanpostprocessor相关接口">1. BeanPostProcessor相关接口&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>InstantiationAwareBeanPostProcessor&lt;/strong>&lt;/li>
&lt;li>&lt;strong>DestructionAwareBeanPostProcessor&lt;/strong>&lt;/li>
&lt;li>&lt;strong>MergedBeanDefinitionPostProcessor&lt;/strong>&lt;/li>
&lt;li>&lt;strong>SmartInstantiationAwareBeanPostProcessor&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>四个继承接口加上 &lt;em>&lt;strong>&lt;code>BeanPostProcessor&lt;/code>&lt;/strong>&lt;/em> 一共五个接口。看一下这五个接口的方法：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">BeanPostProcessor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">postProcessBeforeInitialization&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">postProcessAfterInitialization&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>InstantiationAwareBeanPostProcessor&lt;/strong> 、 &lt;strong>DestructionAwareBeanPostProcessor&lt;/strong>、 &lt;strong>MergedBeanDefinitionPostProcessor&lt;/strong> 继承了 &lt;strong>BeanPostProcessor&lt;/strong> ：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">InstantiationAwareBeanPostProcessor&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">BeanPostProcessor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">postProcessBeforeInstantiation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">postProcessAfterInstantiation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//@since 5.1
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#000">PropertyValues&lt;/span> &lt;span style="color:#000">postProcessProperties&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PropertyValues&lt;/span> &lt;span style="color:#000">pvs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">DestructionAwareBeanPostProcessor&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">BeanPostProcessor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">postProcessBeforeDestruction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">requiresDestruction&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">MergedBeanDefinitionPostProcessor&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">BeanPostProcessor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">postProcessMergedBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">beanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">beanType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">resetBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>SmartInstantiationAwareBeanPostProcessor&lt;/strong> 继承了 &lt;strong>InstantiationAwareBeanPostProcessor&lt;/strong> 接口。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">SmartInstantiationAwareBeanPostProcessor&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">InstantiationAwareBeanPostProcessor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">predictBeanType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#000">Constructor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;[]&lt;/span> &lt;span style="color:#000">determineCandidateConstructors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">beanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">getEarlyBeanReference&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-beanpostprocessor相关接口执行顺序">2. BeanPostProcessor相关接口执行顺序&lt;/h3>
&lt;ol>
&lt;li>InstantiationAwareBeanPostProcessor#postProcessBeforeInstantiation&lt;/li>
&lt;li>MergedBeanDefinitionPostProcessor#postProcessMergedBeanDefinition&lt;/li>
&lt;li>SmartInstantiationAwareBeanPostProcessor#getEarlyBeanReference&lt;/li>
&lt;li>InstantiationAwareBeanPostProcessor#postProcessAfterInstantiation&lt;/li>
&lt;li>InstantiationAwareBeanPostProcessor#postProcessProperties&lt;/li>
&lt;li>BeanPostProcessor#postProcessBeforeInitialization&lt;/li>
&lt;li>BeanPostProcessor#postProcessAfterInitialization&lt;/li>
&lt;li>DestructionAwareBeanPostProcessor#requiresDestruction&lt;/li>
&lt;li>DestructionAwareBeanPostProcessor#postProcessBeforeDestruction&lt;/li>
&lt;/ol></description></item><item><title>Spring-Framework: Spring XML解析源码分析</title><link>/spring-framework/core-source-analysis/spring-xml/</link><pubDate>Fri, 28 Jun 2019 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/spring-xml/</guid><description>
&lt;h3 id="1-spring-xml解析">1. Spring XML解析&lt;/h3>
&lt;p>在Spring的配置中XML是一个很重要的配置方案，下面来分析一下Spring是如何把定义在XML中的数据类加载到Spring容器中的。&lt;/p>
&lt;h3 id="2-abstractapplicationcontextobtainfreshbeanfactory">2. AbstractApplicationContext#obtainFreshBeanFactory&lt;/h3>
&lt;p>在&lt;strong>AbstractApplicationContext&lt;/strong> 抽象类中通过 &lt;strong>&lt;code>obtainFreshBeanFactory&lt;/code>&lt;/strong> 的方法来加载XML中的定义的Bean。下面来看一下方法**&lt;code>obtainFreshBeanFactory&lt;/code>** 的代码：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">ConfigurableListableBeanFactory&lt;/span> &lt;span style="color:#000">obtainFreshBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">refreshBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">getBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过上面的代码可以看到，方法中只有两个方法：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>refreshBeanFactory&lt;/strong>&lt;/p>
&lt;p>刷新BeanFactory,加载XML&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>getBeanFactory&lt;/strong>&lt;/p>
&lt;p>返回BeanFactory的引用&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>在&lt;strong>AbstractApplicationContext&lt;/strong> 中&lt;strong>refreshBeanFactory&lt;/strong> 是一个抽象的方法，实现主要是有子类实现，对于XML而言，&lt;strong>&lt;code>AbstractRefreshableApplicationContext&lt;/code>&lt;/strong> 实现了该方法：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">refreshBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//如果存在BeanFactory首先对之前的进行处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">hasBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">destroyBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">closeBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//创建BeanFactory
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">DefaultListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">createBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置序列化ID
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setSerializationId&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getId&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置是否允许循环引用 和 bean的定义覆盖
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">customizeBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 加载bean的定义到Spring容器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">loadBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">synchronized&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">beanFactoryMonitor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">beanFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ApplicationContextException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;I/O error parsing bean definition source for &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">getDisplayName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过上面的代码分析可以看到Spring容器加载XML中的定义通过 &lt;strong>&lt;code>loadBeanDefinitions&lt;/code>&lt;/strong> 方法，在&lt;strong>AbstractRefreshableApplicationContext&lt;/strong> 中是一个抽象的方法。实现在子类中，对于XML的加载Bean的定义实现在 &lt;strong>&lt;code>AbstractXmlApplicationContext&lt;/code>&lt;/strong> 类中：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">loadBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">DefaultListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 为BeanFactory创建一个 XmlBeanDefinitionReader.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">XmlBeanDefinitionReader&lt;/span> &lt;span style="color:#000">beanDefinitionReader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">XmlBeanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//beanDefinitionReader设置参数
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">beanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">beanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setResourceLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setEntityResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ResourceEntityResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//初始化XML BeanDefinitionReader
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">initBeanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//加载Bean定义
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">loadBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>XML的文件的读取是通过&lt;strong>XmlBeanDefinitionReader&lt;/strong> 来进行读取数据。在&lt;strong>AbstractXmlApplicationContext&lt;/strong> 类中有一个**&lt;code>loadBeanDefinitions(XmlBeanDefinitionReader reader)&lt;/code>** 方法来进行加载XML文件中Bean的定义。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">loadBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">XmlBeanDefinitionReader&lt;/span> &lt;span style="color:#000">reader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取配置的Resource进行加载
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">configResources&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getConfigResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configResources&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">reader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">loadBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取配置的地址进行加载--（用ClassPathXmlApplicationContext创建填入application.xml的就是通过这个地方加载）
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">configLocations&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getConfigLocations&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configLocations&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">reader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">loadBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configLocations&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>所以接下来主要加载都是通过**&lt;code>XmlBeanDefinitionReader#loadBeanDefinitions&lt;/code>** 方法来加载XML中的Bean的定义。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">loadBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span> &lt;span style="color:#000">locations&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeanDefinitionStoreException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">notNull&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">locations&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Location array must not be null&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">count&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">0&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">location&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">locations&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">count&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+=&lt;/span> &lt;span style="color:#000">loadBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">location&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">count&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>&lt;code>XmlBeanDefinitionReader#loadBeanDefinitions&lt;/code>&lt;/strong> 调用了父类的方法 &lt;strong>&lt;code>AbstractBeanDefinitionReader#loadBeanDefinitions&lt;/code>&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">loadBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">location&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeanDefinitionStoreException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">loadBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">location&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">loadBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">location&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">actualResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeanDefinitionStoreException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ResourceLoader&lt;/span> &lt;span style="color:#000">resourceLoader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getResourceLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resourceLoader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanDefinitionStoreException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Cannot load bean definitions from location [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">location&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;]: no ResourceLoader available&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resourceLoader&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">ResourcePatternResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Resource pattern matching available.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">resources&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">ResourcePatternResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">resourceLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">getResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">location&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">count&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">loadBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">actualResources&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Collections&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAll&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">actualResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">resources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTraceEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">trace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Loaded &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">count&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34; bean definitions from location pattern [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">location&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;]&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">count&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanDefinitionStoreException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Could not resolve bean definition resource pattern [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">location&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;]&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Can only load single resources by absolute URL.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Resource&lt;/span> &lt;span style="color:#000">resource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">resourceLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">location&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">count&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">loadBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">actualResources&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">actualResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTraceEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">trace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Loaded &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">count&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34; bean definitions from location [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">location&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;]&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">count&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 &lt;strong>&lt;code>loadBeanDefinitions&lt;/code>&lt;/strong> 实现在XML中是通过 &lt;strong>&lt;code>XmlBeanDefinitionReader&lt;/code>&lt;/strong> 中实现&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">loadBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">EncodedResource&lt;/span> &lt;span style="color:#000">encodedResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeanDefinitionStoreException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">notNull&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">encodedResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;EncodedResource must not be null&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTraceEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">trace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Loading XML bean definitions from &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">encodedResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">EncodedResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">currentResources&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resourcesCurrentlyBeingLoaded&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentResources&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">currentResources&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">HashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">4&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resourcesCurrentlyBeingLoaded&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">currentResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">encodedResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanDefinitionStoreException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Detected cyclic loading of &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">encodedResource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34; - check your import definitions!&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">InputStream&lt;/span> &lt;span style="color:#000">inputStream&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">encodedResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getInputStream&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">InputSource&lt;/span> &lt;span style="color:#000">inputSource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">InputSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">inputStream&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">encodedResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getEncoding&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">inputSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setEncoding&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">encodedResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getEncoding&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//加载xml中的Bean定义
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">doLoadBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">inputSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">encodedResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">finally&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">inputStream&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">close&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanDefinitionStoreException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;IOException parsing XML document from &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">encodedResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">finally&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">currentResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">remove&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">encodedResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resourcesCurrentlyBeingLoaded&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">remove&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过上面的代码可以看出来 &lt;strong>&lt;code>doLoadBeanDefinitions&lt;/code>&lt;/strong> 主要通过这个方法加载XML中的Bean定义&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">doLoadBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">InputSource&lt;/span> &lt;span style="color:#000">inputSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Resource&lt;/span> &lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeanDefinitionStoreException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//读取 xml document
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Document&lt;/span> &lt;span style="color:#000">doc&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">doLoadDocument&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">inputSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//往Spring容器中注册 Bean定义
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">count&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">registerBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">doc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isDebugEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">debug&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Loaded &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">count&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34; bean definitions from &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">count&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 省略了try catch模块
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>&lt;code>XmlBeanDefinitionReader#registerBeanDefinitions(doc, resource)&lt;/code>&lt;/strong> 方法就是加载类的定义&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">registerBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Document&lt;/span> &lt;span style="color:#000">doc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Resource&lt;/span> &lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeanDefinitionStoreException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanDefinitionDocumentReader&lt;/span> &lt;span style="color:#000">documentReader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">createBeanDefinitionDocumentReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">countBefore&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getRegistry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getBeanDefinitionCount&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//注册Bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">documentReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">doc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">createReaderContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">getRegistry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getBeanDefinitionCount&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#000">countBefore&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>&lt;code>BeanDefinitionDocumentReader#registerBeanDefinitions&lt;/code>&lt;/strong> 进行注册，而 &lt;strong>&lt;code>registerBeanDefinitions&lt;/code>&lt;/strong> 方法的实现在 &lt;strong>DefaultBeanDefinitionDocumentReader&lt;/strong> 类&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">registerBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Document&lt;/span> &lt;span style="color:#000">doc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">XmlReaderContext&lt;/span> &lt;span style="color:#000">readerContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">readerContext&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">readerContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">doRegisterBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">doc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getDocumentElement&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">doRegisterBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Element&lt;/span> &lt;span style="color:#000">root&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanDefinitionParserDelegate&lt;/span> &lt;span style="color:#000">parent&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">delegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">delegate&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">createDelegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getReaderContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">root&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">delegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isDefaultNamespace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">root&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">profileSpec&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">root&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">PROFILE_ATTRIBUTE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">StringUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">hasText&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">profileSpec&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">specifiedProfiles&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">StringUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">tokenizeToStringArray&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">profileSpec&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanDefinitionParserDelegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">MULTI_VALUE_ATTRIBUTE_DELIMITERS&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// We cannot use Profiles.of(...) since profile expressions are not supported
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// in XML config. See SPR-12458 for details.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">getReaderContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">acceptsProfiles&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">specifiedProfiles&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isDebugEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">debug&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Skipped XML bean definition file due to specified profiles [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">profileSpec&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;] not matching: &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">getReaderContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">preProcessXml&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">root&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//解析Bean的定义
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">parseBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">root&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">delegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">postProcessXml&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">root&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">delegate&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>分析一下 &lt;strong>parseBeanDefinitions(root, this.delegate)&lt;/strong> 方法中是如何进行数据解析：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">parseBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Element&lt;/span> &lt;span style="color:#000">root&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanDefinitionParserDelegate&lt;/span> &lt;span style="color:#000">delegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否为默认的命名空间 http://www.springframework.org/schema/beans
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">delegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isDefaultNamespace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">root&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">NodeList&lt;/span> &lt;span style="color:#000">nl&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">root&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getChildNodes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">i&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">0&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span> &lt;span style="color:#000">i&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span> &lt;span style="color:#000">nl&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getLength&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span> &lt;span style="color:#000">i&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">++)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Node&lt;/span> &lt;span style="color:#000">node&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">nl&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">item&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">i&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">node&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">Element&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Element&lt;/span> &lt;span style="color:#000">ele&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Element&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">node&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否是自定义的命名空间
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">delegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isDefaultNamespace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ele&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//解析默认的命名空间
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">parseDefaultElement&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ele&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">delegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//解析自定义的命名空间
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">delegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">parseCustomElement&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ele&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">delegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">parseCustomElement&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">root&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">parseDefaultElement&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Element&lt;/span> &lt;span style="color:#000">ele&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanDefinitionParserDelegate&lt;/span> &lt;span style="color:#000">delegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//解析import
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">delegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">nodeNameEquals&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ele&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">IMPORT_ELEMENT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">importBeanDefinitionResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ele&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//解析alias
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">delegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">nodeNameEquals&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ele&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ALIAS_ELEMENT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">processAliasRegistration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ele&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//解析bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">delegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">nodeNameEquals&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ele&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BEAN_ELEMENT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">processBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ele&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">delegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//解析beans
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">delegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">nodeNameEquals&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ele&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">NESTED_BEANS_ELEMENT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// recurse
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">doRegisterBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ele&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>分析一下如何处理自定义的XML通过 &lt;strong>BeanDefinitionParserDelegate#parseCustomElement&lt;/strong> 方法&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">BeanDefinition&lt;/span> &lt;span style="color:#000">parseCustomElement&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Element&lt;/span> &lt;span style="color:#000">ele&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">parseCustomElement&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ele&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">BeanDefinition&lt;/span> &lt;span style="color:#000">parseCustomElement&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Element&lt;/span> &lt;span style="color:#000">ele&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">BeanDefinition&lt;/span> &lt;span style="color:#000">containingBd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取命名空间的URI
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">namespaceUri&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getNamespaceURI&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ele&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">namespaceUri&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取处理命名空间的NamespaceHandler--
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">NamespaceHandler&lt;/span> &lt;span style="color:#000">handler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">readerContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getNamespaceHandlerResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">resolve&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">namespaceUri&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">error&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Unable to locate Spring NamespaceHandler for XML schema namespace [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">namespaceUri&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;]&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ele&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">handler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ele&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ParserContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">readerContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">containingBd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Spring-Framework: ClassPathXmlApplicationContext源码解析</title><link>/spring-framework/core-source-analysis/classpathxmlapplicationcontext/</link><pubDate>Tue, 26 Feb 2019 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/classpathxmlapplicationcontext/</guid><description>
&lt;h3 id="1-classpathxmlapplicationcontext源码解析">1. ClassPathXmlApplicationContext源码解析&lt;/h3>
&lt;p>从名称可以看出来这个 &lt;strong>ApplicationContext&lt;/strong> 主要负责Class Path 的xml对Spring 框架的解析&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">ClassPathXmlApplicationContext&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">AbstractXmlApplicationContext&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#000">Resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">configResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">ClassPathXmlApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">ClassPathXmlApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ApplicationContext&lt;/span> &lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">super&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">ClassPathXmlApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">configLocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#000">configLocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">},&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">ClassPathXmlApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span> &lt;span style="color:#000">configLocations&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configLocations&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">ClassPathXmlApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">configLocations&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">ApplicationContext&lt;/span> &lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configLocations&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">ClassPathXmlApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">configLocations&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">refresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configLocations&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">refresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">ClassPathXmlApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">configLocations&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">refresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">ApplicationContext&lt;/span> &lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">super&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">setConfigLocations&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configLocations&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">refresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">refresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">ClassPathXmlApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">path&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#000">path&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">},&lt;/span> &lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">ClassPathXmlApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">paths&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">paths&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">ClassPathXmlApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">paths&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">ApplicationContext&lt;/span> &lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">super&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">notNull&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">paths&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Path array must not be null&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">notNull&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Class argument must not be null&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">configResources&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">Resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#000">paths&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">length&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">];&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">i&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">0&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span> &lt;span style="color:#000">i&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span> &lt;span style="color:#000">paths&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">length&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span> &lt;span style="color:#000">i&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">++)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">configResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#000">i&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ClassPathResource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">paths&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#000">i&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">],&lt;/span> &lt;span style="color:#000">clazz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">refresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">getConfigResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">configResources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>从上面的代码可以看出来主要就是几个 &lt;strong>&lt;code>ClassPathXmlApplicationContext&lt;/code>&lt;/strong> 的构造函数。构造函数的主要目的是为了读取配置文件。通过获取到 &lt;strong>&lt;code>Resource&lt;/code>&lt;/strong> (在Spring中所有的配置文件都被抽象成了一个资源)。主要的通过调用 &lt;strong>&lt;code>refresh()&lt;/code>&lt;/strong> 方法。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">abstract&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">AbstractApplicationContext&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">DefaultResourceLoader&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">ConfigurableApplicationContext&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">refresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">IllegalStateException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">synchronized&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">startupShutdownMonitor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//准备刷新当前 ApplicationContext.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">prepareRefresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 告诉子类去刷新内部的Bean Factory--bean的解析和加载Bean的定义
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ConfigurableListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">obtainFreshBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//准备 bean factory 能使用当前的context
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">prepareBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//允许在上下文子类中对bean工厂进行后处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">postProcessBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//调用 factory processors在当前 context 注册为Beans
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//注册Bean的后置处理器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">registerBeanPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 为当前context初始化消息资源 .
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">initMessageSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 初始化事件多路通道.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">initApplicationEventMulticaster&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 初始化其他特殊的beans在特殊context子类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">onRefresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 检查和注册监听
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">registerListeners&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//实例化所有的剩下的单例(非懒加载初始化)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">finishBeanFactoryInitialization&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//发布匹配事件.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">finishRefresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isWarnEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">warn&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Exception encountered during context initialization - &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;cancelling refresh attempt: &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Destroy already created singletons to avoid dangling resources.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">destroyBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Reset &amp;#39;active&amp;#39; flag.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">cancelRefresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Propagate exception to caller.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">finally&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Reset common introspection caches in Spring&amp;#39;s core, since we
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// might not ever need metadata for singleton beans anymore...
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">resetCommonCaches&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>看一下上面代码的流程图解：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/document/blob/master/image/Spring/Springframework/AbstractApplicationContextReflash%E8%87%AA%E8%A1%8C%E6%B5%81%E7%A8%8B%E5%9B%BE.png?raw=true" alt="">&lt;/p>
&lt;p>上面代码省略了其他方法。接下来一个个来解析方法：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>&lt;code>prepareRefresh()&lt;/code>&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">prepareRefresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 首先标记为active状态
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">startupDate&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">currentTimeMillis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">closed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">active&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isDebugEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTraceEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">trace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Refreshing &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">debug&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Refreshing &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">getDisplayName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 在context中初始化任何有占位符的资源----由AbstractApplicationContext的子类实现
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">initPropertySources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//验证一些必须有的属性
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">getEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">validateRequiredProperties&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 存储准备刷新 ApplicationListeners...
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">earlyApplicationListeners&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">earlyApplicationListeners&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LinkedHashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applicationListeners&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 重置本地的
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applicationListeners&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">clear&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applicationListeners&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAll&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">earlyApplicationListeners&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">earlyApplicationEvents&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LinkedHashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>看一下在 &lt;strong>prepareRefresh&lt;/strong> 方法中的几个主要的方法：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>initPropertySources()&lt;/code>&lt;/strong> 该方法主要用于初始化属性资源在子类中进行实现。对于不同的子类实现的方式不同。对于现在我们研究的是 &lt;strong>&lt;code>ClassPathXmlApplicationContext&lt;/code>&lt;/strong> 。通过代码研究发现在这个类中是没有实现的。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;code>ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory()&lt;/code>&lt;/strong>&lt;/p>
&lt;p>接下来看一下 &lt;strong>&lt;code>obtainFreshBeanFactory&lt;/code>&lt;/strong> 方法的代码：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">ConfigurableListableBeanFactory&lt;/span> &lt;span style="color:#000">obtainFreshBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">refreshBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">getBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>包含了两个方法分别是：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>refreshBeanFactory &amp;mdash; 抽象方法由子类(AbstractRefreshableApplicationContext)实现&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">refreshBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否有BeanFactory
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">hasBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">destroyBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">closeBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//重新创建BeanFactory
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">DefaultListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">createBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置序列化ID
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setSerializationId&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getId&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">customizeBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//加载Bean的定义---这里就是加载定义Spring Bean 的定义加载到 BeanFactory
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//这个方法是一个抽象方法由子类实现
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">loadBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">synchronized&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">beanFactoryMonitor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">beanFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略。。。。 抛出错误
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>对于 &lt;strong>&lt;code>ClassPathXmlApplicationContext&lt;/code>&lt;/strong> 这个方法的实现的子类是 &lt;strong>&lt;code>AbstractXmlApplicationContext&lt;/code>&lt;/strong> 下面来粗略分析一下这个类的实现：&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">loadBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">DefaultListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//创建一个XML对应的定义Reader
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">XmlBeanDefinitionReader&lt;/span> &lt;span style="color:#000">beanDefinitionReader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">XmlBeanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置 Environment ResourceLoader EntityResolver
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">beanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">beanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setResourceLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setEntityResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ResourceEntityResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//初始化Reader
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">initBeanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//加载Bean的定义
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">loadBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanDefinitionReader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>getBeanFactory &amp;mdash; 抽象方法由子类(AbstractRefreshableApplicationContext)实现&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>@Override
public final ConfigurableListableBeanFactory getBeanFactory() {&lt;/p>
&lt;pre>&lt;code>
synchronized (this.beanFactoryMonitor) {
if (this.beanFactory == null) {
throw new IllegalStateException(&amp;quot;BeanFactory not initialized or already closed - &amp;quot; +
&amp;quot;call 'refresh' before accessing beans via the ApplicationContext&amp;quot;);
}
return this.beanFactory;
}
}
&lt;/code>&lt;/pre>&lt;pre>&lt;code>
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;code>prepareBeanFactory(beanFactory)&lt;/code>&lt;/strong>&lt;/p>
&lt;p>主要对bean Factory 进行设置&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">prepareBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurableListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 设置Bean的类加载器.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setBeanClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置Bean表达式解析器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setBeanExpressionResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">StandardBeanExpressionResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()));&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置属性
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addPropertyEditorRegistrar&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ResourceEditorRegistrar&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()));&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 添加Context上下文处理 *Aware处理器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addBeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ApplicationContextAwareProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置忽略*Aware依赖--上面的ApplicationContextAwareProcessor已经处理了
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">ignoreDependencyInterface&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">EnvironmentAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">ignoreDependencyInterface&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">EmbeddedValueResolverAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">ignoreDependencyInterface&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ResourceLoaderAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">ignoreDependencyInterface&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ApplicationEventPublisherAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">ignoreDependencyInterface&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">MessageSourceAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">ignoreDependencyInterface&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ApplicationContextAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 设置特殊类型对应的bean.beanFactory对应刚刚获取的BeanFactory
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//ResourceLoader, ApplicationEventPublisher, ApplicationContext这3个接口对应的bean都设置为当前的Spring容器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerResolvableDependency&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerResolvableDependency&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ResourceLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerResolvableDependency&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ApplicationEventPublisher&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerResolvableDependency&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 注册ApplicationListenerDetector，用于发现实现了ApplicationListener接口的bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addBeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ApplicationListenerDetector&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Detect a LoadTimeWeaver and prepare for weaving, if found.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">LOAD_TIME_WEAVER_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addBeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LoadTimeWeaverAwareProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Set a temporary ClassLoader for type matching.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setTempClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ContextTypeMatchClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 注册默认的 environment beans
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsLocalBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ENVIRONMENT_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ENVIRONMENT_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsLocalBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">SYSTEM_PROPERTIES_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">SYSTEM_PROPERTIES_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getSystemProperties&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsLocalBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">SYSTEM_ENVIRONMENT_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">SYSTEM_ENVIRONMENT_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getSystemEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;code>postProcessBeanFactory(beanFactory)&lt;/code>&lt;/strong>&lt;/p>
&lt;p>在 &lt;strong>&lt;code>ClassPathXmlApplicationContext&lt;/code>&lt;/strong> 中 &lt;strong>&lt;code>postProcessBeanFactory&lt;/code>&lt;/strong> 只是一个空的实现&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;code>invokeBeanFactoryPostProcessors(beanFactory)&lt;/code>&lt;/strong>&lt;/p>
&lt;p>实例化和执行所有的注册的 &lt;strong>&lt;code>BeanFactoryPostProcessor&lt;/code>&lt;/strong> 如果实现了 &lt;strong>&lt;code>Ordered&lt;/code>&lt;/strong> 或者 &lt;strong>&lt;code>PriorityOrdered&lt;/code>&lt;/strong> 需要遵循&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurableListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理后置Bean Factory 处理器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">PostProcessorRegistrationDelegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTempClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">LOAD_TIME_WEAVER_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addBeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LoadTimeWeaverAwareProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setTempClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ContextTypeMatchClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在上面的方法主要是通过： &lt;strong>&lt;code>PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(beanFactory, getBeanFactoryPostProcessors())&lt;/code>&lt;/strong> 来进行&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">ConfigurableListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">beanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//首先执行BeanDefinitionRegistryPostProcessor
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">processedBeans&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">HashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">BeanDefinitionRegistry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanDefinitionRegistry&lt;/span> &lt;span style="color:#000">registry&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionRegistry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">regularPostProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">registryProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span> &lt;span style="color:#000">postProcessor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">beanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">postProcessor&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//调用处理BeanDefinitionRegistryPostProcessor
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span> &lt;span style="color:#000">registryProcessor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">postProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">registryProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">postProcessBeanDefinitionRegistry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">registryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registryProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">regularPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">postProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">currentRegistryProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 首先执行 BeanDefinitionRegistryPostProcessors 实现了 PriorityOrdered.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">postProcessorNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanNamesForType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">ppName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">postProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTypeMatch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">PriorityOrdered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">processedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">sortPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">registryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAll&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">invokeBeanDefinitionRegistryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">clear&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 接下来执行 BeanDefinitionRegistryPostProcessors 实现 Ordered.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">postProcessorNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanNamesForType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">ppName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">postProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">processedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contains&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTypeMatch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Ordered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">processedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">sortPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">registryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAll&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">invokeBeanDefinitionRegistryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">clear&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 执行剩下的所有的 BeanDefinitionRegistryPostProcessors
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">reiterate&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">while&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">reiterate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">reiterate&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">postProcessorNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanNamesForType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">ppName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">postProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">processedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contains&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanDefinitionRegistryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">processedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">reiterate&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">sortPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">registryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAll&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">invokeBeanDefinitionRegistryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">registry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">currentRegistryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">clear&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//执行回调方法 postProcessBeanFactory
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registryProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">regularPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Invoke factory processors registered with the context instance.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Do not initialize FactoryBeans here: We need to leave all regular beans
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// uninitialized to let the bean factory post-processors apply to them!
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">postProcessorNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanNamesForType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理PriorityOrdered 和 Ordered 的类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">priorityOrderedPostProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">orderedPostProcessorNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">nonOrderedPostProcessorNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">ppName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">postProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">processedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contains&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// skip - already processed in first phase above
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTypeMatch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">PriorityOrdered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">priorityOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTypeMatch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Ordered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">orderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">nonOrderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 首先执行 BeanFactoryPostProcessors 实现了 PriorityOrdered.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">sortPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">priorityOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">priorityOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 执行 BeanFactoryPostProcessors 实现了 Ordered.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">orderedPostProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">orderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">size&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">postProcessorName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">orderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">orderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">postProcessorName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">sortPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">orderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">orderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 最后执行所有的 BeanFactoryPostProcessors.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">nonOrderedPostProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">nonOrderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">size&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">postProcessorName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">nonOrderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">nonOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">postProcessorName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanFactoryPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">invokeBeanFactoryPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">nonOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">clearMetadataCache&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;code>registerBeanPostProcessors(beanFactory)&lt;/code>&lt;/strong>&lt;/p>
&lt;p>注册Bean &lt;strong>&lt;code>PostProcessor&lt;/code>&lt;/strong> 处理器。代码如下：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">registerBeanPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurableListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">PostProcessorRegistrationDelegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerBeanPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>从上面可以看出来就一行代码，调用了 &lt;strong>&lt;code>PostProcessorRegistrationDelegate.registerBeanPostProcessors(beanFactory, this)&lt;/code>&lt;/strong> 静态方法&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">registerBeanPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">ConfigurableListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">AbstractApplicationContext&lt;/span> &lt;span style="color:#000">applicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">postProcessorNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanNamesForType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">beanProcessorTargetCount&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanPostProcessorCount&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">1&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">postProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">length&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addBeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanPostProcessorChecker&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanProcessorTargetCount&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">priorityOrderedPostProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">internalPostProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">orderedPostProcessorNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">nonOrderedPostProcessorNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">ppName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">postProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTypeMatch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">PriorityOrdered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanPostProcessor&lt;/span> &lt;span style="color:#000">pp&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">priorityOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">pp&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">pp&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">MergedBeanDefinitionPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">internalPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">pp&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTypeMatch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Ordered&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">orderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">nonOrderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">sortPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">priorityOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">registerBeanPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">priorityOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">orderedPostProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">orderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">size&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">ppName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">orderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanPostProcessor&lt;/span> &lt;span style="color:#000">pp&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">orderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">pp&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">pp&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">MergedBeanDefinitionPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">internalPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">pp&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">sortPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">orderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">registerBeanPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">orderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">nonOrderedPostProcessors&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">nonOrderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">size&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">ppName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">nonOrderedPostProcessorNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanPostProcessor&lt;/span> &lt;span style="color:#000">pp&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ppName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">nonOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">pp&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">pp&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">MergedBeanDefinitionPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">internalPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">pp&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">registerBeanPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">nonOrderedPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">sortPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">internalPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">registerBeanPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">internalPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addBeanPostProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ApplicationListenerDetector&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">applicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这段代码和 &lt;strong>&lt;code>BeanFactoryPostProcessor&lt;/code>&lt;/strong> 处理差不多。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;code>initMessageSource()&lt;/code>&lt;/strong>&lt;/p>
&lt;p>初始化消息源&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">initMessageSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ConfigurableListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否存在Bean名称为messageSource
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsLocalBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">MESSAGE_SOURCE_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">messageSource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">MESSAGE_SOURCE_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">MessageSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Make MessageSource aware of parent MessageSource.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">parent&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">messageSource&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">HierarchicalMessageSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">HierarchicalMessageSource&lt;/span> &lt;span style="color:#000">hms&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">HierarchicalMessageSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">messageSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">hms&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getParentMessageSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">hms&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setParentMessageSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getInternalParentMessageSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTraceEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">trace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Using MessageSource [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">messageSource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;]&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//BeanFactory 不存在直接建立
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">DelegatingMessageSource&lt;/span> &lt;span style="color:#000">dms&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">DelegatingMessageSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">dms&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setParentMessageSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getInternalParentMessageSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">messageSource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">dms&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">MESSAGE_SOURCE_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">messageSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTraceEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">trace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;No &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">MESSAGE_SOURCE_BEAN_NAME&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#39; bean, using [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">messageSource&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;]&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;code>initApplicationEventMulticaster()&lt;/code>&lt;/strong>&lt;/p>
&lt;p>初始化广播事件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;code>onRefresh()&lt;/code>&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;code>registerListeners()&lt;/code>&lt;/strong>&lt;/p>
&lt;p>注册系统里的监听者，看一下这个方法的代码:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">registerListeners&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 注册特定的静态的监听器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ApplicationListener&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">listener&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">getApplicationListeners&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">getApplicationEventMulticaster&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">addApplicationListener&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">listener&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取监听器的Bean的名称
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">listenerBeanNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getBeanNamesForType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ApplicationListener&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">listenerBeanName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">listenerBeanNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">getApplicationEventMulticaster&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">addApplicationListenerBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">listenerBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Publish early application events now that we finally have a multicaster...
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">ApplicationEvent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">earlyEventsToProcess&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">earlyApplicationEvents&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">earlyApplicationEvents&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">earlyEventsToProcess&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ApplicationEvent&lt;/span> &lt;span style="color:#000">earlyEvent&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">earlyEventsToProcess&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">getApplicationEventMulticaster&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">multicastEvent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">earlyEvent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;code>finishBeanFactoryInitialization(beanFactory)&lt;/code>&lt;/strong>&lt;/p>
&lt;p>初始化剩下的单例Bean&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">finishBeanFactoryInitialization&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurableListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">CONVERSION_SERVICE_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTypeMatch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">CONVERSION_SERVICE_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ConversionService&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setConversionService&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">CONVERSION_SERVICE_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ConversionService&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">hasEmbeddedValueResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addEmbeddedValueResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">strVal&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&amp;gt;&lt;/span> &lt;span style="color:#000">getEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">resolvePlaceholders&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">strVal&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//包含Aware中的
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">weaverAwareNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanNamesForType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">LoadTimeWeaverAware&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">weaverAwareName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">weaverAwareNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">weaverAwareName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setTempClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">freezeConfiguration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 实例化单例Bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">preInstantiateSingletons&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;code>finishRefresh()&lt;/code>&lt;/strong>&lt;/p>
&lt;p>完成最后的刷新&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">finishRefresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Clear context-level resource caches (such as ASM metadata from scanning).
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">clearResourceCaches&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Initialize lifecycle processor for this context.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">initLifecycleProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Propagate refresh to lifecycle processor first.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">getLifecycleProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">onRefresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Publish the final event.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">publishEvent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ContextRefreshedEvent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Participate in LiveBeansView MBean, if active.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">LiveBeansView&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul></description></item><item><title>Spring-Framework: 深入了解WebApplicationInitializer是消除web.xml和springMVC的配置文件</title><link>/spring-framework/web-source-analysis/webapplicationinitializer-eliminate-xml/</link><pubDate>Thu, 21 Feb 2019 00:00:00 +0000</pubDate><guid>/spring-framework/web-source-analysis/webapplicationinitializer-eliminate-xml/</guid><description>
&lt;h3 id="1-servlet3x规范一些知识">1. Servlet3.x规范一些知识&lt;/h3>
&lt;h4 id="11-java-servlet3x的相关规范">1.1 java Servlet3.x的相关规范&lt;/h4>
&lt;p>可以参看：&lt;a href="https://github.com/mxsm/document/blob/master/Spring/Springframework/Spring-web%E5%88%86%E6%9E%90/Servlet3.1.md">Servlet相关笔记&lt;/a>&lt;br>
在Servlet的规范中有两种方式来实现 &lt;em>&lt;strong>ServletContext&lt;/strong>&lt;/em> 的初始化，通过XML的配置文件或者通过编程的方式来进行初始化。&lt;br>
注解和XML都是可拔插的组件，通过不同的方式来实现不同需求，&lt;/p>
&lt;blockquote>
&lt;p>ServletContainerInitializer 类通过 jar services API 查找。对于每一个应用，应用启动时，由容器创建一个ServletContainerInitializer 实例。 框架提供的 ServletContainerInitializer 实现必须绑定在 jar 包 的
META-INF/services 目录中的一个叫做 javax.servlet.ServletContainerInitializer 的文件，根据 jar services API，指定 ServletContainerInitializer 的实现。除 ServletContainerInitializer 外，我们还有一个注解—HandlesTypes。在 ServletContainerInitializer 实现上的
HandlesTypes 注解用于表示感兴趣的一些类，它们可能指定了 HandlesTypes 的 value 中的注解（类型、方法或自动级别的注解），或者是其类型的超类继承/实现了这些类之一。无论是否设置了 metadata-complete，HandlesTypes 注解将应用。当检测一个应用的类看是否它们匹配 ServletContainerInitializer 的 HandlesTypes 指定的条件时，如果应用的一个或多个可选的 JAR 包缺失，容器可能遇到类装载问题。由于容器不能决定是否这些类型的类装载失败
将阻止应用正常工作，它必须忽略它们，同时也提供一个将记录它们的配置选项。
如果 ServletContainerInitializer 实现没有@HandlesTypes注解，或如果没有匹配任何指定的 HandlesType，那
么它会为每个应用使用 null 值的集合调用一次。这将允许 initializer 基于应用中可用的资源决定是否需要初始化 Servlet/Filter。在任何 Servlet Listener 的事件被触发之前，当应用正在启动时，ServletContainerInitializer 的 onStartup 方法将被调用。ServletContainerInitializer’s 的 onStartup 得到一个类的Set，其或者继承/实现 initializer 表示感兴趣的类，或者它是使用指定在@HandlesTypes 注解中的任意类注解的。&lt;/p>
&lt;/blockquote>
&lt;h3 id="2-springservletcontainerinitializer介绍">2. SpringServletContainerInitializer介绍&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@HandlesTypes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">WebApplicationInitializer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">SpringServletContainerInitializer&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">ServletContainerInitializer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">onStartup&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#000">webAppInitializerClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ServletContext&lt;/span> &lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">ServletException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">WebApplicationInitializer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">initializers&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LinkedList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">webAppInitializerClasses&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">waiClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">webAppInitializerClasses&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Be defensive: Some servlet containers provide us with invalid classes,
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// no matter what @HandlesTypes says...
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">waiClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isInterface&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">Modifier&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isAbstract&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">waiClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getModifiers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span>
&lt;span style="color:#000">WebApplicationInitializer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isAssignableFrom&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">waiClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">initializers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">WebApplicationInitializer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">ReflectionUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">accessibleConstructor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">waiClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">newInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ServletException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Failed to instantiate WebApplicationInitializer class&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">initializers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//打印日志
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//打印日志
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">AnnotationAwareOrderComparator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">sort&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">initializers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">WebApplicationInitializer&lt;/span> &lt;span style="color:#000">initializer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">initializers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//调用WebApplicationInitializer的方法onStartup
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">initializer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">onStartup&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>&lt;strong>SpringServletContainerInitializer&lt;/strong>&lt;/em> 继承了 &lt;em>&lt;strong>ServletContainerInitializer&lt;/strong>&lt;/em> 在对应的jar包下面的 &lt;em>&lt;strong>META-INF.services&lt;/strong>&lt;/em> 下面有一个文件 &lt;em>&lt;strong>javax.servlet.ServletContainerInitializer&lt;/strong>&lt;/em> 内容如下：&lt;/p>
&lt;blockquote>
&lt;p>org.springframework.web.SpringServletContainerInitializer&lt;/p>
&lt;/blockquote>
&lt;p>通过SPI就能加载 &lt;em>&lt;strong>SpringServletContainerInitializer&lt;/strong>&lt;/em> 类，然后通过定义在上面的 &lt;em>&lt;strong>@HandlesTypes&lt;/strong>&lt;/em> 注解。根据配置的类 &lt;em>&lt;strong>WebApplicationInitializer&lt;/strong>&lt;/em> 来加载。通过 &lt;em>&lt;strong>WebApplicationInitializer&lt;/strong>&lt;/em> 来把Servlet和Spring结合起来。&lt;/p>
&lt;h3 id="3-webapplicationinitializer介绍">3. WebApplicationInitializer介绍&lt;/h3>
&lt;p>&lt;img src="https://github.com/mxsm/document/blob/master/image/Spring/Springframework/WebApplicationInitializer.png?raw=true" alt="继承关系">&lt;/p>
&lt;p>从上面可以看出来 &lt;em>&lt;strong>&lt;code>WebApplicationInitializer&lt;/code>&lt;/strong>&lt;/em> 有三个继承实现类，三个抽象的类单一继承。下面分析一下下面的几个初始化类：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>WebApplicationInitializer&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">WebApplicationInitializer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//启动方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">onStartup&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ServletContext&lt;/span> &lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">ServletException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 &lt;em>&lt;strong>WebApplicationInitializer&lt;/strong>&lt;/em> 中只有一个方法，在 &lt;em>&lt;strong>SpringServletContainerInitializer&lt;/strong>&lt;/em> 类中调用了这个 &lt;strong>&lt;code>onStartup&lt;/code>&lt;/strong> 方法。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>AbstractContextLoaderInitializer&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">abstract&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">AbstractContextLoaderInitializer&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">WebApplicationInitializer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/** Logger available to subclasses. */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">Log&lt;/span> &lt;span style="color:#000">logger&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">LogFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getLog&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">onStartup&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ServletContext&lt;/span> &lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">ServletException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">registerContextLoaderListener&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//添加ContextLoaderListener到ServletContext
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">registerContextLoaderListener&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ServletContext&lt;/span> &lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">WebApplicationContext&lt;/span> &lt;span style="color:#000">rootAppContext&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">createRootApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">rootAppContext&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ContextLoaderListener&lt;/span> &lt;span style="color:#000">listener&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ContextLoaderListener&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">rootAppContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">listener&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setContextInitializers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getRootApplicationContextInitializers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addListener&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">listener&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//打印日志
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//创建Spring的WebApplicationContext
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">abstract&lt;/span> &lt;span style="color:#000">WebApplicationContext&lt;/span> &lt;span style="color:#000">createRootApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">ApplicationContextInitializer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;[]&lt;/span> &lt;span style="color:#000">getRootApplicationContextInitializers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>AbstractDispatcherServletInitializer&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">abstract&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">AbstractDispatcherServletInitializer&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">AbstractContextLoaderInitializer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//默认的Servlet名称
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">DEFAULT_SERVLET_NAME&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;dispatcher&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">onStartup&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ServletContext&lt;/span> &lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">ServletException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">super&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">onStartup&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//注册DispatcherServlet
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">registerDispatcherServlet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//注册注册DispatcherServlet的方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">registerDispatcherServlet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ServletContext&lt;/span> &lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">servletName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getServletName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">hasLength&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">servletName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;getServletName() must not return null or empty&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//抽象方法createServletApplicationContext由使用者自己实现
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">WebApplicationContext&lt;/span> &lt;span style="color:#000">servletAppContext&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">createServletApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">notNull&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">servletAppContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;createServletApplicationContext() must not return null&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">FrameworkServlet&lt;/span> &lt;span style="color:#000">dispatcherServlet&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">createDispatcherServlet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">servletAppContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">notNull&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dispatcherServlet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;createDispatcherServlet(WebApplicationContext) must not return null&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">dispatcherServlet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setContextInitializers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getServletApplicationContextInitializers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">ServletRegistration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">Dynamic&lt;/span> &lt;span style="color:#000">registration&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addServlet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">servletName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">dispatcherServlet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registration&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">IllegalStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Failed to register servlet with name &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">servletName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#39;. &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Check if there is another servlet registered under the same name.&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">registration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setLoadOnStartup&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">1&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">registration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addMapping&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getServletMappings&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">registration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setAsyncSupported&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">isAsyncSupported&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">Filter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">filters&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getServletFilters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">ObjectUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">filters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Filter&lt;/span> &lt;span style="color:#000">filter&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">filters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">registerServletFilter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">filter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">customizeRegistration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * Return the name under which the {@link DispatcherServlet} will be registered.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * Defaults to {@link #DEFAULT_SERVLET_NAME}.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @see #registerDispatcherServlet(ServletContext)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">getServletName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">DEFAULT_SERVLET_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * Create a servlet application context to be provided to the {@code DispatcherServlet}.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * &amp;lt;p&amp;gt;The returned context is delegated to Spring&amp;#39;s
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * {@link DispatcherServlet#DispatcherServlet(WebApplicationContext)}. As such,
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * it typically contains controllers, view resolvers, locale resolvers, and other
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * web-related beans.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @see #registerDispatcherServlet(ServletContext)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">abstract&lt;/span> &lt;span style="color:#000">WebApplicationContext&lt;/span> &lt;span style="color:#000">createServletApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * Create a {@link DispatcherServlet} (or other kind of {@link FrameworkServlet}-derived
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * dispatcher) with the specified {@link WebApplicationContext}.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * &amp;lt;p&amp;gt;Note: This allows for any {@link FrameworkServlet} subclass as of 4.2.3.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * Previously, it insisted on returning a {@link DispatcherServlet} or subclass thereof.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">FrameworkServlet&lt;/span> &lt;span style="color:#000">createDispatcherServlet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">WebApplicationContext&lt;/span> &lt;span style="color:#000">servletAppContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">DispatcherServlet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">servletAppContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * Specify application context initializers to be applied to the servlet-specific
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * application context that the {@code DispatcherServlet} is being created with.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @since 4.2
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @see #createServletApplicationContext()
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @see DispatcherServlet#setContextInitializers
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @see #getRootApplicationContextInitializers()
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">ApplicationContextInitializer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;[]&lt;/span> &lt;span style="color:#000">getServletApplicationContextInitializers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * Specify the servlet mapping(s) for the {@code DispatcherServlet} &amp;amp;mdash;
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * for example {@code &amp;#34;/&amp;#34;}, {@code &amp;#34;/app&amp;#34;}, etc.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @see #registerDispatcherServlet(ServletContext)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">abstract&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">getServletMappings&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * Specify filters to add and map to the {@code DispatcherServlet}.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @return an array of filters or {@code null}
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @see #registerServletFilter(ServletContext, Filter)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Filter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">getServletFilters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * Add the given filter to the ServletContext and map it to the
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * {@code DispatcherServlet} as follows:
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * &amp;lt;ul&amp;gt;
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * &amp;lt;li&amp;gt;a default filter name is chosen based on its concrete type
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * &amp;lt;li&amp;gt;the {@code asyncSupported} flag is set depending on the
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * return value of {@link #isAsyncSupported() asyncSupported}
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * &amp;lt;li&amp;gt;a filter mapping is created with dispatcher types {@code REQUEST},
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * {@code FORWARD}, {@code INCLUDE}, and conditionally {@code ASYNC} depending
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * on the return value of {@link #isAsyncSupported() asyncSupported}
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * &amp;lt;/ul&amp;gt;
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * &amp;lt;p&amp;gt;If the above defaults are not suitable or insufficient, override this
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * method and register filters directly with the {@code ServletContext}.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @param servletContext the servlet context to register filters with
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @param filter the filter to be registered
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @return the filter registration
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">FilterRegistration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">Dynamic&lt;/span> &lt;span style="color:#000">registerServletFilter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ServletContext&lt;/span> &lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Filter&lt;/span> &lt;span style="color:#000">filter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">filterName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">Conventions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getVariableName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">filter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Dynamic&lt;/span> &lt;span style="color:#000">registration&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addFilter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">filterName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">filter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registration&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">counter&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">0&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">while&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">registration&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">counter&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">100&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">IllegalStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Failed to register filter with name &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">filterName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#39;. &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Check if there is another filter registered under the same name.&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">registration&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addFilter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">filterName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;#&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">counter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">filter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">counter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">++;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">registration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setAsyncSupported&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">isAsyncSupported&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">registration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addMappingForServletNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getDispatcherTypes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getServletName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">registration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#000">EnumSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">DispatcherType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">getDispatcherTypes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">isAsyncSupported&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">?&lt;/span>
&lt;span style="color:#000">EnumSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">of&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">DispatcherType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">REQUEST&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">DispatcherType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">FORWARD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">DispatcherType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">INCLUDE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">DispatcherType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">ASYNC&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span>
&lt;span style="color:#000">EnumSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">of&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">DispatcherType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">REQUEST&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">DispatcherType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">FORWARD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">DispatcherType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">INCLUDE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * A single place to control the {@code asyncSupported} flag for the
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * {@code DispatcherServlet} and all filters added via {@link #getServletFilters()}.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * &amp;lt;p&amp;gt;The default value is &amp;#34;true&amp;#34;.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">isAsyncSupported&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * Optionally perform further registration customization once
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * {@link #registerDispatcherServlet(ServletContext)} has completed.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @param registration the {@code DispatcherServlet} registration to be customized
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @see #registerDispatcherServlet(ServletContext)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">customizeRegistration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ServletRegistration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">Dynamic&lt;/span> &lt;span style="color:#000">registration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>AbstractAnnotationConfigDispatcherServletInitializer&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="4-springwebapplicationinitializer消除配置文件源码分析">4. Spring+WebApplicationInitializer消除配置文件源码分析&lt;/h3>
&lt;h3 id="5-spring的例子">5. Spring的例子&lt;/h3></description></item><item><title>Spring-Framework: doGetBean源码详解</title><link>/spring-framework/core-source-analysis/dogetbean/</link><pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/dogetbean/</guid><description>
&lt;h3 id="1-dogetbean方法源码解析">1. doGetBean方法源码解析&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">T&lt;/span> &lt;span style="color:#000">doGetBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">requiredType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">typeCheckOnly&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 通过name获取BeanName,这里不能使用name作为beanName：
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 1. name可能是别名，通过方法转换为具体的实例名称
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 2. name可能会以&amp;amp;开头，表明调用者想获取FactoryBean本身，而非FactoryBean创建bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * FactoryBean 的实现类和其他的 bean 存储方式是一致的，即 &amp;lt;beanName, bean&amp;gt;，
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * beanName 中是没有 &amp;amp; 这个字符的。所以我们需要将 name 的首字符 &amp;amp; 移除，这样才能从
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 缓存里取到 FactoryBean 实例。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> *
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">transformedBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 从缓存中获取bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">sharedInstance&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/*
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 如果 sharedInstance = null，则说明缓存里没有对应的实例，表明这个实例还没创建。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> *( BeanFactory 并不会在一开始就将所有的单例 bean 实例化好，而是在调用 getBean 获取bean 时再实例化，也就是懒加载)。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * getBean 方法有很多重载，比如 getBean(String name, Object... args)，我们在首次获取
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 某个 bean 时，可以传入用于初始化 bean 的参数数组（args），BeanFactory 会根据这些参数
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 去匹配合适的构造方法构造 bean 实例。当然，如果单例 bean 早已创建好，这里的 args 就没有
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 用了，BeanFactory 不会多次实例化单例 bean。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sharedInstance&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">args&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTraceEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">isSingletonCurrentlyInCreation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">trace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Returning eagerly cached instance of singleton bean &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">beanName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;&amp;#39; that is not fully initialized yet - a consequence of a circular reference&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">trace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Returning cached instance of singleton bean &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">beanName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/*
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 如果 sharedInstance 是普通的单例 bean，下面的方法会直接返回。但如果
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * sharedInstance 是 FactoryBean 类型的，则需调用 getObject 工厂方法获取真正的
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * bean 实例。如果用户想获取 FactoryBean 本身，这里也不会做特别的处理，直接返回
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 即可。毕竟 FactoryBean 的实现类本身也是一种 bean，只不过具有一点特殊的功能而已。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getObjectForBeanInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sharedInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/*
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 如果上面的条件不满足，则表明 sharedInstance 可能为空，此时 beanName 对应的 bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 实例可能还未创建。这里还存在另一种可能，如果当前容器有父容器，beanName 对应的 bean 实例
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 可能是在父容器中被创建了，所以在创建实例前，需要先去父容器里检查一下。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// BeanFactory 不缓存 Prototype 类型的 bean，无法处理该类型 bean 的循环依赖问题
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//判断是否存在循环依赖
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">isPrototypeCurrentlyInCreation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanCurrentlyInCreationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 如果 sharedInstance = null，则到父容器中查找 bean 实例
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">BeanFactory&lt;/span> &lt;span style="color:#000">parentBeanFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getParentBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">parentBeanFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">containsBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Not found -&amp;gt; check parent.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">nameToLookup&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">originalBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">parentBeanFactory&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">AbstractBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">((&lt;/span>&lt;span style="color:#000">AbstractBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">parentBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">doGetBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">nameToLookup&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">requiredType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">typeCheckOnly&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">args&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Delegation to parent with explicit args.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">parentBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">nameToLookup&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">requiredType&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// No args -&amp;gt; delegate to standard getBean method.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">parentBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">nameToLookup&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">requiredType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">parentBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">nameToLookup&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">typeCheckOnly&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">markBeanAsCreated&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 合并父 BeanDefinition 与子 BeanDefinition
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">mbd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getMergedLocalBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">checkMergedBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 检查是否有 dependsOn 依赖，如果有则先初始化所依赖的 bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">dependsOn&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getDependsOn&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dependsOn&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">dep&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">dependsOn&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/*
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 检测是否存在 depends-on 循环依赖，若存在则抛异常。比如 A 依赖 B，
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * B 又依赖 A，他们的配置如下：
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * &amp;lt;bean id=&amp;#34;beanA&amp;#34; class=&amp;#34;BeanA&amp;#34; depends-on=&amp;#34;beanB&amp;#34;&amp;gt;
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * &amp;lt;bean id=&amp;#34;beanB&amp;#34; class=&amp;#34;BeanB&amp;#34; depends-on=&amp;#34;beanA&amp;#34;&amp;gt;
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> *
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * beanA 要求 beanB 在其之前被创建，但 beanB 又要求 beanA 先于它
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 创建。这个时候形成了循环，对于 depends-on 循环，Spring 会直接
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 抛出异常
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">isDependent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">dep&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanCreationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getResourceDescription&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Circular depends-on relationship between &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">beanName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#39; and &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">dep&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 注册依赖记录
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">registerDependentBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dep&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 加载 depends-on 依赖
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dep&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">NoSuchBeanDefinitionException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanCreationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getResourceDescription&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;&amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">beanName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#39; depends on missing bean &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">dep&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 创建 bean 实例
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/*
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 这里并没有直接调用 createBean 方法创建 bean 实例，而是通过
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * getSingleton(String, ObjectFactory) 方法获取 bean 实例。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * getSingleton(String, ObjectFactory) 方法会在内部调用
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * ObjectFactory 的 getObject() 方法创建 bean，并会在创建完成后，
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 将 bean 放入缓存中。
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#000">sharedInstance&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&amp;gt;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">createBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Explicitly remove instance from singleton cache: It might have been put there
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// eagerly by the creation process, to allow for circular reference resolution.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// Also remove any beans that received a temporary reference to the bean.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">destroySingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">});&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 如果 bean 是 FactoryBean 类型，则调用工厂方法获取真正的 bean 实例。否则直接返回 bean 实例
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getObjectForBeanInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sharedInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 创建 prototype 类型的 bean 实例
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isPrototype&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// It&amp;#39;s a prototype -&amp;gt; create a new instance.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">prototypeInstance&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">beforePrototypeCreation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">prototypeInstance&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">createBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">finally&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">afterPrototypeCreation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getObjectForBeanInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">prototypeInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 创建其他类型的 bean 实例
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">scopeName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getScope&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">Scope&lt;/span> &lt;span style="color:#000">scope&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">scopes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">scopeName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">scope&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">IllegalStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;No Scope registered for scope name &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">scopeName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">scopedInstance&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">scope&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&amp;gt;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">beforePrototypeCreation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">createBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">finally&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">afterPrototypeCreation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">});&lt;/span>
&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getObjectForBeanInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">scopedInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">IllegalStateException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanCreationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Scope &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">scopeName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#39; is not active for the current thread; consider &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;defining a scoped proxy for this bean if you intend to refer to it from a singleton&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">cleanupAfterBeanCreationFailure&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Check if required type matches the type of the actual bean instance.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">requiredType&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">requiredType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">T&lt;/span> &lt;span style="color:#000">convertedBean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getTypeConverter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">convertIfNecessary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">requiredType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">convertedBean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanNotOfRequiredTypeException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">requiredType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">convertedBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">TypeMismatchException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTraceEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">trace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Failed to convert bean &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">name&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#39; to required type &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#000">ClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getQualifiedName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">requiredType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanNotOfRequiredTypeException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">requiredType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>从源码分析一下 &lt;strong>&lt;code>doGetBean&lt;/code>&lt;/strong> 的执行流程如下：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>转换beanName&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>传入的name参数可能是别名，也可能是FactoryBean，索引还需要进行一系列解析&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>去除FactoryBean的修饰符，也就是如果name=也就是如果name = &amp;ldquo;&amp;amp;factoryBean&amp;rdquo;，那么会首先去除&amp;amp;而使name = &amp;ldquo;factoryBean&amp;rdquo;&lt;/li>
&lt;li>将别名alias转换为最终指向的beanName，比如别名A执行名称为B的bean，而B没有指向任何其他的bean，即为最终的bean，则返回B;但是如果B又指向C，而是C是最终的bean，则返回C。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>尝试从缓存中获取原始单例&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>这就是Spring的IOC，首先尝试从缓存中加载单例模式&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;h4 id="检测是否为factorybean并获取bean以及初始化后处理">检测是否为FactoryBean并获取Bean以及初始化后处理&lt;/h4>
&lt;blockquote>
&lt;p>在doGetBean方法中频繁出现getObjectForBeanInstance方法，它主要完成对获取的Bean Instance进行检测是否为FactoryBean，如果是FactoryBean则通过工厂方法获取Bean以及初始化后处理&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;h4 id="创建单例bean">创建单例Bean&lt;/h4>
&lt;blockquote>
&lt;p>如果缓存中没有单例Bean的缓存，则需要从头开始创建单例Bean，这主要是重载getSingleton的重载方法来实现单例Bean的加载。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;h4 id="原型模式的依赖检查">原型模式的依赖检查&lt;/h4>
&lt;blockquote>
&lt;p>只有单例模式才会尝试解决循环依赖，如果存在A中有B的属性，B中有A的属性，那么当依赖注入的时候看，就会产生当A还未创建完的时候因为对于B的创建再次返回创建A，造成循环依赖，也就是情况：isPrototypeCurrentlyInCreation(beanName)判断为true&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>处理 depends-on 依赖&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>创建并缓存 bean&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>调用 getObjectForBeanInstance 方法，并按 name 规则返回相应的 bean 实例&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>按需转换 bean 类型，并返回转换后的 bean 实例&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="2-方法的源码解析">2. 方法的源码解析&lt;/h3>
&lt;p>接下来逐步分析每一个方法&lt;/p>
&lt;h4 id="21-transformedbeanname">2.1 transformedBeanName&lt;/h4>
&lt;p>&lt;strong>&lt;code>transformedBeanName(name)&lt;/code>&lt;/strong> &lt;strong>&lt;code>beanName&lt;/code>&lt;/strong> 的转换，之前分析过由于 &lt;strong>&lt;code>name&lt;/code>&lt;/strong> 可能是 &lt;strong>&lt;code>FactoryBean&lt;/code>&lt;/strong> 或者普通的 Bean的别名所以需要转换。&lt;/p>
&lt;blockquote>
&lt;p>name可能是FactoryBean或者是beanName的别名，用当前这个方法来进行转换成真正的beanName来进行后续的操作&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">transformedBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//BeanFactoryUtils.transformedBeanName(name)处理 FactoryBean 类型
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">canonicalName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanFactoryUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">transformedBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//FactoryBean转换
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">transformedBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判空
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">notNull&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#39;name&amp;#39; must not be null&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否已 &amp;amp; 开头是否为FactoryBean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">startsWith&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">FACTORY_BEAN_PREFIX&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">transformedBeanNameCache&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">computeIfAbsent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&amp;gt;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">do&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">beanName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">substring&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">FACTORY_BEAN_PREFIX&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">length&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">while&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">startsWith&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">FACTORY_BEAN_PREFIX&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">});&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//将别名处理成BeanName
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">canonicalName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">canonicalName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Handle aliasing...
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">resolvedName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">do&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">resolvedName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">aliasMap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">canonicalName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resolvedName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">canonicalName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">resolvedName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">while&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resolvedName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">canonicalName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>从上面可以看出来 &lt;strong>transformedBeanName&lt;/strong> 方法主要是用来处理beanName。&lt;/p>
&lt;h4 id="22-getsingletonbeanname">2.2 getSingleton(beanName)&lt;/h4>
&lt;p>&lt;strong>&lt;code>getSingleton(beanName)&lt;/code>&lt;/strong> 主要从缓存中获取bean。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">getSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">getSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">getSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">allowEarlyReference&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//从缓存Map中获取
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">singletonObject&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">singletonObjects&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">singletonObject&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">isSingletonCurrentlyInCreation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">synchronized&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">singletonObjects&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//从earlySingletonObjects获取bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">singletonObject&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">earlySingletonObjects&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">singletonObject&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">allowEarlyReference&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ObjectFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">singletonFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">singletonFactories&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">singletonFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">singletonObject&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">singletonFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getObject&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">earlySingletonObjects&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">singletonObject&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">singletonFactories&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">remove&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">singletonObject&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="23-abstractbeanfactorygetobjectforbeaninstance方法">2.3 AbstractBeanFactory#getObjectForBeanInstance方法&lt;/h4>
&lt;p>通过给定的bean实例获取对象，返回的bean为自己或者是FactoryBean创建的对象。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">getObjectForBeanInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">beanInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断name是否为Bean FactoryBean的引用
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanFactoryUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isFactoryDereference&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanInstance&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">NullBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">beanInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!(&lt;/span>&lt;span style="color:#000">beanInstance&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">FactoryBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanIsNotAFactoryException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">transformedBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">),&lt;/span> &lt;span style="color:#000">beanInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//现在beanInstance可能是普通的bena或者FactoryBean，如果是普通的Bean直接返回实例
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!(&lt;/span>&lt;span style="color:#000">beanInstance&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">FactoryBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#000">BeanFactoryUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isFactoryDereference&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">beanInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//如果是FactoryBean，使用FactoryBean来创建一个bean实例
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">object&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">object&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getCachedObjectForFactoryBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">object&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Return bean instance from factory.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">FactoryBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">factory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">FactoryBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;)&lt;/span> &lt;span style="color:#000">beanInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Caches object obtained from FactoryBean if it is a singleton.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">containsBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">mbd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getMergedLocalBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">synthetic&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isSynthetic&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//这里从FactoryBean中获取创建的Bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">object&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getObjectFromFactoryBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">factory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">synthetic&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>FactoryBean创建的Bean的名称FactoryBean本身作为一个Bean在Spring容器中是用是否包含 &lt;strong>&lt;code>&amp;amp;&lt;/code>&lt;/strong> 前缀来区分的。&lt;/p>
&lt;/blockquote>
&lt;h4 id="24--创建单例bean-defaultsingletonbeanregistrygetsingleton">2.4 创建单例Bean DefaultSingletonBeanRegistry#getSingleton&lt;/h4>
&lt;p>在bean的创建过程，通过判断 &lt;strong>&lt;code>scope&lt;/code>&lt;/strong> 来判断创建的Bean的类型&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//创建单例
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">sharedInstance&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&amp;gt;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">createBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">destroySingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">});&lt;/span>
&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getObjectForBeanInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sharedInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过上面可以看出主要是通过调用 &lt;strong>&lt;code>DefaultSingletonBeanRegistry#getSingleton&lt;/code>&lt;/strong> 来创建Bean&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">getSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ObjectFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">singletonFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">notNull&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Bean name must not be null&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">synchronized&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">singletonObjects&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//从缓存中获取Bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">singletonObject&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">singletonObjects&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">singletonObject&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">beforeSingletonCreation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">newSingleton&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">recordSuppressedExceptions&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">suppressedExceptions&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">recordSuppressedExceptions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">suppressedExceptions&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LinkedHashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//创建Bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">singletonObject&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">singletonFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getObject&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">newSingleton&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">IllegalStateException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//从缓存中获取
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">singletonObject&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">singletonObjects&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">singletonObject&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanCreationException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">recordSuppressedExceptions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Exception&lt;/span> &lt;span style="color:#000">suppressedException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">suppressedExceptions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addRelatedCause&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">suppressedException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">finally&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">recordSuppressedExceptions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">suppressedExceptions&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">afterSingletonCreation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">newSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">addSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">singletonObject&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">singletonObject&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>上面的主要一行代码 &lt;strong>&lt;code>singletonObject = singletonFactory.getObject();&lt;/code>&lt;/strong> 来获取，也就是代码中执行的 &lt;strong>&lt;code>createBean(beanName, mbd, args)&lt;/code>&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#000">sharedInstance&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&amp;gt;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//这里才是真正的调用创建Bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">createBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">destroySingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>&lt;code>createbean&lt;/code>&lt;/strong> 是 &lt;strong>&lt;code>AbstractBeanFactory&lt;/code>&lt;/strong> 类的一个抽象方法，实现看具体的子类。 抽象子类 &lt;strong>&lt;code>AbstractAutowireCapableBeanFactory&lt;/code>&lt;/strong> 对 &lt;strong>&lt;code>createBean&lt;/code>&lt;/strong> 方法进行了实现。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">createBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeanCreationException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">mbdToUse&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//确定并加载bean的class
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">resolvedClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">resolveBeanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resolvedClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">hasBeanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">mbdToUse&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">mbdToUse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setBeanClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resolvedClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 准备需要的方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">mbdToUse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">prepareMethodOverrides&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionValidationException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanDefinitionStoreException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbdToUse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getResourceDescription&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span>
&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Validation of method overrides failed&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 给InstantiationAwareBeanPostProcessor返回一个代理对象而不是真正的对象
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// 这里主要处理的InstantiationAwareBeanPostProcessor，处理对象的实例化
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">resolveBeforeInstantiation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbdToUse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanCreationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbdToUse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getResourceDescription&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;BeanPostProcessor before instantiation of bean failed&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//创建真正的bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">beanInstance&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">doCreateBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbdToUse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">beanInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanCreationException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">|&lt;/span> &lt;span style="color:#000">ImplicitlyAppearedSingletonException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanCreationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">mbdToUse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getResourceDescription&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Unexpected exception during bean creation&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>Object bean = resolveBeforeInstantiation(beanName, mbdToUse) 上面的这段代码是需要关注的，这个主要用来处理实现了InstantiationAwareBeanPostProcessor接口的类&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>在对于不是实现代理类似通过调用 &lt;strong>&lt;code>doCreateBean&lt;/code>&lt;/strong> 方法来创建对象的：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">doCreateBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeanCreationException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 实例化 bean.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">BeanWrapper&lt;/span> &lt;span style="color:#000">instanceWrapper&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">instanceWrapper&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">factoryBeanInstanceCache&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">remove&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">instanceWrapper&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">instanceWrapper&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">createBeanInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">instanceWrapper&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getWrappedInstance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">beanType&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">instanceWrapper&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getWrappedClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanType&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#000">NullBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resolvedTargetType&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 下面开始处理 Bean实现的 BeanPostProcessor
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">synchronized&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">postProcessingLock&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">postProcessed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理实现了MergedBeanDefinitionPostProcessor接口的
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">applyMergedBeanDefinitionPostProcessors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanCreationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getResourceDescription&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Post-processing of merged bean definition failed&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">postProcessed&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//循环引用的处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">earlySingletonExposure&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">allowCircularReferences&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span>
&lt;span style="color:#000">isSingletonCurrentlyInCreation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">earlySingletonExposure&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">addSingletonFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&amp;gt;&lt;/span> &lt;span style="color:#000">getEarlyBeanReference&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 初始化Bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">exposedObject&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理InstantiationAwareBeanPostProcessor的postProcessAfterInstantiation
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">populateBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">instanceWrapper&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//初始化Bean -- 包含处理 BeanPostProcessor的实现以及init方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">exposedObject&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">initializeBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">exposedObject&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ex&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">BeanCreationException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">equals&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(((&lt;/span>&lt;span style="color:#000">BeanCreationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">getBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanCreationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanCreationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getResourceDescription&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Initialization of bean failed&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">earlySingletonExposure&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">earlySingletonReference&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">earlySingletonReference&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">exposedObject&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">exposedObject&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">earlySingletonReference&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">allowRawInjectionDespiteWrapping&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">hasDependentBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">dependentBeans&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getDependentBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">actualDependentBeans&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LinkedHashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">dependentBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">length&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">dependentBean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">dependentBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">removeSingletonIfCreatedForTypeCheckOnly&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dependentBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">actualDependentBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dependentBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">actualDependentBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanCurrentlyInCreationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Bean with name &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">beanName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#39; has been injected into other beans [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#000">StringUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">collectionToCommaDelimitedString&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">actualDependentBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;] in its raw version as part of a circular reference, but has eventually been &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;wrapped. This means that said other beans do not use the final version of the &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;bean. This is often the result of over-eager type matching - consider using &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;&amp;#39;getBeanNamesOfType&amp;#39; with the &amp;#39;allowEagerInit&amp;#39; flag turned off, for example.&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 处理实现了DisposableBean接口的bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">registerDisposableBeanIfNecessary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanDefinitionValidationException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BeanCreationException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">mbd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getResourceDescription&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Invalid destruction signature&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">exposedObject&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>&lt;code>exposedObject = initializeBean(beanName, exposedObject, mbd)&lt;/code>&lt;/strong> 这个方法主要执行了我们实现的 BeanPostProcessor。&lt;/p>
&lt;p>BeanPostProcessor的Bean被单独保存对象的私有变量&lt;/p>
&lt;/blockquote></description></item><item><title>Spring-Framework: Spring Environment源码解析</title><link>/spring-framework/core-source-analysis/spring-environment/</link><pubDate>Wed, 23 Jan 2019 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/spring-environment/</guid><description>
&lt;h3 id="environment关系图">Environment关系图&lt;/h3>
&lt;p>&lt;img src="https://github.com/mxsm/document/blob/master/image/Spring/Springframework/Environment.png?raw=true" alt="图">&lt;/p>
&lt;p>从上图可以看出来 &lt;strong>&lt;code>Environment&lt;/code>&lt;/strong> 主要有三个实现类：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>MockEnvironment&lt;/strong>&lt;/p>
&lt;p>用于mock的&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>StandardEnvironment&lt;/strong>&lt;/p>
&lt;p>标准的环境&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>StandardServletEnvironment&lt;/strong>&lt;/p>
&lt;p>用于web的环境&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="分析一下常用的standardenvironment">分析一下常用的StandardEnvironment&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">Environment&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">PropertyResolver&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取配置文件
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">getActiveProfiles&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取默认的配置文件
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">getDefaultProfiles&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//是否接受配置文件
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">acceptsProfiles&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Profiles&lt;/span> &lt;span style="color:#000">profiles&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//看一下接口 PropertyResolver
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">//PropertyResolver 主要是获取对应的Properties值，String或者进行数据类型转换后的值
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">//同时会处理占位符的数据
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">PropertyResolver&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">containsProperty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">key&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">getProperty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">key&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">getProperty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">key&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">defaultValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">T&lt;/span> &lt;span style="color:#000">getProperty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">key&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">targetType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">T&lt;/span> &lt;span style="color:#000">getProperty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">key&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">targetType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">T&lt;/span> &lt;span style="color:#000">defaultValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">getRequiredProperty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">key&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">IllegalStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">T&lt;/span> &lt;span style="color:#000">getRequiredProperty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">key&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">targetType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">IllegalStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">resolvePlaceholders&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">text&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">resolveRequiredPlaceholders&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">text&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">IllegalArgumentException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/mxsm/document/blob/master/image/Spring/Springframework/PropertyResolver.png?raw=true" alt="图">&lt;/p>
&lt;p>看一下StandardEnvironment的代码&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">StandardEnvironment&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">AbstractEnvironment&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//系统的property名称
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;systemEnvironment&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//JVM的property名称
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">SYSTEM_PROPERTIES_PROPERTY_SOURCE_NAME&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;systemProperties&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//把系统的Properties和JVM的Properties存入
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//此方法在父类的构造函数中进行调用
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">customizePropertySources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">MutablePropertySources&lt;/span> &lt;span style="color:#000">propertySources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">propertySources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addLast&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">MapPropertySource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">SYSTEM_PROPERTIES_PROPERTY_SOURCE_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getSystemProperties&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()));&lt;/span>
&lt;span style="color:#000">propertySources&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addLast&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">SystemEnvironmentPropertySource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getSystemEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Spring-Framework: Spring Web Context</title><link>/spring-framework/web-source-analysis/spring-web-context/</link><pubDate>Tue, 30 Oct 2018 00:00:00 +0000</pubDate><guid>/spring-framework/web-source-analysis/spring-web-context/</guid><description>
&lt;h3 id="1-spring-web-contexts">1. Spring Web Contexts&lt;/h3>
&lt;p>当我们在Web项目中使用Spring的时候我们有几种方式去组织application contexts，接下来我们将分析大部分的提供。&lt;/p>
&lt;h3 id="2-root-web-application-context">2. Root Web Application Context&lt;/h3>
&lt;p>每一个Spring webapp有一个与他生命周期相关联的application context: root web application context&lt;/p>
&lt;p>这个上下文随着应用的启动而启动，随着引用的销毁而销毁，这个由servlet context listener来实现。这个上下文在web Application中总是一个 &lt;em>WebApplicationContext&lt;/em> 实例。这个接口继承了 &lt;em>ApplicationContext&lt;/em> 同时能够访问到 &lt;em>ServletContext&lt;/em> 。&lt;/p>
&lt;h4 id="21-contextloaderlistener">2.1 &lt;em>ContextLoaderListener&lt;/em>&lt;/h4>
&lt;p>web应用程序是由一个监听器 &lt;em>org.springframework.web.context.ContextLoaderListener&lt;/em> 来管理。这个监听器是Spring模块中的一部分， &lt;strong>默认情况下加载XML application context 从/WEB-INF/applicationContext.xml.&lt;/strong> 然而这种默认情况是可用改变的。&lt;/p>
&lt;h4 id="22-使用-webxml-和-xml-application-context">2.2 使用 web.xml 和 XML Application Context&lt;/h4>
&lt;p>web.xml&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#204a87;font-weight:bold">&amp;lt;listener&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;listener-class&amp;gt;&lt;/span>
org.springframework.web.context.ContextLoaderListener
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/listener-class&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/listener&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们可以使用contextConfigLocation参数指定XML上下文配置的另一个位置:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#204a87;font-weight:bold">&amp;lt;context-param&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;param-name&amp;gt;&lt;/span>contextConfigLocation&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/param-name&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;param-value&amp;gt;&lt;/span>/WEB-INF/rootApplicationContext.xml&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/param-value&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/context-param&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>多个的情况：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#204a87;font-weight:bold">&amp;lt;context-param&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;param-name&amp;gt;&lt;/span>contextConfigLocation&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/param-name&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;param-value&amp;gt;&lt;/span>/WEB-INF/context1.xml, /WEB-INF/context2.xml&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/param-value&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/context-param&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者使用通配符：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#204a87;font-weight:bold">&amp;lt;context-param&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;param-name&amp;gt;&lt;/span>contextConfigLocation&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/param-name&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;param-value&amp;gt;&lt;/span>/WEB-INF/*-context.xml&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/param-value&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/context-param&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="23-webxml-和-java-application-context">2.3 web.xml 和 Java Application Context&lt;/h4>
&lt;p>除了默认XmlWebApplicationContext,看如何使用注解：&lt;/p>
&lt;p>我们使用 &lt;em>contextClass&lt;/em> 参数来告诉监听器使用那种类型的context实例：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#204a87;font-weight:bold">&amp;lt;context-param&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;param-name&amp;gt;&lt;/span>contextClass&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/param-name&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;param-value&amp;gt;&lt;/span>
org.springframework.web.context.support.AnnotationConfigWebApplicationContext
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/param-value&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/context-param&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>由于 &lt;em>AnnotationConfigWebApplicationContext&lt;/em> 没有默认的配置所以我们必须提供一个：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#204a87;font-weight:bold">&amp;lt;context-param&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;param-name&amp;gt;&lt;/span>contextConfigLocation&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/param-name&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;param-value&amp;gt;&lt;/span>
com.baeldung.contexts.config.RootApplicationConfig,
com.baeldung.contexts.config.NormalWebAppConfig
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/param-value&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/context-param&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者我们告诉Context去扫描一个或者多个package&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#204a87;font-weight:bold">&amp;lt;context-param&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;param-name&amp;gt;&lt;/span>contextConfigLocation&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/param-name&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;param-value&amp;gt;&lt;/span>org.baeldung.bean.config&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/param-value&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/context-param&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="24-servlet3x-可编程配置">2.4 Servlet3.X 可编程配置&lt;/h4>
&lt;p>Servlet3.X的配置文件web.xml是可选的。此外，用户还可以访问一个API，该API允许以编程方式定义基于servlet的应用程序的每个元素spring-web模块利用这些特性，并在应用程序启动时提供API来注册应用程序的组件。Spring扫描应用程序的类路径寻找 &lt;em>org.springframework.web.WebApplicationInitializer&lt;/em> 类的实例。通过执行 &lt;em>void onStartup(ServletContext servletContext) throws ServletException&lt;/em> 方法来调用application启动。&lt;/p>
&lt;h4 id="25-servlet-3x-和-xml-application-context">2.5 Servlet 3.x 和 XML Application Context&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">ApplicationInitializer&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">WebApplicationInitializer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">onStartup&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ServletContext&lt;/span> &lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">ServletException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//...
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>只需要实现 &lt;em>WebApplicationInitializer&lt;/em> 接口；&lt;/p>
&lt;p>首先我们来创建一个root context,第一行是我们前面遇到的contextClass参数的显式版本，我们使用它来决定使用哪个特定的上下文实现:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-reStructuredText" data-lang="reStructuredText">XmlWebApplicationContext rootContext = new XmlWebApplicationContext();&lt;span style="color:#a40000">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接下来是参数 &lt;em>contextConfigLocation&lt;/em> 定义加载bean定义：&lt;/p>
&lt;pre>&lt;code>rootContext.setConfigLocations(&amp;quot;/WEB-INF/rootApplicationContext.xml&amp;quot;);
&lt;/code>&lt;/pre>&lt;p>接下来是为ServletContext添加监听器&lt;/p>
&lt;pre>&lt;code>servletContext.addListener(new ContextLoaderListener(rootContext));
&lt;/code>&lt;/pre>&lt;h4 id="26-servlet-3x-和-java-application-context">2.6 Servlet 3.x 和 Java Application Context&lt;/h4>
&lt;p>使用 &lt;em>AnnotationConfigWebApplicationContext&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">AnnotationsBasedApplicationInitializer&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">AbstractContextLoaderInitializer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">WebApplicationContext&lt;/span> &lt;span style="color:#000">createRootApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">AnnotationConfigWebApplicationContext&lt;/span> &lt;span style="color:#000">rootContext&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AnnotationConfigWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">rootContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">register&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RootApplicationConfig&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">rootContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在这里，我们可以看到我们不再需要注册ContextLoaderListener,还要注意register方法的使用，它是特定于AnnotationConfigWebApplicationContext的，而不是更通用的setConfigLocations:通过调用它，我们可以用上下文注册单个@Configuration注释的类，从而避免了包扫描。&lt;/p>
&lt;h3 id="3-dispatcher-servlet-contexts">3. Dispatcher Servlet Contexts&lt;/h3>
&lt;p>&lt;strong>Spring MVC applications有至少一个Dispatcher Servlet 配置&lt;/strong> 这个Servlet处理接受请求，分发给适当的控制器方法然后返回对应的视图。&lt;/p>
&lt;p>每一个 &lt;strong>DispatcherServlet&lt;/strong> 有关联的application context. 在这样的上下文中定义的bean配置servlet并定义MVC对象，如控制器和视图解析器。&lt;/p>
&lt;h4 id="31-webxml-和-xml-application-context">3.1 web.xml 和 XML Application Context&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#204a87;font-weight:bold">&amp;lt;servlet&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;servlet-name&amp;gt;&lt;/span>normal-webapp&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/servlet-name&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;servlet-class&amp;gt;&lt;/span>
org.springframework.web.servlet.DispatcherServlet
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/servlet-class&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;load-on-startup&amp;gt;&lt;/span>1&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/load-on-startup&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/servlet&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;servlet-mapping&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;servlet-name&amp;gt;&lt;/span>normal-webapp&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/servlet-name&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;url-pattern&amp;gt;&lt;/span>/api/*&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/url-pattern&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/servlet-mapping&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果没有另外指定，servlet的名称将用于确定要加载的XML文件,在例子中我们将使用 &lt;em>WEB-INF/normal-webapp-servlet.xml&lt;/em>. 配置文件。&lt;/p>
&lt;p>我们也可指定配置文件：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#204a87;font-weight:bold">&amp;lt;servlet&amp;gt;&lt;/span>
...
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;init-param&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;param-name&amp;gt;&lt;/span>contextConfigLocation&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/param-name&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;param-value&amp;gt;&lt;/span>/WEB-INF/normal/*.xml&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/param-value&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/init-param&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/servlet&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="32-webxml-和-java-application-context">3.2 web.xml 和 Java Application Context&lt;/h4>
&lt;p>当我们想要使用另一种类型的上下文时，我们继续使用ContextLoaderListener。也就是说，我们指定了一个contextClass参数和一个合适的contextConfigLocation:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#204a87;font-weight:bold">&amp;lt;servlet&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;servlet-name&amp;gt;&lt;/span>normal-webapp-annotations&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/servlet-name&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;servlet-class&amp;gt;&lt;/span>
org.springframework.web.servlet.DispatcherServlet
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/servlet-class&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;init-param&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;param-name&amp;gt;&lt;/span>contextClass&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/param-name&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;param-value&amp;gt;&lt;/span>
org.springframework.web.context.support.AnnotationConfigWebApplicationContext
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/param-value&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/init-param&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;init-param&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;param-name&amp;gt;&lt;/span>contextConfigLocation&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/param-name&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;param-value&amp;gt;&lt;/span>com.baeldung.contexts.config.NormalWebAppConfig&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/param-value&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/init-param&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;load-on-startup&amp;gt;&lt;/span>1&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/load-on-startup&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/servlet&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="33-servlet-3x-和-xml-application-context">3.3 Servlet 3.x 和 XML Application Context&lt;/h4>
&lt;p>创建一个WebApplicationInitializer和一个XML的applications context,去实现onStartup方法&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#000">XmlWebApplicationContext&lt;/span> &lt;span style="color:#000">normalWebAppContext&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">XmlWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">normalWebAppContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setConfigLocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;/WEB-INF/normal-webapp-servlet.xml&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">ServletRegistration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">Dynamic&lt;/span> &lt;span style="color:#000">normal&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/=&lt;/span> &lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addServlet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;normal-webapp&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">DispatcherServlet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">normalWebAppContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">normal&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setLoadOnStartup&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">1&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">normal&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addMapping&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;/api/*&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="34-servlet-3x-和-java-application-context">3.4 Servlet 3.x 和 Java Application Context&lt;/h4>
&lt;p>这一次我们配置一个注解上下文实现WebApplicationInitializer: AbstractDispatcherServletInitializer。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">WebApplicationContext&lt;/span> &lt;span style="color:#000">createServletApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">AnnotationConfigWebApplicationContext&lt;/span> &lt;span style="color:#000">secureWebAppContext&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AnnotationConfigWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">secureWebAppContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">register&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">SecureWebAppConfig&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">secureWebAppContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">getServletMappings&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;/s/api/*&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">};&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://www.baeldung.com/spring-web-contexts">https://www.baeldung.com/spring-web-contexts&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.nonelonely.com/article/1552475062917">https://www.nonelonely.com/article/1552475062917&lt;/a>&lt;/p></description></item><item><title>Spring-Framework: Spring如何解析自定义xml的源码解析</title><link>/spring-framework/custom-component/spring-customxml-source-analysis/</link><pubDate>Fri, 19 Oct 2018 00:00:00 +0000</pubDate><guid>/spring-framework/custom-component/spring-customxml-source-analysis/</guid><description>
&lt;h3 id="1-spring如何加载自定义的xml-element">1. Spring如何加载自定义的xml Element&lt;/h3>
&lt;p>下面来通过代码的Debug来看Spring是如何加载自定义的xml Element&lt;/p>
&lt;blockquote>
&lt;p>代码：&lt;a href="https://github.com/mxsm/spring-sample/tree/master/namespace-handler">https://github.com/mxsm/spring-sample/tree/master/namespace-handler&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="2-namespacehandler的继承关系">2. NamespaceHandler的继承关系&lt;/h3>
&lt;p>首先看一下 &lt;strong>&lt;code>NamespaceHandler&lt;/code>&lt;/strong> 的继承关系&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/document/blob/master/image/Spring/Springframework/NamespaceHandler.png?raw=true" alt="图">&lt;/p>
&lt;p>从上图可以看出来几个比较熟悉的：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>AopNamespaceHandler&lt;/p>
&lt;p>&lt;strong>aop&lt;/strong> 的 &lt;strong>Element&lt;/strong> 处理&lt;/p>
&lt;/li>
&lt;li>
&lt;p>TxNamespaceHandler&lt;/p>
&lt;p>事务的处理节点&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>在继承过程中抽象类 &lt;strong>&lt;code>NamespaceHandlerSupport&lt;/code>&lt;/strong> 实现了 &lt;strong>&lt;code>NamespaceHandler&lt;/code>&lt;/strong> 。自定义也是主要通过 &lt;strong>&lt;code>NamespaceHandlerSupport&lt;/code>&lt;/strong> 实现这个抽象类。&lt;/p>
&lt;h3 id="3-如何加载使用namespacehandler的实现类">3. 如何加载使用NamespaceHandler的实现类&lt;/h3>
&lt;p>在 &lt;strong>Spring&lt;/strong> 中定义了一个 &lt;strong>&lt;code>NamespaceHandlerResolver&lt;/code>&lt;/strong> 接口用来解析 &lt;strong>&lt;code>NamespaceHandler&lt;/code>&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@FunctionalInterface&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">NamespaceHandlerResolver&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * Resolve the namespace URI and return the located {@link NamespaceHandler}
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * implementation.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @param namespaceUri the relevant namespace URI
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @return the located {@link NamespaceHandler} (may be {@code null})
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#000">NamespaceHandler&lt;/span> &lt;span style="color:#000">resolve&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">namespaceUri&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个接口就一个人方法，方法的参数传入的是命名空间的Uri。在 Spring中实现了这个接口的只有一个类 &lt;strong>&lt;code>DefaultNamespaceHandlerResolver&lt;/code>&lt;/strong> 。下面一下这类的代码实现(主要关注一下resolve方法)：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">DefaultNamespaceHandlerResolver&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">NamespaceHandlerResolver&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 空间URI和处理器对应关系存放的文件(自定义同样会被加载)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">DEFAULT_HANDLER_MAPPINGS_LOCATION&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;META-INF/spring.handlers&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/** Logger available to subclasses. */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">Log&lt;/span> &lt;span style="color:#000">logger&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">LogFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getLog&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/** ClassLoader to use for NamespaceHandler classes. */&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">ClassLoader&lt;/span> &lt;span style="color:#000">classLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/** Resource location to search for. */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">handlerMappingsLocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/** Stores the mappings from namespace URI to NamespaceHandler class name / instance. */&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">volatile&lt;/span> &lt;span style="color:#000">Map&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">handlerMappings&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * Create a new {@code DefaultNamespaceHandlerResolver} using the
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * default mapping file location.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * &amp;lt;p&amp;gt;This constructor will result in the thread context ClassLoader being used
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * to load resources.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @see #DEFAULT_HANDLER_MAPPINGS_LOCATION
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">DefaultNamespaceHandlerResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">DEFAULT_HANDLER_MAPPINGS_LOCATION&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * Create a new {@code DefaultNamespaceHandlerResolver} using the
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * default mapping file location.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @param classLoader the {@link ClassLoader} instance used to load mapping resources
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * (may be {@code null}, in which case the thread context ClassLoader will be used)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @see #DEFAULT_HANDLER_MAPPINGS_LOCATION
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">DefaultNamespaceHandlerResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">ClassLoader&lt;/span> &lt;span style="color:#000">classLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">classLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">DEFAULT_HANDLER_MAPPINGS_LOCATION&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">DefaultNamespaceHandlerResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">ClassLoader&lt;/span> &lt;span style="color:#000">classLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">handlerMappingsLocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">notNull&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handlerMappingsLocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Handler mappings location must not be null&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">classLoader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">classLoader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">?&lt;/span> &lt;span style="color:#000">classLoader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">ClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getDefaultClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">handlerMappingsLocation&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">handlerMappingsLocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 解析传入的命名空间的URI
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">NamespaceHandler&lt;/span> &lt;span style="color:#000">resolve&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">namespaceUri&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Map&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">handlerMappings&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getHandlerMappings&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">handlerOrClassName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">handlerMappings&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">get&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">namespaceUri&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handlerOrClassName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handlerOrClassName&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">NamespaceHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">NamespaceHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">handlerOrClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">className&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">handlerOrClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">handlerClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">ClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">forName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">className&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">classLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">NamespaceHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isAssignableFrom&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handlerClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">FatalBeanException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Class [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">className&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;] for namespace [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">namespaceUri&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;] does not implement the [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">NamespaceHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;] interface&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">NamespaceHandler&lt;/span> &lt;span style="color:#000">namespaceHandler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">NamespaceHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">BeanUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">instantiateClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handlerClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//调用init方法--所以在实现 NamespaceHandlerSupport只需要
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//实现init方法原因就在这里
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">namespaceHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">init&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">handlerMappings&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">namespaceUri&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">namespaceHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">namespaceHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ClassNotFoundException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">FatalBeanException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Could not find NamespaceHandler class [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">className&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;] for namespace [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">namespaceUri&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;]&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">LinkageError&lt;/span> &lt;span style="color:#000">err&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">FatalBeanException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Unresolvable class definition for NamespaceHandler class [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#000">className&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;] for namespace [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">namespaceUri&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;]&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">err&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 获取META-INF/spring.handlers里面的对应的命名空间URI和空间处理器的
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * 对应的关系
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#000">Map&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">getHandlerMappings&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Map&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">handlerMappings&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">handlerMappings&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handlerMappings&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">synchronized&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">handlerMappings&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">handlerMappings&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handlerMappings&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTraceEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">trace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Loading NamespaceHandler mappings from [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">handlerMappingsLocation&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;]&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Properties&lt;/span> &lt;span style="color:#000">mappings&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#000">PropertiesLoaderUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">loadAllProperties&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">handlerMappingsLocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">classLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTraceEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">trace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Loaded NamespaceHandler mappings: &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">mappings&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">handlerMappings&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ConcurrentHashMap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">mappings&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">size&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">CollectionUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">mergePropertiesIntoMap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mappings&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">handlerMappings&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">handlerMappings&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">handlerMappings&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">IllegalStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Unable to load NamespaceHandler mappings from location [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">handlerMappingsLocation&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;]&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">handlerMappings&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">toString&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;NamespaceHandlerResolver using mappings &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">getHandlerMappings&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过断点的方式来看一下整个调用方法的调用如下图：&lt;/p>
&lt;p>&lt;img src="https://github.com/mxsm/document/blob/master/image/Spring/Springframework/Spring%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8B%93%E5%B1%95xml%E8%B0%83%E7%94%A8%E9%93%BE.png?raw=true" alt="图">&lt;/p>
&lt;p>下面来分一下整个调用链的过程，上面断点打在 &lt;strong>&lt;code>DefaultNamespaceHandlerResolver&lt;/code>&lt;/strong> 的 &lt;strong>&lt;code>resolve&lt;/code>&lt;/strong> 方法的下面这段代码处&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#000">handlerMappings&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">namespaceUri&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">namespaceHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>细心的话可能你会发现debug的过程中，如果你xml中包含 bean这个节点你会发现并不会走到你的断点这个地方来这个是为什么呢？(答案会在下面的分析过程中给出来)&lt;/p>
&lt;p>Debug的代码在上面已经给出来了。&lt;/p>
&lt;/blockquote>
&lt;p>在调用过程中有一个 &lt;strong>&lt;code>DefaultBeanDefinitionDocumentReader&lt;/code>&lt;/strong> 类。通过上图可以看出调用了这样一段方法&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">parseBeanDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Element&lt;/span> &lt;span style="color:#000">root&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">BeanDefinitionParserDelegate&lt;/span> &lt;span style="color:#000">delegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否为http://www.springframework.org/schema/beans默认的空间
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">delegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isDefaultNamespace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">root&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">NodeList&lt;/span> &lt;span style="color:#000">nl&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">root&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getChildNodes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">i&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">0&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span> &lt;span style="color:#000">i&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span> &lt;span style="color:#000">nl&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getLength&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span> &lt;span style="color:#000">i&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">++)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Node&lt;/span> &lt;span style="color:#000">node&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">nl&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">item&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">i&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">node&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">Element&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Element&lt;/span> &lt;span style="color:#000">ele&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Element&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">node&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否为默认的命名空间
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">delegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isDefaultNamespace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ele&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">parseDefaultElement&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ele&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">delegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//自定义的命名空间--用户自定义的和Spring AOP等等
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">delegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">parseCustomElement&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ele&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">delegate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">parseCustomElement&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">root&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>上面的方法给出了为什么没有进入 &lt;strong>DefaultNamespaceHandlerResolver&lt;/strong> 中，因为只有http://www.springframework.org/schema/bean才是默认的命名空间&lt;/p>
&lt;/blockquote></description></item><item><title>Spring-Framework: ContextLoaderListener 源码分析</title><link>/spring-framework/web-source-analysis/contextloaderlistener/</link><pubDate>Tue, 18 Sep 2018 00:00:00 +0000</pubDate><guid>/spring-framework/web-source-analysis/contextloaderlistener/</guid><description>
&lt;h3 id="1-contextloaderlistener类">1. ContextLoaderListener类&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">ContextLoaderListener&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">ContextLoader&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">ServletContextListener&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//....... 省略代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">contextInitialized&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ServletContextEvent&lt;/span> &lt;span style="color:#000">event&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">initWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">event&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getServletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>继承了 &lt;em>ContextLoader&lt;/em> (Spring的类)，实现了 &lt;em>&lt;strong>ServletContextListener&lt;/strong>&lt;/em> 接口(Servlet3.1的监听接口)。&lt;br>
通过调用 &lt;em>contextInitialized&lt;/em> 方法来初始化Spring上下文&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">WebApplicationContext&lt;/span> &lt;span style="color:#000">initWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ServletContext&lt;/span> &lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">WebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//抛异常
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">log&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Initializing Spring root WebApplicationContext&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Log&lt;/span> &lt;span style="color:#000">logger&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">LogFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getLog&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ContextLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isInfoEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">info&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Root WebApplicationContext: initialization started&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">long&lt;/span> &lt;span style="color:#000">startTime&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">currentTimeMillis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断上下文是否为空
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">context&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//创建Spring上下文
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">context&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">createWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">context&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">ConfigurableWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ConfigurableWebApplicationContext&lt;/span> &lt;span style="color:#000">cwac&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurableWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">cwac&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isActive&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// The context has not yet been refreshed -&amp;gt; provide services such as
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// setting the parent context, setting the application context id, etc
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cwac&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getParent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// The context instance was injected without an explicit parent -&amp;gt;
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// determine parent for root web application context, if any.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ApplicationContext&lt;/span> &lt;span style="color:#000">parent&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">loadParentContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">cwac&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setParent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">configureAndRefreshWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cwac&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//把上下文设置到servlet上下文中
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">WebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">ClassLoader&lt;/span> &lt;span style="color:#000">ccl&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">Thread&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">currentThread&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getContextClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ccl&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">ContextLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">currentContext&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ccl&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">currentContextPerThread&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ccl&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isInfoEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">long&lt;/span> &lt;span style="color:#000">elapsedTime&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">currentTimeMillis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#000">startTime&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">info&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Root WebApplicationContext initialized in &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">elapsedTime&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34; ms&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RuntimeException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">|&lt;/span> &lt;span style="color:#000">Error&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">error&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Context initialization failed&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">WebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过createWebApplicationContext(servletContext)方法来创建WebApplicationContext：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">WebApplicationContext&lt;/span> &lt;span style="color:#000">createWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ServletContext&lt;/span> &lt;span style="color:#000">sc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//加载对应的类
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">contextClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">determineContextClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">sc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">ConfigurableWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isAssignableFrom&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">contextClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//抛异常
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//实例化对象
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurableWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">BeanUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">instantiateClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">contextClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">determineContextClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ServletContext&lt;/span> &lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取 servletContext 中的 contextClass 参数值
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">contextClassName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getInitParameter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">CONTEXT_CLASS_PARAM&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//如果没有设置contextClass值
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">contextClassName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">ClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">forName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">contextClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getDefaultClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ClassNotFoundException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//没有找到抛异常
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//默认加载的是XmlWebApplicationContext--配置在ContextLoader.properties文件中
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">contextClassName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">defaultStrategies&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getProperty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">WebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">ClassUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">forName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">contextClassName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ContextLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ClassNotFoundException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//没有找到抛异常
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过上面的分析看出以及结合之前的 &lt;a href="https://github.com/mxsm/document/blob/master/Spring/Springframework/Spring-web%E5%88%86%E6%9E%90/Spring%20Web%20Context.md">Spring Web Contexts&lt;/a> 的文章讲的如何配置不同的Spirng Context。&lt;/p></description></item><item><title>Spring-Framework: Spring中的Aware接口</title><link>/spring-framework/core-source-analysis/spring-aware-interface/</link><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/spring-aware-interface/</guid><description>
&lt;h4 id="1-applicationcontextaware">1. ApplicationContextAware&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">ApplicationContextAware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ApplicationContext&lt;/span> &lt;span style="color:#000">applicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="2-beannameaware">2. BeanNameAware&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">BeanNameAware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="3-applicationeventpublisheraware">3. ApplicationEventPublisherAware&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">ApplicationEventPublisherAware&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Aware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setApplicationEventPublisher&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ApplicationEventPublisher&lt;/span> &lt;span style="color:#000">applicationEventPublisher&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="4-beanclassloaderaware">4. BeanClassLoaderAware&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">BeanClassLoaderAware&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Aware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setBeanClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ClassLoader&lt;/span> &lt;span style="color:#000">classLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="5-beanfactoryaware">5. BeanFactoryAware&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">BeanFactoryAware&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Aware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="6-bootstrapcontextaware">6. BootstrapContextAware&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">BootstrapContextAware&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Aware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setBootstrapContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BootstrapContext&lt;/span> &lt;span style="color:#000">bootstrapContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="7-loadtimeweaveraware">7. LoadTimeWeaverAware&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">LoadTimeWeaverAware&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Aware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setLoadTimeWeaver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">LoadTimeWeaver&lt;/span> &lt;span style="color:#000">loadTimeWeaver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="8-messagesourceaware">8. MessageSourceAware&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">MessageSourceAware&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Aware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setMessageSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">MessageSource&lt;/span> &lt;span style="color:#000">messageSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="9-notificationpublisheraware">9. NotificationPublisherAware&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">NotificationPublisherAware&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Aware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setNotificationPublisher&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">NotificationPublisher&lt;/span> &lt;span style="color:#000">notificationPublisher&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="10-resourceloaderaware">10. ResourceLoaderAware&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">ResourceLoaderAware&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Aware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setResourceLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ResourceLoader&lt;/span> &lt;span style="color:#000">resourceLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="11-servletconfigaware">11. ServletConfigAware&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">ServletConfigAware&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Aware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setServletConfig&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ServletConfig&lt;/span> &lt;span style="color:#000">servletConfig&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="12-servletcontextaware">12. ServletContextAware&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">ServletContextAware&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">Aware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">setServletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ServletContext&lt;/span> &lt;span style="color:#000">servletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Spring-Framework: DispatcherServlet源码解析</title><link>/spring-framework/web-source-analysis/dispatcherservlet/</link><pubDate>Thu, 09 Aug 2018 00:00:00 +0000</pubDate><guid>/spring-framework/web-source-analysis/dispatcherservlet/</guid><description>
&lt;h3 id="1-dispatcherservlet是什么">1. DispatcherServlet是什么？&lt;/h3>
&lt;p>从本质上是说DispatcherServlet就是一个Servlet规范的实现。也就是一个Servlet！&lt;/p>
&lt;h3 id="2-dispatcherservlet在spring中的继承关系">2. DispatcherServlet在Spring中的继承关系&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">DispatcherServlet&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">FrameworkServlet&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">abstract&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">FrameworkServlet&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">HttpServletBean&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">ApplicationContextAware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">abstract&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">HttpServletBean&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">HttpServlet&lt;/span> &lt;span style="color:#204a87;font-weight:bold">implements&lt;/span> &lt;span style="color:#000">EnvironmentCapable&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">EnvironmentAware&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>从上面的关系可以看出来 &lt;em>HttpServletBean&lt;/em> 继承了Servlet API的 &lt;em>HttpServlet&lt;/em> ，然后 &lt;em>FrameworkServlet&lt;/em> 继承了
&lt;em>HttpServletBean&lt;/em>， 最后 &lt;em>DispatcherServlet&lt;/em> 继承了 &lt;em>FrameworkServlet&lt;/em> 。&lt;/p>
&lt;h3 id="3-源码分析">3. 源码分析&lt;/h3>
&lt;p>由于DispatcherServlet是一个Servlet那么就从Servlet的方法入手。Servlet完成实例化以后首先调用的就是init方法。在GenericServlet类中init()方法实现为空，在HttpServletBean重写&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">init&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">ServletException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Set bean properties from init parameters.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">PropertyValues&lt;/span> &lt;span style="color:#000">pvs&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ServletConfigPropertyValues&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getServletConfig&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">requiredProperties&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">pvs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">BeanWrapper&lt;/span> &lt;span style="color:#000">bw&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">PropertyAccessorFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">forBeanPropertyAccess&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">ResourceLoader&lt;/span> &lt;span style="color:#000">resourceLoader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ServletContextResourceLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getServletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">bw&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerCustomEditor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Resource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ResourceEditor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resourceLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()));&lt;/span>
&lt;span style="color:#000">initBeanWrapper&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bw&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">bw&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setPropertyValues&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">pvs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isErrorEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">error&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Failed to set bean properties on servlet &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">getServletName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 该方法在HttpServletBean类中实现为空--主要由子类进行实现
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">initServletBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>下面看一下initServletBean方法在FrameworkServlet中的实现：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">initServletBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">ServletException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略日志打印
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//初始化webApplicationContext
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">webApplicationContext&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">initWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//初始化initFrameworkServlet-- 默认实现为空
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">initFrameworkServlet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ServletException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">|&lt;/span> &lt;span style="color:#000">RuntimeException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">error&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Context initialization failed&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略日志打印
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>从上面可以看出来主要是初始化webApplicationContext，通过调用initWebApplicationContext()方法。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">WebApplicationContext&lt;/span> &lt;span style="color:#000">initWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取ServletContext中的属性值为WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE对象的值
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//如果有ContextLoaderListner的情况设置的
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">WebApplicationContext&lt;/span> &lt;span style="color:#000">rootContext&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#000">WebApplicationContextUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getServletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">WebApplicationContext&lt;/span> &lt;span style="color:#000">wac&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">webApplicationContext&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// A context instance was injected at construction time -&amp;gt; use it
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">wac&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">webApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">wac&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">ConfigurableWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ConfigurableWebApplicationContext&lt;/span> &lt;span style="color:#000">cwac&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurableWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">wac&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">cwac&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isActive&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cwac&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getParent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">cwac&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setParent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">rootContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//刷新WebApplicationContext
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">configureAndRefreshWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cwac&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">wac&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//根据contextAttribute属性查找WebApplicationContext
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">wac&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">findWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">wac&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 如果上面都没有创建一个
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">wac&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">createWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">rootContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">refreshEventReceived&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">synchronized&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">onRefreshMonitor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//触发onRefresh方法去做一些其他的事情
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">onRefresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">wac&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">publishContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Publish the context as a servlet context attribute.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">attrName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getServletContextAttributeName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">getServletContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">setAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">attrName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">wac&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">wac&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>分析一下createWebApplicationContext(rootContext)方法，configureAndRefreshWebApplicationContext(cwac);在分析一下createWebApplicationContext中也有调用：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">WebApplicationContext&lt;/span> &lt;span style="color:#000">createWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">ApplicationContext&lt;/span> &lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取contextClass,如果没有设置contextClass默认是XmlWebApplicationContext
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">contextClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getContextClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">ConfigurableWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isAssignableFrom&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">contextClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//不是继承关系抛错
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//实例化数据
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ConfigurableWebApplicationContext&lt;/span> &lt;span style="color:#000">wac&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ConfigurableWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">BeanUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">instantiateClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">contextClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">wac&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getEnvironment&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">wac&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setParent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">parent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//contextConfigLocation设置配置文件或者扫描包的路径,根据不同的Context来匹配
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">configLocation&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getContextConfigLocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configLocation&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">wac&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setConfigLocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configLocation&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//配置刷新--调用了Spring core 的refresh方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">configureAndRefreshWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">wac&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">wac&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建完成Spring application context后开始FrameworkServlet#refresh方法这个方法是一个抽象的方法在子类中实现，也就是在DispatcherServlet中实现：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">onRefresh&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ApplicationContext&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">initStrategies&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//初始化一些请求过程中的策略
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">initStrategies&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ApplicationContext&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">initMultipartResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">initLocaleResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">initThemeResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">initHandlerMappings&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">initHandlerAdapters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">initHandlerExceptionResolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">initRequestToViewNameTranslator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">initViewResolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">initFlashMapManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>对于方法initStrategies主要做了这9件事情。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>initMultipartResolver&lt;/p>
&lt;p>初始化MultipartResolver，用于处理文件上传服务，如果有文件上传，那么就会将当前的HttpServletRequest包装成DefaultMultipartHttpServletRequest，并且将每个上传的内容封装成CommonsMultipartFile对象。需要在dispatcherServlet-servlet.xml中配置文件上传解析器。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>initLocaleResolver&lt;/p>
&lt;p>用于处理应用的国际化问题，本地化解析策略。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>initThemeResolver&lt;/p>
&lt;p>用于定义一个主题&lt;/p>
&lt;/li>
&lt;li>
&lt;p>initHandlerMapping&lt;/p>
&lt;p>用于定义请求映射关系&lt;/p>
&lt;/li>
&lt;li>
&lt;p>initHandlerAdapters&lt;/p>
&lt;p>用于根据Handler的类型定义不同的处理规则&lt;/p>
&lt;/li>
&lt;li>
&lt;p>initHandlerExceptionResolvers&lt;/p>
&lt;p>当Handler处理出错后，会通过此将错误日志记录在log文件中，默认实现类是SimpleMappingExceptionResolver&lt;/p>
&lt;/li>
&lt;li>
&lt;p>initRequestToViewNameTranslators&lt;/p>
&lt;p>将指定的ViewName按照定义的RequestToViewNameTranslators替换成想要的格式&lt;/p>
&lt;/li>
&lt;li>
&lt;p>initViewResolvers&lt;/p>
&lt;p>用于将View解析成页面&lt;/p>
&lt;/li>
&lt;li>
&lt;p>initFlashMapManager&lt;/p>
&lt;p>用于生成FlashMap管理器&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="4-service方法的分析">4. service方法的分析&lt;/h3>
&lt;p>&lt;em>service&lt;/em> 方法主要是处理在HTTP请求，在 &lt;em>FrameworkServlet&lt;/em> 中重写了 &lt;em>HttpServlet&lt;/em> 方法中的 &lt;em>service&lt;/em> 方法。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">service&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">HttpServletRequest&lt;/span> &lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">HttpServletResponse&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">ServletException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">HttpMethod&lt;/span> &lt;span style="color:#000">httpMethod&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">HttpMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resolve&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//PATCH方法或者为null的处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">httpMethod&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">HttpMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">PATCH&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#000">httpMethod&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">processRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//调用HttpServlet的方法--处理其他的HTTP方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">super&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">service&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>doGet、doPost、doPut、doDelete、doOptions、doTrace&lt;/em> 方法中共同调用了 &lt;em>processRequest&lt;/em> 方法。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">processRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">HttpServletRequest&lt;/span> &lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">HttpServletResponse&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">ServletException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">long&lt;/span> &lt;span style="color:#000">startTime&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">currentTimeMillis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">failureCause&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">LocaleContext&lt;/span> &lt;span style="color:#000">previousLocaleContext&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">LocaleContextHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getLocaleContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取Locale
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">LocaleContext&lt;/span> &lt;span style="color:#000">localeContext&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">buildLocaleContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">RequestAttributes&lt;/span> &lt;span style="color:#000">previousAttributes&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">RequestContextHolder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getRequestAttributes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取Servlet请求属性
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ServletRequestAttributes&lt;/span> &lt;span style="color:#000">requestAttributes&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">buildRequestAttributes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">previousAttributes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//异步管理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">WebAsyncManager&lt;/span> &lt;span style="color:#000">asyncManager&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">WebAsyncUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAsyncManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">asyncManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerCallableInterceptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">FrameworkServlet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RequestBindingInterceptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">initContextHolders&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">localeContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">requestAttributes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//调用子类的doService
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">doService&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ServletException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">|&lt;/span> &lt;span style="color:#000">IOException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">failureCause&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">failureCause&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">NestedServletException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Request processing failed&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">finally&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//释放Context
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">resetContextHolders&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">previousLocaleContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">previousAttributes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">requestAttributes&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">requestAttributes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">requestCompleted&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">logResult&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">failureCause&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">asyncManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">publishRequestHandledEvent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">startTime&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">failureCause&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过调用DispatcherServlet#doService方法来处理外部发来服务器的HTTP请求，&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">doService&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">HttpServletRequest&lt;/span> &lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">HttpServletResponse&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Exception&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Keep a snapshot of the request attributes in case of an include,
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// to be able to restore the original attributes after the include.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Map&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">attributesSnapshot&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">WebUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isIncludeRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">attributesSnapshot&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">HashMap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#000">Enumeration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">attrNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAttributeNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">while&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">attrNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">hasMoreElements&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">attrName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">attrNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">nextElement&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">cleanupAfterInclude&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#000">attrName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">startsWith&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">DEFAULT_STRATEGIES_PREFIX&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">attributesSnapshot&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">attrName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">attrName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 让框架能够处理和查看WebApplicationContext中的对象
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">WEB_APPLICATION_CONTEXT_ATTRIBUTE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getWebApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">LOCALE_RESOLVER_ATTRIBUTE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">localeResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">THEME_RESOLVER_ATTRIBUTE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">themeResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">THEME_SOURCE_ATTRIBUTE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getThemeSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">flashMapManager&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">FlashMap&lt;/span> &lt;span style="color:#000">inputFlashMap&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">flashMapManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">retrieveAndUpdate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">inputFlashMap&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">INPUT_FLASH_MAP_ATTRIBUTE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Collections&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">unmodifiableMap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">inputFlashMap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">OUTPUT_FLASH_MAP_ATTRIBUTE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">FlashMap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setAttribute&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">FLASH_MAP_MANAGER_ATTRIBUTE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">flashMapManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//最重要的方法：分发请求处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">doDispatch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">finally&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">WebAsyncUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAsyncManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">isConcurrentHandlingStarted&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Restore the original attribute snapshot, in case of an include.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">attributesSnapshot&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">restoreAttributesAfterInclude&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">attributesSnapshot&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>doDispatch方法用来分发请求：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">doDispatch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">HttpServletRequest&lt;/span> &lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">HttpServletResponse&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Exception&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">HttpServletRequest&lt;/span> &lt;span style="color:#000">processedRequest&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">HandlerExecutionChain&lt;/span> &lt;span style="color:#000">mappedHandler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">multipartRequestParsed&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">WebAsyncManager&lt;/span> &lt;span style="color:#000">asyncManager&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">WebAsyncUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAsyncManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ModelAndView&lt;/span> &lt;span style="color:#000">mv&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">Exception&lt;/span> &lt;span style="color:#000">dispatchException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//检查是否为文件上传请求
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">processedRequest&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">checkMultipart&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">multipartRequestParsed&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">processedRequest&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 获取当前请求的处理器.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">mappedHandler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">processedRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mappedHandler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">noHandlerFound&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">processedRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 获取当前请求的处理适配器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">HandlerAdapter&lt;/span> &lt;span style="color:#000">ha&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getHandlerAdapter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mappedHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Process last-modified header, if supported by the handler.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">method&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">isGet&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;GET&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">equals&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">isGet&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;HEAD&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">equals&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">long&lt;/span> &lt;span style="color:#000">lastModified&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">ha&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getLastModified&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mappedHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ServletWebRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">).&lt;/span>&lt;span style="color:#c4a000">checkNotModified&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">lastModified&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">isGet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">mappedHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applyPreHandle&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">processedRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//实际执行的处理器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">mv&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">ha&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">handle&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">processedRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mappedHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">asyncManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isConcurrentHandlingStarted&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//应用默认的视图名称
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">applyDefaultViewName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">processedRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mv&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">mappedHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applyPostHandle&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">processedRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mv&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Exception&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">dispatchException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">err&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// As of 4.3, we&amp;#39;re processing Errors thrown from handler methods as well,
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// making them available for @ExceptionHandler methods and other scenarios.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">dispatchException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">NestedServletException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Handler dispatch failed&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">err&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">processDispatchResult&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">processedRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mappedHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mv&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">dispatchException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Exception&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">triggerAfterCompletion&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">processedRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mappedHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#000">err&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">triggerAfterCompletion&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">processedRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mappedHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">NestedServletException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Handler processing failed&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">err&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">finally&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">asyncManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isConcurrentHandlingStarted&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Instead of postHandle and afterCompletion
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mappedHandler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">mappedHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applyAfterConcurrentHandlingStarted&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">processedRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Clean up any resources used by a multipart request.
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">multipartRequestParsed&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">cleanupMultipart&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">processedRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>getHandler&lt;/em> 获取处理器执行器处理链，然后 &lt;em>getHandlerAdapter&lt;/em> 获取处理器适配器。 &lt;em>applyPreHandle&lt;/em> 执行。从上面的有两个几个重要的方法：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#8f5902;font-style:italic">//获取执行链
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">mappedHandler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">processedRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取执行适配器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">HandlerAdapter&lt;/span> &lt;span style="color:#000">ha&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getHandlerAdapter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mappedHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//调用链执行--前置HandlerInterceptor
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">mappedHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applyPreHandle&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">processedRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//实际处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">mv&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">ha&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">handle&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">processedRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mappedHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//调用链执行--后置HandlerInterceptor
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">mappedHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applyPostHandle&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">processedRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mv&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>接下来一个个来分析上面的方法：&lt;/p>
&lt;p>&lt;em>&lt;strong>&lt;code>mappedHandler = getHandler(processedRequest)&lt;/code>&lt;/strong>&lt;/em> 方法的分析，看一下源代码：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">HandlerExecutionChain&lt;/span> &lt;span style="color:#000">getHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">HttpServletRequest&lt;/span> &lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Exception&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">handlerMappings&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//从handlerMappings获取HandlerMapping的实现
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">HandlerMapping&lt;/span> &lt;span style="color:#000">mapping&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">handlerMappings&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//从HandlerMapping实现中获取处理执行调用链
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">HandlerExecutionChain&lt;/span> &lt;span style="color:#000">handler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">mapping&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">handler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>HandlerMapping默认实现加载有三个：&lt;/p>
&lt;ol>
&lt;li>RequestMappingHandlerMapping&lt;/li>
&lt;li>BeanNameUrlHandlerMapping&lt;/li>
&lt;li>SimpleUrlHandlerMapping&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>默认加载的 &lt;em>&lt;strong>&lt;code>RequestMappingHandlerMapping&lt;/code>&lt;/strong>&lt;/em> ，看一下如何获取 &lt;strong>&lt;code>HandlerExecutionChain&lt;/code>&lt;/strong> 调用链。 调用的方法 &lt;strong>&lt;code>AbstractHandlerMapping#getHandler&lt;/code>&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">HandlerExecutionChain&lt;/span> &lt;span style="color:#000">getHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">HttpServletRequest&lt;/span> &lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Exception&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取内部处理器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">handler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getHandlerInternal&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//如果为空获取默认处理器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">handler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getDefaultHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Bean name or resolved handler?
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handler&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">handlerName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">handler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">handler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">obtainApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handlerName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">HandlerExecutionChain&lt;/span> &lt;span style="color:#000">executionChain&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getHandlerExecutionChain&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省了日志打印
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//跨域的配置
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">CorsUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isCorsRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">CorsConfiguration&lt;/span> &lt;span style="color:#000">globalConfig&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">corsConfigurationSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getCorsConfiguration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">CorsConfiguration&lt;/span> &lt;span style="color:#000">handlerConfig&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getCorsConfiguration&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">CorsConfiguration&lt;/span> &lt;span style="color:#000">config&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">globalConfig&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">?&lt;/span> &lt;span style="color:#000">globalConfig&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">combine&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handlerConfig&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">handlerConfig&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">executionChain&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getCorsHandlerExecutionChain&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">executionChain&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">config&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">executionChain&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后就是获取 &lt;strong>&lt;code>HandlerAdapter ha = getHandlerAdapter(mappedHandler.getHandler())&lt;/code>&lt;/strong> 适配器。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">HandlerAdapter&lt;/span> &lt;span style="color:#000">getHandlerAdapter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">handler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">ServletException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">handlerAdapters&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取处理适配器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">HandlerAdapter&lt;/span> &lt;span style="color:#000">adapter&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">handlerAdapters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">adapter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">supports&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">adapter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ServletException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;No adapter for handler [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">handler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;]: The DispatcherServlet configuration needs to include a HandlerAdapter that supports this handler&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>适配器默认加载的 &lt;strong>&lt;code>RequestMappingHandlerAdapter&lt;/code>&lt;/strong> 适配器。 &lt;strong>&lt;code>mappedHandler.applyPreHandle(processedRequest, response)&lt;/code>&lt;/strong> 处理 &lt;strong>&lt;code>HandlerInterceptor&lt;/code>&lt;/strong> 的 &lt;em>&lt;strong>&lt;code>preHandle&lt;/code>&lt;/strong>&lt;/em> 方法。然后 &lt;strong>&lt;code>mv = ha.handle(processedRequest, response, mappedHandler.getHandler())&lt;/code>&lt;/strong> 调用 &lt;strong>&lt;code>HandlerAdapter&lt;/code>&lt;/strong> 的 &lt;strong>&lt;code>handle&lt;/code>&lt;/strong> 方法。 &lt;strong>&lt;code>mappedHandler.applyPostHandle(processedRequest, response, mv);&lt;/code>&lt;/strong> 接下来执行 &lt;strong>&lt;code>HandlerInterceptor&lt;/code>&lt;/strong> 的 &lt;em>&lt;strong>&lt;code>postHandle&lt;/code>&lt;/strong>&lt;/em>。&lt;/p></description></item><item><title>Spring-Framework: Spring中常用的工具类</title><link>/spring-framework/custom-component/spring-common-utils/</link><pubDate>Fri, 04 May 2018 00:00:00 +0000</pubDate><guid>/spring-framework/custom-component/spring-common-utils/</guid><description>
&lt;h3 id="spring常用的工具类说明">Spring常用的工具类说明&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">工具类名称&lt;/th>
&lt;th style="text-align:center">使用说明&lt;/th>
&lt;th style="text-align:center">例子&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">AnnotationUtils&lt;/td>
&lt;td style="text-align:center">注解相关的工具类&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">ReflectionUtils&lt;/td>
&lt;td style="text-align:center">反射工具类&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Spring-Framework: Spring懒加载源码分析</title><link>/spring-framework/core-source-analysis/spring-lazyload/</link><pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/spring-lazyload/</guid><description>
&lt;h3 id="1-什么是懒加载">1 什么是懒加载&lt;/h3>
&lt;p>Spring中有一个概念叫做懒加载，那么什么是懒加载？&lt;strong>就是在需要用到的时候加载类&lt;/strong>。&lt;/p>
&lt;h3 id="2-spring是如何处理懒加载">2 Spring是如何处理懒加载。&lt;/h3>
&lt;p>对于Spring中的一个bean如何判断是否为懒加载Bean。分为两种情况：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Bean的定义由XML完成&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#204a87;font-weight:bold">&amp;lt;bean&lt;/span> &lt;span style="color:#c4a000">id=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;addressBean&amp;#34;&lt;/span> &lt;span style="color:#c4a000">class=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;com.fh.spring.Address&amp;#34;&lt;/span> &lt;span style="color:#c4a000">lazy-init=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">/&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Bean的定义由注解完成&lt;/strong>&lt;/p>
&lt;p>@Lazy注解，对于类和类的变量值使用了@Lazy注解说明这个是懒加载&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="3-分析lazy的实现源码">3 分析@Lazy的实现源码&lt;/h3>
&lt;p>@Lazy注解主要使用在两个地方：&lt;/p>
&lt;ol>
&lt;li>类上面&amp;ndash;配合@Component注解使用&lt;/li>
&lt;li>类的私有变量上面&amp;ndash;配合@Autowired注解使用&lt;/li>
&lt;/ol>
&lt;h4 id="31-分析lazy在类上">3.1 分析@Lazy在类上&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">
&lt;span style="color:#5c35cc;font-weight:bold">@Component&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Lazy&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">ServiceTest&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//.......省略其他的代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>如上示例代码，@Lazy的位置在ServiceTest上面。在Spring扫描对应的包下面的类，解析未BeanDefinition的时候，对应的BeanDefinition#isLazyInit方法返回为true，说明这个BeanDefinition实现的是懒加载。
那么我看一下在DefaultListableBeanFactory#preInstantiateSingletons方法&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">preInstantiateSingletons&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略了部分代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">beanNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">RootBeanDefinition&lt;/span> &lt;span style="color:#000">bd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getMergedLocalBeanDefinition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//bd.isLazyInit() 如果是true就执行下面的代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">bd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isAbstract&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#000">bd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">bd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isLazyInit&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 省略Spring源码中的代码
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过上面的代码可以知道，在容器启动的时候，加了 &lt;strong>&lt;code>@Lazy&lt;/code>&lt;/strong> 的类不会进行实例化。&lt;/p>
&lt;h4 id="32-分析lazy在类的私有变量上面">3.2 分析@Lazy在类的私有变量上面&lt;/h4>
&lt;p>&lt;strong>@Lazy&lt;/strong> 搭配 &lt;strong>@Autowired&lt;/strong> 使用， &lt;strong>@Autowired&lt;/strong> 的处理类是 &lt;strong>&lt;code>AutowiredAnnotationBeanPostProcessor&lt;/code>&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">AutowiredFieldElement&lt;/span> &lt;span style="color:#204a87;font-weight:bold">extends&lt;/span> &lt;span style="color:#000">InjectionMetadata&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">InjectedElement&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">required&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">volatile&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">cached&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">volatile&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">cachedFieldValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">AutowiredFieldElement&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Field&lt;/span> &lt;span style="color:#000">field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">required&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">super&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">required&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">required&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">inject&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">PropertyValues&lt;/span> &lt;span style="color:#000">pvs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Throwable&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Field&lt;/span> &lt;span style="color:#000">field&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">member&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">value&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">cached&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">value&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">resolvedCachedArgument&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">cachedFieldValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">DependencyDescriptor&lt;/span> &lt;span style="color:#000">desc&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">DependencyDescriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">required&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">desc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setContainingClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">autowiredBeanNames&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">LinkedHashSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">1&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">state&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;No BeanFactory available&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">TypeConverter&lt;/span> &lt;span style="color:#000">typeConverter&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getTypeConverter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//这个方法主要用来处理方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">value&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resolveDependency&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">desc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">autowiredBeanNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">typeConverter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">UnsatisfiedDependencyException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">InjectionPoint&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">),&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">synchronized&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">cached&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">value&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">required&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">cachedFieldValue&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">desc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">registerDependentBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">autowiredBeanNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">autowiredBeanNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">size&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">1&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">autowiredBeanName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">autowiredBeanNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">iterator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">next&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">autowiredBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTypeMatch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">autowiredBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">cachedFieldValue&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ShortcutDependencyDescriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">desc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">autowiredBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">cachedFieldValue&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">cached&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">value&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ReflectionUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">makeAccessible&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">field&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">value&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>看一下value = beanFactory.resolveDependency(desc, beanName, autowiredBeanNames, typeConverter)这段代码：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">resolveDependency&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">DependencyDescriptor&lt;/span> &lt;span style="color:#000">descriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">requestingBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">autowiredBeanNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">TypeConverter&lt;/span> &lt;span style="color:#000">typeConverter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">BeansException&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">descriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">initParameterNameDiscovery&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getParameterNameDiscoverer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Optional&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">descriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getDependencyType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">createOptionalDependency&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">descriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">requestingBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ObjectFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">descriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getDependencyType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span>
&lt;span style="color:#000">ObjectProvider&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">descriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getDependencyType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">DependencyObjectProvider&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">descriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">requestingBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">javaxInjectProviderClass&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">descriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getDependencyType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">Jsr330Factory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">createDependencyProvider&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">descriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">requestingBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理包含有@Lazy注解的
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">result&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getAutowireCandidateResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getLazyResolutionProxyIfNecessary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">descriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">requestingBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">result&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">result&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">doResolveDependency&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">descriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">requestingBeanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">autowiredBeanNames&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">typeConverter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">result&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>DefaultListableBeanFactory 默认为 private AutowireCandidateResolver autowireCandidateResolver = new SimpleAutowireCandidateResolver();对于注解类的在AnnotationConfigUtils进行了设置，AnnotationConfigUtils#registerAnnotationConfigProcessors方法中。if (!(beanFactory.getAutowireCandidateResolver() instanceof ContextAnnotationAutowireCandidateResolver)) { beanFactory.setAutowireCandidateResolver(new ContextAnnotationAutowireCandidateResolver());}进行了设置&lt;/p>
&lt;/blockquote>
&lt;p>分析一下 &lt;strong>&lt;code>ContextAnnotationAutowireCandidateResolver#getLazyResolutionProxyIfNecessary&lt;/code>&lt;/strong> 的方法：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">getLazyResolutionProxyIfNecessary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">DependencyDescriptor&lt;/span> &lt;span style="color:#000">descriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断是否为懒加载
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">isLazy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">descriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">?&lt;/span> &lt;span style="color:#000">buildLazyResolutionProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">descriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>下面来 &lt;strong>&lt;code>buildLazyResolutionProxy&lt;/code>&lt;/strong> 方法，创建代理类：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">buildLazyResolutionProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">DependencyDescriptor&lt;/span> &lt;span style="color:#000">descriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">state&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">instanceof&lt;/span> &lt;span style="color:#000">DefaultListableBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;BeanFactory needs to be a DefaultListableBeanFactory&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">final&lt;/span> &lt;span style="color:#000">DefaultListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">DefaultListableBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">getBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">TargetSource&lt;/span> &lt;span style="color:#000">ts&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">TargetSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">getTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">descriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getDependencyType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">boolean&lt;/span> &lt;span style="color:#000">isStatic&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">getTarget&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">target&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">doResolveDependency&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">descriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">beanName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">target&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">type&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getTargetClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Map&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">type&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">Collections&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">emptyMap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">type&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">Collections&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">emptyList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">type&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#000">Collection&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">type&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">Collections&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">emptySet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">NoSuchBeanDefinitionException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">descriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getResolvableType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Optional dependency not present for lazy injection point&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">releaseTarget&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">target&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">};&lt;/span>
&lt;span style="color:#000">ProxyFactory&lt;/span> &lt;span style="color:#000">pf&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ProxyFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">pf&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setTargetSource&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ts&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">dependencyType&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">descriptor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getDependencyType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dependencyType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isInterface&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">pf&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addInterface&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dependencyType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">pf&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanClassLoader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Spring-Framework: RequestMappingHandlerAdapter源码分析</title><link>/spring-framework/web-source-analysis/requestmappinghandleradapter/</link><pubDate>Mon, 09 Apr 2018 00:00:00 +0000</pubDate><guid>/spring-framework/web-source-analysis/requestmappinghandleradapter/</guid><description>
&lt;h3 id="1-requestmappinghandleradapter初始化">1. RequestMappingHandlerAdapter初始化&lt;/h3>
&lt;p>首先看一下构造函数&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">RequestMappingHandlerAdapter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">messageConverters&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;(&lt;/span>&lt;span style="color:#000">4&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">messageConverters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ByteArrayHttpMessageConverter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">messageConverters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">StringHttpMessageConverter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">messageConverters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">SourceHttpMessageConverter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Error&lt;/span> &lt;span style="color:#000">err&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Ignore when no TransformerFactory implementation is available
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">messageConverters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AllEncompassingFormHttpMessageConverter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>构造函数主要初始化了四个 &lt;em>&lt;strong>HttpMessageConverter&lt;/strong>&lt;/em> 。由于实现了 &lt;em>&lt;strong>InitializingBean&lt;/strong>&lt;/em> 接口下面来看 &lt;em>&lt;strong>afterPropertiesSet&lt;/strong>&lt;/em> 方法中的实现。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">afterPropertiesSet&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 处理ControllerAdvice注解
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">initControllerAdviceCache&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//参数解析器初始化
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">argumentResolvers&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">HandlerMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">resolvers&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getDefaultArgumentResolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">argumentResolvers&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">HandlerMethodArgumentResolverComposite&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">addResolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//初始化绑定参数解析器--跟Servlet相关的InitBinder注解
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">initBinderArgumentResolvers&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">HandlerMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">resolvers&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getDefaultInitBinderArgumentResolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">initBinderArgumentResolvers&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">HandlerMethodArgumentResolverComposite&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">addResolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//返回值参数解析
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">returnValueHandlers&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">HandlerMethodReturnValueHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">handlers&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getDefaultReturnValueHandlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">returnValueHandlers&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">HandlerMethodReturnValueHandlerComposite&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">addHandlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>&lt;strong>initControllerAdviceCache&lt;/strong>&lt;/em> 方法主要用来处理包含 &lt;em>&lt;strong>@ControllerAdvice&lt;/strong>&lt;/em> 注解(@ControllerAdvice或者@RestControllerAdvice)&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">initControllerAdviceCache&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取带有@ControllerAdvice注解的bean
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">ControllerAdviceBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">adviceBeans&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">ControllerAdviceBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">findAnnotatedBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getApplicationContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">requestResponseBodyAdviceBeans&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ControllerAdviceBean&lt;/span> &lt;span style="color:#000">adviceBean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">adviceBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#000">beanType&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">adviceBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBeanType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanType&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">IllegalStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Unresolvable type for ControllerAdviceBean: &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">adviceBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">attrMethods&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">MethodIntrospector&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">selectMethods&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">MODEL_ATTRIBUTE_METHODS&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">attrMethods&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">modelAttributeAdviceCache&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">adviceBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">attrMethods&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">Set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">binderMethods&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">MethodIntrospector&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">selectMethods&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">INIT_BINDER_METHODS&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">binderMethods&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">initBinderAdviceCache&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">put&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">adviceBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">binderMethods&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//RequestBodyAdvice接口和ResponseBodyAdvice接口
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RequestBodyAdvice&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isAssignableFrom&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#000">ResponseBodyAdvice&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isAssignableFrom&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">requestResponseBodyAdviceBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">adviceBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">requestResponseBodyAdviceBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">requestResponseBodyAdvice&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAll&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">0&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">requestResponseBodyAdviceBeans&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略日志打印
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>&lt;strong>getDefaultArgumentResolvers&lt;/strong>&lt;/em> 方法获取方法参数解析器，这些主要用来处理Controller的方法的解析，构造 &lt;em>&lt;strong>HandlerMethodArgumentResolverComposite&lt;/strong>&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">HandlerMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">getDefaultArgumentResolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">HandlerMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">resolvers&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 处理RequestParam注解
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RequestParamMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理RequestParam注解参数为Map
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RequestParamMapMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理PathVariable注解
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">PathVariableMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理PathVariable注解 参数为Map
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">PathVariableMapMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理MatrixVariable注解
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">MatrixVariableMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理MatrixVariable注解 参数为Map
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">MatrixVariableMapMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ServletModelAttributeMethodProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RequestResponseBodyMethodProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getMessageConverters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">requestResponseBodyAdvice&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RequestPartMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getMessageConverters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">requestResponseBodyAdvice&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RequestHeaderMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()));&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RequestHeaderMapMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ServletCookieValueMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()));&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ExpressionValueMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()));&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">SessionAttributeMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RequestAttributeMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 基本类型解决
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ServletRequestMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ServletResponseMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">HttpEntityMethodProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getMessageConverters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">requestResponseBodyAdvice&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RedirectAttributesMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ModelMethodProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">MapMethodProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ErrorsMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">SessionStatusMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">UriComponentsBuilderMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 自定义解决器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getCustomArgumentResolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAll&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getCustomArgumentResolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 设置默认解决器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RequestParamMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ServletModelAttributeMethodProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>&lt;strong>getDefaultInitBinderArgumentResolvers&lt;/strong>&lt;/em> 绑定的是 &lt;strong>@&lt;em>InitBinder&lt;/em>&lt;/strong> 处理。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">HandlerMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">getDefaultInitBinderArgumentResolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">HandlerMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">resolvers&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 基本注解的参数的解决
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RequestParamMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RequestParamMapMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">PathVariableMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">PathVariableMapMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">MatrixVariableMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">MatrixVariableMapMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ExpressionValueMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()));&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">SessionAttributeMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RequestAttributeMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 基本类型的参数解决
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ServletRequestMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ServletResponseMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Custom arguments
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getCustomArgumentResolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAll&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getCustomArgumentResolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Catch-all
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RequestParamMethodArgumentResolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>&lt;strong>getDefaultReturnValueHandlers&lt;/strong>&lt;/em> 返回值的处理。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">HandlerMethodReturnValueHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">getDefaultReturnValueHandlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">List&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">HandlerMethodReturnValueHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">handlers&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ArrayList&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 单一的返回值类型
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">handlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ModelAndViewMethodReturnValueHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">handlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ModelMethodProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">handlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ViewMethodReturnValueHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">handlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ResponseBodyEmitterReturnValueHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getMessageConverters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">reactiveAdapterRegistry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">taskExecutor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contentNegotiationManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">handlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">StreamingResponseBodyReturnValueHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">handlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">HttpEntityMethodProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getMessageConverters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contentNegotiationManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">requestResponseBodyAdvice&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">handlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">HttpHeadersReturnValueHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">handlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">CallableMethodReturnValueHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">handlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">DeferredResultMethodReturnValueHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">handlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">AsyncTaskMethodReturnValueHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 基本注解类型返回值
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">handlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ModelAttributeMethodProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//这个需要重点关注一下--ResponseBody注解
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">handlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">RequestResponseBodyMethodProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getMessageConverters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(),&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">contentNegotiationManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">requestResponseBodyAdvice&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 多值返回值类型
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">handlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ViewNameMethodReturnValueHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#000">handlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">MapMethodProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 自定义返回值
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getCustomReturnValueHandlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">handlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAll&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getCustomReturnValueHandlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Catch-all
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">CollectionUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getModelAndViewResolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">handlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ModelAndViewResolverMethodReturnValueHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getModelAndViewResolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">handlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ModelAttributeMethodProcessor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">handlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>&lt;strong>invokeHandlerMethod&lt;/strong>&lt;/em> 处理请求的数据&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">ModelAndView&lt;/span> &lt;span style="color:#000">invokeHandlerMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">HttpServletRequest&lt;/span> &lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">HttpServletResponse&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">HandlerMethod&lt;/span> &lt;span style="color:#000">handlerMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Exception&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ServletWebRequest&lt;/span> &lt;span style="color:#000">webRequest&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ServletWebRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">WebDataBinderFactory&lt;/span> &lt;span style="color:#000">binderFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getDataBinderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handlerMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">ModelFactory&lt;/span> &lt;span style="color:#000">modelFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getModelFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handlerMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">binderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//通过ServletInvocableHandlerMethod来执行
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">ServletInvocableHandlerMethod&lt;/span> &lt;span style="color:#000">invocableMethod&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">createInvocableHandlerMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handlerMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置Controller方法的处理器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">argumentResolvers&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">invocableMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setHandlerMethodArgumentResolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">argumentResolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//设置Controller返回值处理器
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">returnValueHandlers&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">invocableMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setHandlerMethodReturnValueHandlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">returnValueHandlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">invocableMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setDataBinderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">binderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">invocableMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setParameterNameDiscoverer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">parameterNameDiscoverer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">ModelAndViewContainer&lt;/span> &lt;span style="color:#000">mavContainer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">ModelAndViewContainer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">mavContainer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">addAllAttributes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">RequestContextUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getInputFlashMap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#000">modelFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">initModel&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">webRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mavContainer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">invocableMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">mavContainer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setIgnoreDefaultModelOnRedirect&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">ignoreDefaultModelOnRedirect&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">AsyncWebRequest&lt;/span> &lt;span style="color:#000">asyncWebRequest&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">WebAsyncUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">createAsyncWebRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">asyncWebRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setTimeout&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">asyncRequestTimeout&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">WebAsyncManager&lt;/span> &lt;span style="color:#000">asyncManager&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">WebAsyncUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getAsyncManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">asyncManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setTaskExecutor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">taskExecutor&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">asyncManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setAsyncWebRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">asyncWebRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">asyncManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerCallableInterceptors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">callableInterceptors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">asyncManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerDeferredResultInterceptors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">deferredResultInterceptors&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">asyncManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">hasConcurrentResult&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">result&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">asyncManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getConcurrentResult&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">mavContainer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ModelAndViewContainer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">asyncManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getConcurrentResultContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()[&lt;/span>&lt;span style="color:#000">0&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">];&lt;/span>
&lt;span style="color:#000">asyncManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">clearConcurrentResult&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">LogFormatUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">traceDebug&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">traceOn&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&amp;gt;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">formatted&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">LogFormatUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">formatValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">result&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000">traceOn&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Resume with async result [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">formatted&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;]&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">});&lt;/span>
&lt;span style="color:#000">invocableMethod&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">invocableMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">wrapConcurrentResult&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">result&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理数据
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">invocableMethod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">invokeAndHandle&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">webRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mavContainer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">asyncManager&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isConcurrentHandlingStarted&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">getModelAndView&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mavContainer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">modelFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">webRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">finally&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">webRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">requestCompleted&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>最后的处理主要通过 &lt;em>&lt;strong>ServletInvocableHandlerMethod&lt;/strong>&lt;/em> 来处理。下面来分析一下方法 &lt;em>&lt;strong>invokeAndHandle&lt;/strong>&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">invokeAndHandle&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ServletWebRequest&lt;/span> &lt;span style="color:#000">webRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ModelAndViewContainer&lt;/span> &lt;span style="color:#000">mavContainer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span> &lt;span style="color:#000">providedArgs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Exception&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//执行Controller方法返回值
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">returnValue&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">invokeForRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">webRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mavContainer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">providedArgs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">setResponseStatus&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">webRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">returnValue&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">isRequestNotModified&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">webRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#000">getResponseStatus&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span> &lt;span style="color:#000">mavContainer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isRequestHandled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">disableContentCachingIfNecessary&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">webRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">mavContainer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setRequestHandled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">StringUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">hasText&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">getResponseStatusReason&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">mavContainer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setRequestHandled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">mavContainer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setRequestHandled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Assert&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">state&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">returnValueHandlers&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;No return value handlers&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理返回值
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">returnValueHandlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">handleReturnValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">returnValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getReturnValueType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">returnValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">),&lt;/span> &lt;span style="color:#000">mavContainer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">webRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Exception&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略日志打印
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>&lt;strong>InvocableHandlerMethod#invokeForRequest&lt;/strong>&lt;/em> 处理请求方法：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">invokeForRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">NativeWebRequest&lt;/span> &lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">ModelAndViewContainer&lt;/span> &lt;span style="color:#000">mavContainer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span> &lt;span style="color:#000">providedArgs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Exception&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理Controller方法的参数数据值
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">args&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getMethodArgumentValues&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mavContainer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">providedArgs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//打印日志省略
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">doInvoke&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">getMethodArgumentValues&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">NativeWebRequest&lt;/span> &lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">ModelAndViewContainer&lt;/span> &lt;span style="color:#000">mavContainer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span> &lt;span style="color:#000">providedArgs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Exception&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//获取方法的参数
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">MethodParameter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">parameters&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getMethodParameters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ObjectUtils&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isEmpty&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">parameters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">EMPTY_ARGS&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">args&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">Object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#000">parameters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">length&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">];&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">i&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">0&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span> &lt;span style="color:#000">i&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span> &lt;span style="color:#000">parameters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">length&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span> &lt;span style="color:#000">i&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">++)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">MethodParameter&lt;/span> &lt;span style="color:#000">parameter&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">parameters&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#000">i&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">];&lt;/span>
&lt;span style="color:#000">parameter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">initParameterNameDiscovery&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">parameterNameDiscoverer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#000">i&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">findProvidedArgument&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">parameter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">providedArgs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#000">i&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">continue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//判断参数是否支持--HandlerMethodArgumentResolver接口
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(!&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">supportsParameter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">parameter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">IllegalStateException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">formatArgumentError&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">parameter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;No suitable resolver&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//执行HandlerMethodArgumentResolver#resolveArgument方法将request中的请求的参数设置到Controller的方法
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//设置到参数上--这里可以自定义
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#000">i&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resolvers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">resolveArgument&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">parameter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mavContainer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">request&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">dataBinderFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Exception&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//省略日志打印
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">args&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>返回值处理&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">returnValueHandlers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">handleReturnValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">returnValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">getReturnValueType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">returnValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">),&lt;/span> &lt;span style="color:#000">mavContainer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">webRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>返回值处理调用的是复合类 &lt;em>&lt;strong>HandlerMethodReturnValueHandlerComposite#handleReturnValue&lt;/strong>&lt;/em> 这个方法。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#5c35cc;font-weight:bold">@Override&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">handleReturnValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#5c35cc;font-weight:bold">@Nullable&lt;/span> &lt;span style="color:#000">Object&lt;/span> &lt;span style="color:#000">returnValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">MethodParameter&lt;/span> &lt;span style="color:#000">returnType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">ModelAndViewContainer&lt;/span> &lt;span style="color:#000">mavContainer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">NativeWebRequest&lt;/span> &lt;span style="color:#000">webRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">throws&lt;/span> &lt;span style="color:#000">Exception&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//选取对应的HandlerMethodReturnValueHandler的实现来处理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">HandlerMethodReturnValueHandler&lt;/span> &lt;span style="color:#000">handler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">selectHandler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">returnValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">returnType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">handler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">IllegalArgumentException&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Unknown return value type: &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">returnType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getParameterType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">());&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">//处理返回值
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">handler&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">handleReturnValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">returnValue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">returnType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mavContainer&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">webRequest&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Spring-Framework: Spring Event源码解析</title><link>/spring-framework/core-source-analysis/spring-event/</link><pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate><guid>/spring-framework/core-source-analysis/spring-event/</guid><description>
&lt;h3 id="1-spring事件机制">1. Spring事件机制&lt;/h3>
&lt;p>事件驱动模型通常也被理解成观察者模式或者发布/订阅模型&lt;/p>
&lt;h4 id="11-基本概念">1.1 基本概念&lt;/h4>
&lt;p>Spring的事件驱动模型主要由三部分组成:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>事件&lt;/strong>&lt;/p>
&lt;p>ApplicationEvent，继承自JDK的EventObject，所有事件将继承它，并通过source得到事件源&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>事件发布者&lt;/strong>&lt;/p>
&lt;p>ApplicationEventPublisher(发布)及ApplicationEventMulticaster(广播)接口，使用这个接口，我们的Service就拥有了发布事件的能力。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>事件订阅者&lt;/strong>&lt;/p>
&lt;p>ApplicationListener，继承自JDK的EventListener，所有监听器将继承它&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="2-spring源码分析事件驱动过程">2. Spring源码分析事件驱动过程&lt;/h3>
&lt;p>在 &lt;strong>&lt;code>AbstractApplicationContext#refresh&lt;/code>&lt;/strong> 方法中有一个 &lt;strong>&lt;code>initApplicationEventMulticaster&lt;/code>&lt;/strong> 方法来初始化事件的多通道。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#204a87;font-weight:bold">protected&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">initApplicationEventMulticaster&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">ConfigurableListableBeanFactory&lt;/span> &lt;span style="color:#000">beanFactory&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">getBeanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">containsLocalBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">APPLICATION_EVENT_MULTICASTER_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applicationEventMulticaster&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getBean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">APPLICATION_EVENT_MULTICASTER_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ApplicationEventMulticaster&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTraceEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">trace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Using ApplicationEventMulticaster [&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applicationEventMulticaster&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;]&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applicationEventMulticaster&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">SimpleApplicationEventMulticaster&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerSingleton&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">APPLICATION_EVENT_MULTICASTER_BEAN_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applicationEventMulticaster&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">isTraceEnabled&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">())&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">trace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;No &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">APPLICATION_EVENT_MULTICASTER_BEAN_NAME&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#39; bean, using &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;[&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">applicationEventMulticaster&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">getClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">().&lt;/span>&lt;span style="color:#c4a000">getSimpleName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;]&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过上面的代码可以看出来， &lt;strong>&lt;code>ApplicationEventMulticaster&lt;/code>&lt;/strong> 接口在Spring中的一个实现就是 &lt;strong>&lt;code>SimpleApplicationEventMulticaster&lt;/code>&lt;/strong> 。&lt;/p>
&lt;p>通过 &lt;strong>&lt;code>ApplicationContextAwareProcessor&lt;/code>&lt;/strong> 来处理 &lt;strong>&lt;code>ApplicationEventPublisherAware&lt;/code>&lt;/strong> 事件发表。在 &lt;strong>&lt;code>AbstractApplicationContext#prepareBeanFactory&lt;/code>&lt;/strong> 方法中有这样一段代码：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#000">beanFactory&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">registerResolvableDependency&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ApplicationEventPublisher&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">class&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">this&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>把 &lt;strong>&lt;code>ApplicationContext&lt;/code>&lt;/strong> 作为 &lt;strong>&lt;code>ApplicationEventPublisher&lt;/code>&lt;/strong> ，因为 &lt;strong>&lt;code>ApplicationContext&lt;/code>&lt;/strong> 的实现类同样也实现了 &lt;strong>&lt;code>ApplicationEventPublisher&lt;/code>&lt;/strong> 接口。&lt;/p></description></item></channel></rss>