"use strict";(self.webpackChunkmxsm_website=self.webpackChunkmxsm_website||[]).push([[73275],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var o=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,l=function(e,t){if(null==e)return{};var n,o,l={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=s(n),k=l,m=d["".concat(c,".").concat(k)]||d[k]||u[k]||r;return n?o.createElement(m,i(i({ref:t},p),{},{components:n})):o.createElement(m,i({ref:t},p))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:l,i[1]=a;for(var s=2;s<r;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},13894:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var o=n(87462),l=(n(67294),n(3905));const r={sidebar_label:"config set"},i="ionic config set",a={unversionedId:"cli/commands/config-set",id:"version-v5/cli/commands/config-set",isDocsHomePage:!1,title:"ionic config set",description:"Set config values",source:"@site/versioned_docs/version-v5/cli/commands/config-set.md",sourceDirName:"cli/commands",slug:"/cli/commands/config-set",permalink:"/docs/v5/cli/commands/config-set",editUrl:"https://github.com/ionic-team/ionic-cli/edit/develop/packages/@ionic/cli/src/commands/config/set.ts",tags:[],version:"v5",frontMatter:{sidebar_label:"config set"},sidebar:"version-v5/cli",previous:{title:"config get",permalink:"/docs/v5/cli/commands/config-get"},next:{title:"config unset",permalink:"/docs/v5/cli/commands/config-unset"}},c=[{value:"Examples",id:"examples",children:[],level:2},{value:"Inputs",id:"inputs",children:[],level:2},{value:"Options",id:"options",children:[],level:2},{value:"Advanced Options",id:"advanced-options",children:[],level:2}],s={toc:c};function p(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"ionic-config-set"},"ionic config set"),(0,l.kt)("p",null,"Set config values"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"ionic config set [options]\n")),(0,l.kt)("p",null,"This command writes configuration values to the project's ",(0,l.kt)("strong",{parentName:"p"},"./ionic.config.json")," file. It can also operate on the global CLI configuration (",(0,l.kt)("strong",{parentName:"p"},"~/.ionic/config.json"),") using the ",(0,l.kt)("inlineCode",{parentName:"p"},"--global")," option."),(0,l.kt)("p",null,"For nested properties, separate nest levels with dots. For example, the property name ",(0,l.kt)("inlineCode",{parentName:"p"},"integrations.cordova")," will look in the ",(0,l.kt)("strong",{parentName:"p"},"integrations")," object for the ",(0,l.kt)("strong",{parentName:"p"},"cordova")," property."),(0,l.kt)("p",null,"For multi-app projects, this command is scoped to the current project by default. To operate at the root of the project configuration file instead, use the ",(0,l.kt)("inlineCode",{parentName:"p"},"--root")," option."),(0,l.kt)("p",null,"This command will attempt to coerce ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," into a suitable JSON type. If it is JSON-parsable, such as ",(0,l.kt)("inlineCode",{parentName:"p"},"123"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"[]"),", etc., then it takes the parsed result. Otherwise, the value is interpreted as a string. For stricter input, use ",(0,l.kt)("inlineCode",{parentName:"p"},"--json"),", which will error with non-JSON values."),(0,l.kt)("p",null,"By default, if ",(0,l.kt)("inlineCode",{parentName:"p"},"property")," exists and is an object or an array, the value is not overwritten. To disable this check and always overwrite the property, use ",(0,l.kt)("inlineCode",{parentName:"p"},"--force"),"."),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'$ ionic config set name newAppName\n$ ionic config set name "\\"newAppName\\"" --json\n$ ionic config set -g interactive false\n')),(0,l.kt)("h2",{id:"inputs"},"Inputs"),(0,l.kt)("table",{className:"reference-table"},(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",{colSpan:"2"},(0,l.kt)("h3",null,"property")))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("th",null,"Description"),(0,l.kt)("td",null,(0,l.kt)("p",null,"The property name you wish to set")))),(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",{colSpan:"2"},(0,l.kt)("h3",null,"value")))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("th",null,"Description"),(0,l.kt)("td",null,(0,l.kt)("p",null,"The new value of the given property"))))),(0,l.kt)("h2",{id:"options"},"Options"),(0,l.kt)("table",{className:"reference-table"},(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",{colSpan:"2"},(0,l.kt)("h3",null,(0,l.kt)("a",{href:"#option-global",id:"option-global"},"--global"))))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("th",null,"Description"),(0,l.kt)("td",null,(0,l.kt)("p",null,"Use global CLI config"))),(0,l.kt)("tr",null,(0,l.kt)("th",null,"Aliases"),(0,l.kt)("td",null,(0,l.kt)("code",null,"-g"))))),(0,l.kt)("h2",{id:"advanced-options"},"Advanced Options"),(0,l.kt)("table",{className:"reference-table"},(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",{colSpan:"2"},(0,l.kt)("h3",null,(0,l.kt)("a",{href:"#option-json",id:"option-json"},"--json"))))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("th",null,"Description"),(0,l.kt)("td",null,(0,l.kt)("div",null,(0,l.kt)("p",null,"Always interpret ",(0,l.kt)("code",null,"value")," as JSON"))))),(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",{colSpan:"2"},(0,l.kt)("h3",null,(0,l.kt)("a",{href:"#option-force",id:"option-force"},"--force"))))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("th",null,"Description"),(0,l.kt)("td",null,(0,l.kt)("div",null,(0,l.kt)("p",null,"Always overwrite existing values"))))),(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",{colSpan:"2"},(0,l.kt)("h3",null,(0,l.kt)("a",{href:"#option-root",id:"option-root"},"--root"))))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("th",null,"Description"),(0,l.kt)("td",null,(0,l.kt)("div",null,(0,l.kt)("p",null,"Operate on root of ",(0,l.kt)("strong",null,"./ionic.config.json"))))))))}p.isMDXComponent=!0}}]);