"use strict";(self.webpackChunkmxsm_website=self.webpackChunkmxsm_website||[]).push([[2758],{3905:(e,t,n)=>{n.d(t,{Zo:()=>g,kt:()=>d});var s=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,s,r=function(e,t){if(null==e)return{};var n,s,r={},a=Object.keys(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=s.createContext({}),u=function(e){var t=s.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},g=function(e){var t=u(e.components);return s.createElement(i.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},c=s.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),m=u(n),c=r,d=m["".concat(i,".").concat(c)]||m[c]||p[c]||a;return n?s.createElement(d,o(o({ref:t},g),{},{components:n})):s.createElement(d,o({ref:t},g))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=c;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var u=2;u<a;u++)o[u]=n[u];return s.createElement.apply(null,o)}return s.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7914:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var s=n(7462),r=(n(7294),n(3905));const a={title:"RocketMQ\u6e90\u7801\u89e3\u6790-Broker\u6d88\u606f\u5b58\u50a8CommitLog",date:new Date("2020-03-21T00:00:00.000Z"),weight:202106012234},o=void 0,l={unversionedId:"rocketmq/rocketmq4/broker/RocketMQ-analysis-Broker-CommitLog",id:"rocketmq/rocketmq4/broker/RocketMQ-analysis-Broker-CommitLog",title:"RocketMQ\u6e90\u7801\u89e3\u6790-Broker\u6d88\u606f\u5b58\u50a8CommitLog",description:"\u4ee5\u4e0b\u6e90\u7801\u57fa\u4e8eRocket MQ 4.8.0",source:"@site/docs/rocketmq/rocketmq4/broker/RocketMQ-analysis-Broker-CommitLog.md",sourceDirName:"rocketmq/rocketmq4/broker",slug:"/rocketmq/rocketmq4/broker/RocketMQ-analysis-Broker-CommitLog",permalink:"/docs/rocketmq/rocketmq4/broker/RocketMQ-analysis-Broker-CommitLog",draft:!1,editUrl:"https://github.com/mxsm/mxsm-website/edit/develop/docs/rocketmq/rocketmq4/broker/RocketMQ-analysis-Broker-CommitLog.md",tags:[],version:"current",lastUpdatedBy:"mxsm",lastUpdatedAt:1678527676,formattedLastUpdatedAt:"Mar 11, 2023",frontMatter:{title:"RocketMQ\u6e90\u7801\u89e3\u6790-Broker\u6d88\u606f\u5b58\u50a8CommitLog",date:"2020-03-21T00:00:00.000Z",weight:202106012234},sidebar:"rocketmq4",previous:{title:"RocketMQ\u6e90\u7801\u89e3\u6790-NameServer\u5bf9Broker\u7684\u7ba1\u7406",permalink:"/docs/rocketmq/rocketmq4/nameserver/RocketMQ-analysis-broker-manage"},next:{title:"RocketMQ\u6e90\u7801\u89e3\u6790-Broker\u6d88\u606f\u5b58\u50a8ConsumeQueue",permalink:"/docs/rocketmq/rocketmq4/broker/RocketMQ-analysis-Broker-ConsumeQueue"}},i={},u=[{value:"1. CommitLog\u683c\u5f0f",id:"1-commitlog\u683c\u5f0f",level:3},{value:"2. \u9a8c\u8bc1\u73af\u5883\u7684\u51c6\u5907",id:"2-\u9a8c\u8bc1\u73af\u5883\u7684\u51c6\u5907",level:3},{value:"3. CommitLog\u6301\u4e45\u5316\u8fc7\u7a0b",id:"3-commitlog\u6301\u4e45\u5316\u8fc7\u7a0b",level:3},{value:"4. CommitLog\u6301\u4e45\u5316\u8fc7\u7a0b\u4e2d\u7684\u91cd\u8981\u7c7b",id:"4-commitlog\u6301\u4e45\u5316\u8fc7\u7a0b\u4e2d\u7684\u91cd\u8981\u7c7b",level:3},{value:"4.1 CommitLog",id:"41-commitlog",level:4},{value:"4.2 MappedFileQueue",id:"42-mappedfilequeue",level:4},{value:"4.3 MappedFile",id:"43-mappedfile",level:4},{value:"5. CommitLog\u6570\u636e\u8bfb\u53d6\u9a8c\u8bc1",id:"5-commitlog\u6570\u636e\u8bfb\u53d6\u9a8c\u8bc1",level:3}],g={toc:u},m="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,s.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u4ee5\u4e0b\u6e90\u7801\u57fa\u4e8eRocket MQ 4.8.0")),(0,r.kt)("h3",{id:"1-commitlog\u683c\u5f0f"},"1. CommitLog\u683c\u5f0f"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://github.com/mxsm/document/blob/master/image/MQ/RocketMQ/CommitLog%E8%AE%B0%E5%BD%95%E6%A0%BC%E5%BC%8F.png?raw=true",alt:null})),(0,r.kt)("h3",{id:"2-\u9a8c\u8bc1\u73af\u5883\u7684\u51c6\u5907"},"2. \u9a8c\u8bc1\u73af\u5883\u7684\u51c6\u5907"),(0,r.kt)("p",null,"\u4e0b\u8f7dRocketMQ\u4ee3\u7801\uff0c\u7136\u540e\u9009\u62e9\u5bf9\u5e94\u7684\u7248\u672c(4.8.0\u7248\u672c)\uff0c\u5bfc\u5165\u5f00\u53d1\u5de5\u5177\u8bbe\u7f6e\u5bf9\u5e94\u7684\u542f\u52a8\u53c2\u6570\u5982\u4e0b\u56fe"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://github.com/mxsm/picture/blob/main/rocketmq/broker%E5%90%AF%E5%8A%A8debug%E6%95%B0%E6%8D%AE.png?raw=true",alt:null})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u8fd9\u91cc\u7684NameServer\u90e8\u7f72\u5728\u81ea\u5df1\u672c\u5730\u7684\u865a\u62df\u673a")),(0,r.kt)("p",null,"\u7136\u540e\u5c31\u662f\u672c\u5730 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"ROCKETMQ_HOME"))," \u5730\u5740\uff1a"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://github.com/mxsm/picture/blob/main/rocketmq/RocketMQhome.png?raw=true",alt:null})),(0,r.kt)("p",null,"\u8fd9\u91cc\u914d\u7f6e\u5c31\u7528\u4ece\u5b98\u7f51\u4e0b\u8f7d\u7684\u542f\u52a8\u6587\u4ef6\u5939\u91cc\u9762\u7684\u5bf9\u5e94\u7684\u5c31\u53ef\u4ee5\u3002\u6700\u540e\u5c31\u662f\u7528\u6765\u9a8c\u8bc1\u7684RocketMQ\u6d88\u606f\u751f\u4ea7\u8005\u7684\u4ee3\u7801(\u540c\u6837\u4ee3\u7801\u6765\u81ea\u5b98\u7f51)\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public class MQProducer {\n    //\u4ee3\u7801\u6765\u6e90\u5730\u5740\uff1a https://rocketmq.apache.org/docs/simple-example/\n    public static void main(String[] args) throws Exception {\n        /* Instantiate with a producer group name. */\n        DefaultMQProducer producer = new\n            DefaultMQProducer("please_rename_unique_group_name");\n        // Specify name server addresses.\n        producer.setNamesrvAddr("192.168.31.49:9876");\n        //Launch the instance.\n        producer.start();\n        for (int i = 0; i < 1; i++) {\n            //Create a message instance, specifying topic, tag and message body.\n            Message msg = new Message("TopicTest" /* Topic */,\n                "TagB" /* Tag */,\n                ("Hello RocketMQ " +\n                    System.nanoTime()).getBytes(RemotingHelper.DEFAULT_CHARSET) /* Message body */\n            );\n            //Call send message to deliver message to one of brokers.\n            SendResult sendResult = producer.send(msg);\n            System.out.printf("%s%n", sendResult);\n        }\n        //Shut down once the producer instance is not longer in use.\n        producer.shutdown();\n    }\n\n}\n')),(0,r.kt)("h3",{id:"3-commitlog\u6301\u4e45\u5316\u8fc7\u7a0b"},"3. CommitLog\u6301\u4e45\u5316\u8fc7\u7a0b"),(0,r.kt)("p",null,"\u8fd9\u91cc\u6211\u4eec\u901a\u8fc7\u5206\u6790\u6e90\u7801\u540c\u65f6\u901a\u8fc7\u4f8b\u5b50\u7ed3\u5408Debug\u6765\u9a8c\u8bc1\u5206\u6790\u4e2d\u7684\u731c\u60f3\u770b\u4e00\u4e0b\u4ece\u751f\u4ea7\u8005\u628a\u6570\u636e\u63d0\u4ea4\u5230Broker\u7136\u540e\u5982\u4f55\u5199\u5165\u5230\u78c1\u76d8\u4e0a\u7684CommitLog\u6587\u4ef6\u4e2d\u7684\u3002"),(0,r.kt)("p",null,"\u9996\u5148Broker\u6a21\u5757\u4e2dBrokerStartup\u7c7b\u4f5c\u4e3a\u4e3b\u542f\u52a8\u7c7b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public static void main(String[] args) {\n    start(createBrokerController(args));\n}\n")),(0,r.kt)("p",null,"\u901a\u8fc7\u8c03\u7528 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"createBrokerController"))," \u65b9\u6cd5\u6765\u521b\u5efaBrokerController\u3002\u5728 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"createBrokerController"))," \u65b9\u6cd5\u4e2d\u6709\u4e00\u4e2a\u6709\u8fd9\u6837\u4e00\u6bb5\u4ee3\u7801\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"}," final BrokerController controller = new BrokerController(\n                brokerConfig,\n                nettyServerConfig,\n                nettyClientConfig,\n                messageStoreConfig);\n            // remember all configs to prevent discard\n            controller.getConfiguration().registerConfig(properties);\n            \n            boolean initResult = controller.initialize();\n")),(0,r.kt)("p",null,"\u901a\u8fc7 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"controller.initialize()"))," \u6765\u5bf9 ",(0,r.kt)("strong",{parentName:"p"},"BrokerController")," \u6765\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5728\u521d\u59cb\u7684\u8fc7\u7a0b\u4e2d\uff0c\u521b\u5efa\u4e86\u7528\u6765\u5904\u7406\u5904\u7406\u751f\u4ea7\u8005\u53d1\u9001\u7684MQ\u6d88\u606f\u6570\u636e\u7684\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u53eb\u505a ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"SendMessageProcessor"))," \u3002\u8fd9\u4e2a\u7c7b\u5728 ",(0,r.kt)("strong",{parentName:"p"},"controller.initialize()")," \u901a\u8fc7 ",(0,r.kt)("strong",{parentName:"p"},"BrokerController.registerProcessor")," \u65b9\u6cd5\u6765\u6ce8\u5165\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public boolean initialize() throws CloneNotSupportedException {\n    \n    //\u7701\u7565\u4ee3\u7801\n   this.registerProcessor();\n    \n    //\u7701\u7565\u4ee3\u7801\n    \n}\n\n\npublic void registerProcessor() {\n        /**\n         * SendMessageProcessor\n         */\n        SendMessageProcessor sendProcessor = new SendMessageProcessor(this);\n        sendProcessor.registerSendMessageHook(sendMessageHookList);\n        sendProcessor.registerConsumeMessageHook(consumeMessageHookList);\n\n        this.remotingServer.registerProcessor(RequestCode.SEND_MESSAGE, sendProcessor, this.sendMessageExecutor);\n        this.remotingServer.registerProcessor(RequestCode.SEND_MESSAGE_V2, sendProcessor, this.sendMessageExecutor);\n        this.remotingServer.registerProcessor(RequestCode.SEND_BATCH_MESSAGE, sendProcessor, this.sendMessageExecutor);\n        this.remotingServer.registerProcessor(RequestCode.CONSUMER_SEND_MSG_BACK, sendProcessor, this.sendMessageExecutor);\n        this.fastRemotingServer.registerProcessor(RequestCode.SEND_MESSAGE, sendProcessor, this.sendMessageExecutor);\n        this.fastRemotingServer.registerProcessor(RequestCode.SEND_MESSAGE_V2, sendProcessor, this.sendMessageExecutor);\n        this.fastRemotingServer.registerProcessor(RequestCode.SEND_BATCH_MESSAGE, sendProcessor, this.sendMessageExecutor);\n        this.fastRemotingServer.registerProcessor(RequestCode.CONSUMER_SEND_MSG_BACK, sendProcessor, this.sendMessageExecutor);\n \n    //\u540e\u7eed\u4ee3\u7801\u7701\u7565\n }\n")),(0,r.kt)("p",null," \u6240\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\u5904\u7406\u6d88\u606f\u4e3b\u8981\u662f\u901a\u8fc7 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"SendMessageProcessor"))," \u6765\u8fdb\u884c\u5904\u7406\u3002\u4e0b\u9762\u6765\u9a8c\u8bc1\u4e00\u4e0b\u662f\u4e0d\u662f\u4f1a\u901a\u8fc7"),(0,r.kt)("p",null,"\u63a5\u4e0b\u6765\u770b\u4e00\u4e0b ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"SendMessageProcessor"))," \u7684\u6e90\u7801\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public class SendMessageProcessor extends AbstractSendMessageProcessor implements NettyRequestProcessor {\n    \n}\n")),(0,r.kt)("p",null,"\u4e3b\u8981\u662f\u901a\u8fc7\u7ee7\u627f ",(0,r.kt)("strong",{parentName:"p"},"AbstractSendMessageProcessor")," \u62bd\u8c61\u7c7b\u548c\u5b9e\u73b0 ",(0,r.kt)("strong",{parentName:"p"},"NettyRequestProcessor")," \u4e24\u4e2a\u63a5\u53e3\u3002\u6570\u636e\u5904\u7406\u4e3b\u8981\u662f\u901a\u8fc7\u5b9e\u73b0 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"NettyRequestProcessor.processRequest"))," \u65b9\u6cd5\u6765\u5904\u7406\u5404\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u6d88\u606f\u3002\u770b\u4e00\u4e0b ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"SendMessageProcessor.processRequest"))," \u7684\u5b9e\u73b0\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'@Override\n    public RemotingCommand processRequest(ChannelHandlerContext ctx,\n                                          RemotingCommand request) throws RemotingCommandException {\n        RemotingCommand response = null;\n        try {\n            response = asyncProcessRequest(ctx, request).get();\n        } catch (InterruptedException | ExecutionException e) {\n            log.error("process SendMessage error, request : " + request.toString(), e);\n        }\n        return response;\n    }\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u4e24\u4e2a\u53c2\u6570\uff1a"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"ctx \uff1a netty\u7684\u76f8\u5173\u53c2\u6570"),(0,r.kt)("li",{parentName:"ul"},"request\uff1a \u7c7b\u578bRemotingCommand\uff0c\u8fd9\u4e2a\u662fRocketMQ\u7684\u6d88\u606f\u534f\u8bae\u7684\u62bd\u8c61(rocketmq-\u6a21\u5757\u8bbe\u8ba1\u7684\u6587\u7ae0)"))),(0,r.kt)("p",null,"\u7136\u540e\u8c03\u7528 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"asyncProcessRequest"))," \u6765\u83b7\u53d6\u7ed3\u679c\u3002\u63a5\u4e0b\u6765\u770b\u4e00\u4e0b\u8fd9\u4e2a\u65b9\u6cd5\u7684\u5b9e\u73b0\uff1a"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u6ce8\u610f\uff1a \u4ece\u65b9\u6cd5\u540d\u79f0\u6765\u770b\u662f\u4e00\u4e2a\u5f02\u6b65\u7684\u8c03\u7528\u8fc7\u7a0b\uff0c\u4f46\u662f\u901a\u8fc7\u7b49\u5f85\u8fd4\u56de\u503c\u6765\u8fbe\u5230\u4e00\u4e2a\u540c\u6b65\u7684\u8fc7\u7a0b\u3002\u5176\u5b9e\u5728\u540e\u53f0\u7684\u5f88\u591a\u5b9e\u73b0\u90fd\u662f\u5f02\u6b65\u8c03\u7528\uff0c\u7136\u540e\u901a\u8fc7\u7b49\u5f85\u8fd4\u56de\u7ed3\u679c\u5b9e\u73b0\u540c\u6b65\u7684\u8fc7\u7a0b\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public CompletableFuture<RemotingCommand> asyncProcessRequest(ChannelHandlerContext ctx,\n                                                                  RemotingCommand request) throws RemotingCommandException {\n        final SendMessageContext mqtraceContext;\n        switch (request.getCode()) {\n                ///\u8fd9\u4e2a\u5206\u652f\u662f\u6d88\u8d39\u5931\u8d25\u5c06\u6d88\u606f\u91cd\u65b0\u53d1\u56deBroker\u624d\u4f1a\u8d70\n            case RequestCode.CONSUMER_SEND_MSG_BACK:\n                return this.asyncConsumerSendMsgBack(ctx, request);\n            default:\n                SendMessageRequestHeader requestHeader = parseRequestHeader(request);\n                if (requestHeader == null) {\n                    return CompletableFuture.completedFuture(null);\n                }\n                mqtraceContext = buildMsgContext(ctx, requestHeader);\n                //SendMessageHook \u63a5\u53e3\u7684\u5904\u7406\n                this.executeSendMessageHookBefore(ctx, request, mqtraceContext);\n                if (requestHeader.isBatch()) {\n                    //\u6279\u91cf\u6d88\u606f\u5904\u7406\n                    return this.asyncSendBatchMessage(ctx, request, mqtraceContext, requestHeader);\n                } else {\n                    //\u5355\u4e2a\u6d88\u606f\u5904\u7406\n                    return this.asyncSendMessage(ctx, request, mqtraceContext, requestHeader);\n                }\n        }\n    }\n")),(0,r.kt)("p",null,"\u4e0a\u9762\u5904\u7406\u6570\u636e\u5c31\u662f\u4e24\u5927\u7c7b\u6570\u636e\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6d88\u8d39\u5931\u8d25\u7684\u6570\u636eRequestCode.CONSUMER_SEND_MSG_BACK"),(0,r.kt)("li",{parentName:"ul"},"\u751f\u4ea7\u8005\u7684\u53d1\u9001\u6570\u636e\uff0c\u8fd9\u4e2a\u6570\u636e\u53c8\u5305\u542b\u4e24\u5927\u7c7b",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"RequestCode.SEND_BATCH_MESSAGE \u6279\u91cf\u6570\u636e"),(0,r.kt)("li",{parentName:"ul"},"RequestCode.SEND_MESSAGE_V2 \u548c RequestCode.SEND_MESSAGE \u5355\u4e2a\u6570\u636e (\u53ea\u662f\u7248\u672c\u4e0d\u4e00\u6837)")))),(0,r.kt)("p",null,"\u6240\u4ee5\u4e0a\u9762\u4e3b\u8981\u6709\u4e24\u7c7b\u5904\u7406\u4e00\u4e2a\u662f\u5355\u4e2a\u6d88\u606f ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"asyncSendMessage"))," f\u65b9\u6cd5\u548c ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"asyncSendBatchMessage"))," \u5904\u7406\u6279\u91cf\u53d1\u9001\u7684\u6570\u636e\u3002\u8fd9\u91cc\u53ea\u5206\u6790\u5355\u4e2a\u6570\u636e\u7684\u5b58\u50a8(\u591a\u4e2a\u6570\u636e\u539f\u7406\u5dee\u4e0d\u591a)\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://github.com/mxsm/picture/blob/main/rocketmq/broker-commitlog.gif?raw=true",alt:null})),(0,r.kt)("p",null,"\u9996\u5148\u662f\u5bf9\u6570\u636e\u8fdb\u884c\u5904\u7406\u548c\u4e00\u4e9b\u524d\u671f\u7684\u6821\u9a8c\u5982\u4e0b\u4ee3\u7801\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"final RemotingCommand response = preSend(ctx, request, requestHeader);\n        final SendMessageResponseHeader responseHeader = (SendMessageResponseHeader)response.readCustomHeader();\n\n        if (response.getCode() != -1) {\n            return CompletableFuture.completedFuture(response);\n        }\n\n        final byte[] body = request.getBody();\n\n        int queueIdInt = requestHeader.getQueueId();\n        TopicConfig topicConfig = this.brokerController.getTopicConfigManager().selectTopicConfig(requestHeader.getTopic());\n\n        if (queueIdInt < 0) {\n            queueIdInt = randomQueueId(topicConfig.getWriteQueueNums());\n        }\n")),(0,r.kt)("p",null,"\u7136\u540e\u6784\u5efa ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"MessageExtBrokerInner"))," \u5728Broker\u5185\u90e8\u4f7f\u7528\u7684\u5bf9\u8c61\u7c7b,\u8fd9\u91cc\u4e3b\u8981\u662f\u8bbe\u7f6e\u4e00\u4e9bBroker\u7684\u4fe1\u606f\u5230\u6d88\u606f\u4e2d\u5982\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"MessageExtBrokerInner msgInner = new MessageExtBrokerInner();\n        msgInner.setTopic(requestHeader.getTopic());\n        msgInner.setQueueId(queueIdInt);\n\n        if (!handleRetryAndDLQ(requestHeader, response, request, msgInner, topicConfig)) {\n            return CompletableFuture.completedFuture(response);\n        }\n\n        msgInner.setBody(body);\n        msgInner.setFlag(requestHeader.getFlag());\n        MessageAccessor.setProperties(msgInner, MessageDecoder.string2messageProperties(requestHeader.getProperties()));\n        msgInner.setPropertiesString(requestHeader.getProperties());\n        msgInner.setBornTimestamp(requestHeader.getBornTimestamp());\n        msgInner.setBornHost(ctx.channel().remoteAddress());\n        msgInner.setStoreHost(this.getStoreHost());\n        msgInner.setReconsumeTimes(requestHeader.getReconsumeTimes() == null ? 0 : requestHeader.getReconsumeTimes());\n")),(0,r.kt)("p",null,"\u7136\u540e\u5c31\u662f\u5b58\u50a8\u6d88\u606f\u5904\u7406\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'CompletableFuture<PutMessageResult> putMessageResult = null;\nMap<String, String> origProps = MessageDecoder.string2messageProperties(requestHeader.getProperties());\nString transFlag = origProps.get(MessageConst.PROPERTY_TRANSACTION_PREPARED);\n//\u5224\u65ad\u662f\u5426\u4e3a\u4e8b\u52a1\u6d88\u606f\nif (transFlag != null && Boolean.parseBoolean(transFlag)) {\n    if (this.brokerController.getBrokerConfig().isRejectTransactionMessage()) {\n        response.setCode(ResponseCode.NO_PERMISSION);\n        response.setRemark(\n                "the broker[" + this.brokerController.getBrokerConfig().getBrokerIP1()\n                        + "] sending transaction message is forbidden");\n        return CompletableFuture.completedFuture(response);\n    }\n    putMessageResult = this.brokerController.getTransactionalMessageService().asyncPrepareMessage(msgInner);\n} else {\n    putMessageResult = this.brokerController.getMessageStore().asyncPutMessage(msgInner);\n}\nreturn handlePutMessageResultFuture(putMessageResult, response, request, msgInner, responseHeader, mqtraceContext, ctx, queueIdInt);\n')),(0,r.kt)("p",null,"\u8fd9\u91cc\u6709\u6d88\u606f\u5206\u4e3a\u4e24\u79cd\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u4e8b\u52a1\u6d88\u606f(\u4ee5\u540e\u5206\u6790\u5904\u7406)"),(0,r.kt)("li",{parentName:"ul"},"\u666e\u901a\u6d88\u606f")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://github.com/mxsm/picture/blob/main/rocketmq/broker-commitlog-1.gif?raw=true",alt:null})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u8fd9\u91cc\u4ea7\u751f\u7684\u662f\u666e\u901a\u6d88\u606f")),(0,r.kt)("p",null,"\u5b58\u50a8\u901a\u8fc7\u8c03\u7528 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"MessageStore.asyncPutMessage"))," \u65b9\u6cd5\uff0c\u800c ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"MessageStore"))," \u7684\u5b9e\u73b0\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"DefaultMessageStore")," \u3002 \u770b\u4e00\u4e0b ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"DefaultMessageStore.asyncPutMessage"))," \u5b9e\u73b0\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'    @Override\n    public CompletableFuture<PutMessageResult> asyncPutMessage(MessageExtBrokerInner msg) {\n\n        //\u68c0\u6d4b\u5b58\u50a8\u72b6\u6001\n        PutMessageStatus checkStoreStatus = this.checkStoreStatus();\n        if (checkStoreStatus != PutMessageStatus.PUT_OK) {\n            return CompletableFuture.completedFuture(new PutMessageResult(checkStoreStatus, null));\n        }\n\n        //\u6821\u9a8c\u6d88\u606f\u7684topic\u548cProperties\n        PutMessageStatus msgCheckStatus = this.checkMessage(msg);\n        if (msgCheckStatus == PutMessageStatus.MESSAGE_ILLEGAL) {\n            return CompletableFuture.completedFuture(new PutMessageResult(msgCheckStatus, null));\n        }\n\n        long beginTime = this.getSystemClock().now();\n        //\u6d88\u606f\u5904\u7406\n        CompletableFuture<PutMessageResult> putResultFuture = this.commitLog.asyncPutMessage(msg);\n\n        putResultFuture.thenAccept((result) -> {\n            long elapsedTime = this.getSystemClock().now() - beginTime;\n            if (elapsedTime > 500) {\n                log.warn("putMessage not in lock elapsed time(ms)={}, bodyLength={}", elapsedTime, msg.getBody().length);\n            }\n            this.storeStatsService.setPutMessageEntireTimeMax(elapsedTime);\n\n            if (null == result || !result.isOk()) {\n                this.storeStatsService.getPutMessageFailedTimes().incrementAndGet();\n            }\n        });\n\n        return putResultFuture;\n    }\n')),(0,r.kt)("p",null,"\u901a\u8fc7 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"CommitLog.asyncPutMessage"))," \u65b9\u6cd5\u6765\u6301\u4e45\u5316\u6570\u636e\uff0c\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u4e3b\u8981\u4e3b\u8981\u505a\u4e86\u4e09\u4ef6\u4e8b\u60c5\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u8bbe\u7f6e\u6d88\u606fBody\u7684CRC\u6821\u9a8c\uff0c\u540e\u671f\u8bfb\u53d6\u6570\u636e\u8981\u7528\u5230\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public CompletableFuture<PutMessageResult> asyncPutMessage(final MessageExtBrokerInner msg) {\n        //\u8bbe\u7f6e\u5b58\u50a8\u7684\u65f6\u95f4\n        msg.setStoreTimestamp(System.currentTimeMillis());\n        //\u8bbe\u7f6eCRC\u7684\u6821\u9a8c\u503c\n        msg.setBodyCRC(UtilAll.crc32(msg.getBody()));\n    \n    // ..........\u7701\u7565\u4ee3\u7801\n}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5ef6\u8fdf\u6d88\u606f\u7684\u5904\u7406"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public CompletableFuture<PutMessageResult> asyncPutMessage(final MessageExtBrokerInner msg) {\n\n    //\u7701\u7565\u4ee3\u7801\n    if (tranType == MessageSysFlag.TRANSACTION_NOT_TYPE\n                || tranType == MessageSysFlag.TRANSACTION_COMMIT_TYPE) {\n            // Delay Delivery\n            if (msg.getDelayTimeLevel() > 0) {\n                if (msg.getDelayTimeLevel() > this.defaultMessageStore.getScheduleMessageService().getMaxDelayLevel()) {\n                    msg.setDelayTimeLevel(this.defaultMessageStore.getScheduleMessageService().getMaxDelayLevel());\n                }\n\n                topic = ScheduleMessageService.SCHEDULE_TOPIC;\n                queueId = ScheduleMessageService.delayLevel2QueueId(msg.getDelayTimeLevel());\n\n                // Backup real topic, queueId\n                MessageAccessor.putProperty(msg, MessageConst.PROPERTY_REAL_TOPIC, msg.getTopic());\n                MessageAccessor.putProperty(msg, MessageConst.PROPERTY_REAL_QUEUE_ID, String.valueOf(msg.getQueueId()));\n                msg.setPropertiesString(MessageDecoder.messageProperties2String(msg.getProperties()));\n\n                msg.setTopic(topic);\n                msg.setQueueId(queueId);\n            }\n        }\n    \n    //\u7701\u7565\u4ee3\u7801\n}\n")),(0,r.kt)("p",{parentName:"li"},"\u8fd9\u91cc\u662f\u5904\u7406\u4e0d\u540c\u5ef6\u8fdf\u7b49\u7ea7\u7684\u5ef6\u8fdf\u6d88\u8d39\u6d88\u606f\u7684\u6570\u636e\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"CommitLog\u7684\u6570\u636e\u5904\u7406"),(0,r.kt)("p",{parentName:"li"},"message\u6d88\u606f\u7684\u5904\u7406\u4e5f\u5206\u4e3a\u4e86\u4e09\u6b65\uff1a"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"CommitLog\u7684\u63d0\u4ea4"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},' public CompletableFuture<PutMessageResult> asyncPutMessage(final MessageExtBrokerInner msg) {\n     //\u7701\u7565\u4ee3\u7801\n     putMessageLock.lock(); //spin or ReentrantLock ,depending on store config\n        try {\n            long beginLockTimestamp = this.defaultMessageStore.getSystemClock().now();\n            this.beginTimeInLock = beginLockTimestamp;\n\n            // Here settings are stored timestamp, in order to ensure an orderly\n            // global\n            msg.setStoreTimestamp(beginLockTimestamp);\n\n            if (null == mappedFile || mappedFile.isFull()) {\n                mappedFile = this.mappedFileQueue.getLastMappedFile(0); // Mark: NewFile may be cause noise\n            }\n            if (null == mappedFile) {\n                log.error("create mapped file1 error, topic: " + msg.getTopic() + " clientAddr: " + msg.getBornHostString());\n                beginTimeInLock = 0;\n                return CompletableFuture.completedFuture(new PutMessageResult(PutMessageStatus.CREATE_MAPEDFILE_FAILED, null));\n            }\n            //\u5173\u952e\u4ee3\u7801--\u6dfb\u52a0CommitLog\u65e5\u5fd7\u6d88\u606f\n            result = mappedFile.appendMessage(msg, this.appendMessageCallback);\n            switch (result.getStatus()) {\n                case PUT_OK:\n                    break;\n                case END_OF_FILE:\n                    unlockMappedFile = mappedFile;\n                    // Create a new file, re-write the message\n                    mappedFile = this.mappedFileQueue.getLastMappedFile(0);\n                    if (null == mappedFile) {\n                        // XXX: warn and notify me\n                        log.error("create mapped file2 error, topic: " + msg.getTopic() + " clientAddr: " + msg.getBornHostString());\n                        beginTimeInLock = 0;\n                        return CompletableFuture.completedFuture(new PutMessageResult(PutMessageStatus.CREATE_MAPEDFILE_FAILED, result));\n                    }\n                    result = mappedFile.appendMessage(msg, this.appendMessageCallback);\n                    break;\n                case MESSAGE_SIZE_EXCEEDED:\n                case PROPERTIES_SIZE_EXCEEDED:\n                    beginTimeInLock = 0;\n                    return CompletableFuture.completedFuture(new PutMessageResult(PutMessageStatus.MESSAGE_ILLEGAL, result));\n                case UNKNOWN_ERROR:\n                    beginTimeInLock = 0;\n                    return CompletableFuture.completedFuture(new PutMessageResult(PutMessageStatus.UNKNOWN_ERROR, result));\n                default:\n                    beginTimeInLock = 0;\n                    return CompletableFuture.completedFuture(new PutMessageResult(PutMessageStatus.UNKNOWN_ERROR, result));\n            }\n\n            elapsedTimeInLock = this.defaultMessageStore.getSystemClock().now() - beginLockTimestamp;\n            beginTimeInLock = 0;\n        } finally {\n            putMessageLock.unlock();\n        }\n     //\u7701\u7565\u4ee3\u7801\n }\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"CommitLog\u7684\u5237\u76d8(\u540c\u6b65\u5237\u76d8\u548c\u5f02\u6b65\u5237\u76d8\u4e24\u79cd)"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"CompletableFuture<PutMessageStatus> flushResultFuture = submitFlushRequest(result, putMessageResult, msg);\n\n    public CompletableFuture<PutMessageStatus> submitFlushRequest(AppendMessageResult result, PutMessageResult putMessageResult,\n                                                                  MessageExt messageExt) {\n        // \u5224\u65ad\u5237\u76d8\u7684\u65b9\u5f0f---\u9ed8\u8ba4\u503c\u4e3aFlushDiskType.ASYNC_FLUSH \u5f02\u6b65\u5237\u76d8\u7684\u65b9\u5f0f\n        if (FlushDiskType.SYNC_FLUSH == this.defaultMessageStore.getMessageStoreConfig().getFlushDiskType()) {\n            final GroupCommitService service = (GroupCommitService) this.flushCommitLogService;\n            if (messageExt.isWaitStoreMsgOK()) {\n                GroupCommitRequest request = new GroupCommitRequest(result.getWroteOffset() + result.getWroteBytes(),\n                        this.defaultMessageStore.getMessageStoreConfig().getSyncFlushTimeout());\n                service.putRequest(request);\n                return request.future();\n            } else {\n                service.wakeup();\n                return CompletableFuture.completedFuture(PutMessageStatus.PUT_OK);\n            }\n        }\n        // Asynchronous flush\n        else {\n            if (!this.defaultMessageStore.getMessageStoreConfig().isTransientStorePoolEnable()) {\n                flushCommitLogService.wakeup();\n            } else  {\n                commitLogService.wakeup();\n            }\n            return CompletableFuture.completedFuture(PutMessageStatus.PUT_OK);\n        }\n    }\n")),(0,r.kt)("p",{parentName:"li"},"\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u53ef\u4ee5\u914d\u7f6e\u5237\u76d8\u7684\u65b9\u5f0f\uff0c\u9ed8\u8ba4\u7684\u5237\u76d8\u65b9\u5f0f\u4e3a\u5f02\u6b65\u5237\u76d8\u65b9\u5f0f(\u6839\u636e\u5b98\u7f51\u7684\u8bf4\u660e\u5982\u679c\u4f7f\u7528\u9632\u6b62\u6d88\u606f\u7684\u4e22\u5931\u53ef\u4ee5\u4f7f\u7528\u540c\u6b65\u5237\u76d8\u65b9\u5f0f\u4f46\u662f\u540c\u6b65\u5237\u76d8\u4f1a\u5f71\u54cd\u5e76\u53d1)\u3002")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u63d0\u4ea4\u7ed9Slave\u540c\u6b65(\u540c\u6b65\u548c\u5f02\u6b65\u4e24\u79cd)"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"CompletableFuture<PutMessageStatus> replicaResultFuture = submitReplicaRequest(result, putMessageResult, msg);\n\npublic CompletableFuture<PutMessageStatus> submitReplicaRequest(AppendMessageResult result, PutMessageResult putMessageResult,\n                                                        MessageExt messageExt) {\n        //\u9ed8\u8ba4\u7684\u662fBrokerRole.ASYNC_MASTER \u6240\u4ee5\u4e5f\u662f\u5f02\u6b65\u7684\u65b9\u5f0f\n        if (BrokerRole.SYNC_MASTER == this.defaultMessageStore.getMessageStoreConfig().getBrokerRole()) {\n            HAService service = this.defaultMessageStore.getHaService();\n            if (messageExt.isWaitStoreMsgOK()) {\n                if (service.isSlaveOK(result.getWroteBytes() + result.getWroteOffset())) {\n                    GroupCommitRequest request = new GroupCommitRequest(result.getWroteOffset() + result.getWroteBytes(),\n                            this.defaultMessageStore.getMessageStoreConfig().getSyncFlushTimeout());\n                    service.putRequest(request);\n                    service.getWaitNotifyObject().wakeupAll();\n                    return request.future();\n                }\n                else {\n                    return CompletableFuture.completedFuture(PutMessageStatus.SLAVE_NOT_AVAILABLE);\n                }\n            }\n        }\n        return CompletableFuture.completedFuture(PutMessageStatus.PUT_OK);\n    }\n")))))),(0,r.kt)("p",null,"\u4e0a\u9762\u53ef\u4ee5\u901a\u8fc7\u5b98\u7f51\u7684\u4e00\u4e2a\u56fe\u7247\u6765\u8bf4\u660e\u8fd9\u4e24\u79cd\u60c5\u51b5\uff1a"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://github.com/apache/rocketmq/raw/master/docs/cn/image/rocketmq_design_2.png",alt:null})),(0,r.kt)("p",null,"\u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\u5206\u6790\u53ef\u4ee5\u77e5\u9053\u4e3b\u8981\u662f\u901a\u8fc7\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"result = mappedFile.appendMessage(msg, this.appendMessageCallback);\n")),(0,r.kt)("p",null,"\u8fd9\u6bb5\u4ee3\u7801\u628amessage\u6301\u4e45\u5316\uff0c\u5728RocketMQ\u7684\u6240\u6709\u7684\u6587\u4ef6\u90fd\u662f\u901a\u8fc7 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"MappedFile"))," \u5305\u88c5\u8fdb\u884c\u5904\u7406\u7684\u3002\u4e0b\u9762\u6765\u770b\u4e00\u4e0b ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"MappedFile.appendMessage"))," \u65b9\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"    public AppendMessageResult appendMessage(final MessageExtBrokerInner msg, final AppendMessageCallback cb) {\n        return appendMessagesInner(msg, cb);\n    }\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"appendMessage"))," \u65b9\u6cd5\u8c03\u7528\u4e86 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"MappedFile.appendMessagesInner"))," \u7684\u5185\u90e8\u65b9\u6cd5\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'    public AppendMessageResult appendMessagesInner(final MessageExt messageExt, final AppendMessageCallback cb) {\n        assert messageExt != null;\n        assert cb != null;\n\n        int currentPos = this.wrotePosition.get();\n        //\u5f53\u524d\u504f\u79fb\u91cf\u548c\u6587\u4ef6\u5927\u5c0f\u505a\u6bd4\u8f83\n        if (currentPos < this.fileSize) {\n            ByteBuffer byteBuffer = writeBuffer != null ? writeBuffer.slice() : this.mappedByteBuffer.slice();\n            byteBuffer.position(currentPos);\n            AppendMessageResult result;\n            //\u540c\u6837\u8fd9\u91cc\u533a\u5206\u4e86\u5904\u7406\u6279\u91cf\u6d88\u606f\u548c\u5355\u4e2a\u6d88\u606f\n            if (messageExt instanceof MessageExtBrokerInner) {\n                result = cb.doAppend(this.getFileFromOffset(), byteBuffer, this.fileSize - currentPos, (MessageExtBrokerInner) messageExt);\n            } else if (messageExt instanceof MessageExtBatch) {\n                result = cb.doAppend(this.getFileFromOffset(), byteBuffer, this.fileSize - currentPos, (MessageExtBatch) messageExt);\n            } else {\n                return new AppendMessageResult(AppendMessageStatus.UNKNOWN_ERROR);\n            }\n            this.wrotePosition.addAndGet(result.getWroteBytes());\n            this.storeTimestamp = result.getStoreTimestamp();\n            return result;\n        }\n        log.error("MappedFile.appendMessage return null, wrotePosition: {} fileSize: {}", currentPos, this.fileSize);\n        return new AppendMessageResult(AppendMessageStatus.UNKNOWN_ERROR);\n    }\n')),(0,r.kt)("p",null,"\u901a\u8fc7\u4ee3\u7801\u53d1\u73b0\u4ee3\u7801\u91cc\u9762\u901a\u8fc7\u8c03\u7528 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"AppendMessageCallback.doAppend"))," \u6765\u5904\u7406\u6570\u636e\uff0c \u5728 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"CommitLog"))," \u7c7b",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"AppendMessageCallback"))," \u4e2d\u6709\u4e00\u4e2a \u7684\u5185\u90e8\u7c7b\u7684\u5b9e\u73b0 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"DefaultAppendMessageCallback"))," \u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public AppendMessageResult doAppend(final long fileFromOffset, final ByteBuffer byteBuffer, final int maxBlank,\n            final MessageExtBrokerInner msgInner) {\n            // STORETIMESTAMP + STOREHOSTADDRESS + OFFSET <br>\n\n            // PHY OFFSET\n            long wroteOffset = fileFromOffset + byteBuffer.position();\n\n            int sysflag = msgInner.getSysFlag();\n\n            int bornHostLength = (sysflag & MessageSysFlag.BORNHOST_V6_FLAG) == 0 ? 4 + 4 : 16 + 4;\n            int storeHostLength = (sysflag & MessageSysFlag.STOREHOSTADDRESS_V6_FLAG) == 0 ? 4 + 4 : 16 + 4;\n            ByteBuffer bornHostHolder = ByteBuffer.allocate(bornHostLength);\n            ByteBuffer storeHostHolder = ByteBuffer.allocate(storeHostLength);\n\n            this.resetByteBuffer(storeHostHolder, storeHostLength);\n            String msgId;\n            if ((sysflag & MessageSysFlag.STOREHOSTADDRESS_V6_FLAG) == 0) {\n                msgId = MessageDecoder.createMessageId(this.msgIdMemory, msgInner.getStoreHostBytes(storeHostHolder), wroteOffset);\n            } else {\n                msgId = MessageDecoder.createMessageId(this.msgIdV6Memory, msgInner.getStoreHostBytes(storeHostHolder), wroteOffset);\n            }\n\n            // Record ConsumeQueue information\n            keyBuilder.setLength(0);\n            keyBuilder.append(msgInner.getTopic());\n            keyBuilder.append(\'-\');\n            keyBuilder.append(msgInner.getQueueId());\n            String key = keyBuilder.toString();\n            Long queueOffset = CommitLog.this.topicQueueTable.get(key);\n            if (null == queueOffset) {\n                queueOffset = 0L;\n                CommitLog.this.topicQueueTable.put(key, queueOffset);\n            }\n\n            // Transaction messages that require special handling\n            final int tranType = MessageSysFlag.getTransactionValue(msgInner.getSysFlag());\n            switch (tranType) {\n                // Prepared and Rollback message is not consumed, will not enter the\n                // consumer queuec\n                case MessageSysFlag.TRANSACTION_PREPARED_TYPE:\n                case MessageSysFlag.TRANSACTION_ROLLBACK_TYPE:\n                    queueOffset = 0L;\n                    break;\n                case MessageSysFlag.TRANSACTION_NOT_TYPE:\n                case MessageSysFlag.TRANSACTION_COMMIT_TYPE:\n                default:\n                    break;\n            }\n\n            /**\n             * Serialize message\n             */\n            final byte[] propertiesData =\n                msgInner.getPropertiesString() == null ? null : msgInner.getPropertiesString().getBytes(MessageDecoder.CHARSET_UTF8);\n\n            final int propertiesLength = propertiesData == null ? 0 : propertiesData.length;\n\n            if (propertiesLength > Short.MAX_VALUE) {\n                log.warn("putMessage message properties length too long. length={}", propertiesData.length);\n                return new AppendMessageResult(AppendMessageStatus.PROPERTIES_SIZE_EXCEEDED);\n            }\n\n            final byte[] topicData = msgInner.getTopic().getBytes(MessageDecoder.CHARSET_UTF8);\n            final int topicLength = topicData.length;\n\n            final int bodyLength = msgInner.getBody() == null ? 0 : msgInner.getBody().length;\n\n            final int msgLen = calMsgLength(msgInner.getSysFlag(), bodyLength, topicLength, propertiesLength);\n\n            // Exceeds the maximum message\n            if (msgLen > this.maxMessageSize) {\n                CommitLog.log.warn("message size exceeded, msg total size: " + msgLen + ", msg body size: " + bodyLength\n                    + ", maxMessageSize: " + this.maxMessageSize);\n                return new AppendMessageResult(AppendMessageStatus.MESSAGE_SIZE_EXCEEDED);\n            }\n\n            // Determines whether there is sufficient free space\n            if ((msgLen + END_FILE_MIN_BLANK_LENGTH) > maxBlank) {\n                this.resetByteBuffer(this.msgStoreItemMemory, maxBlank);\n                // 1 TOTALSIZE\n                this.msgStoreItemMemory.putInt(maxBlank);\n                // 2 MAGICCODE\n                this.msgStoreItemMemory.putInt(CommitLog.BLANK_MAGIC_CODE);\n                // 3 The remaining space may be any value\n                // Here the length of the specially set maxBlank\n                final long beginTimeMills = CommitLog.this.defaultMessageStore.now();\n                byteBuffer.put(this.msgStoreItemMemory.array(), 0, maxBlank);\n                return new AppendMessageResult(AppendMessageStatus.END_OF_FILE, wroteOffset, maxBlank, msgId, msgInner.getStoreTimestamp(),\n                    queueOffset, CommitLog.this.defaultMessageStore.now() - beginTimeMills);\n            }\n\n            // Initialization of storage space\n            this.resetByteBuffer(msgStoreItemMemory, msgLen);\n            // 1 TOTALSIZE\n            this.msgStoreItemMemory.putInt(msgLen);\n            // 2 MAGICCODE\n            this.msgStoreItemMemory.putInt(CommitLog.MESSAGE_MAGIC_CODE);\n            // 3 BODYCRC\n            this.msgStoreItemMemory.putInt(msgInner.getBodyCRC());\n            // 4 QUEUEID\n            this.msgStoreItemMemory.putInt(msgInner.getQueueId());\n            // 5 FLAG\n            this.msgStoreItemMemory.putInt(msgInner.getFlag());\n            // 6 QUEUEOFFSET\n            this.msgStoreItemMemory.putLong(queueOffset);\n            // 7 PHYSICALOFFSET\n            this.msgStoreItemMemory.putLong(fileFromOffset + byteBuffer.position());\n            // 8 SYSFLAG\n            this.msgStoreItemMemory.putInt(msgInner.getSysFlag());\n            // 9 BORNTIMESTAMP\n            this.msgStoreItemMemory.putLong(msgInner.getBornTimestamp());\n            // 10 BORNHOST\n            this.resetByteBuffer(bornHostHolder, bornHostLength);\n            this.msgStoreItemMemory.put(msgInner.getBornHostBytes(bornHostHolder));\n            // 11 STORETIMESTAMP\n            this.msgStoreItemMemory.putLong(msgInner.getStoreTimestamp());\n            // 12 STOREHOSTADDRESS\n            this.resetByteBuffer(storeHostHolder, storeHostLength);\n            this.msgStoreItemMemory.put(msgInner.getStoreHostBytes(storeHostHolder));\n            // 13 RECONSUMETIMES\n            this.msgStoreItemMemory.putInt(msgInner.getReconsumeTimes());\n            // 14 Prepared Transaction Offset\n            this.msgStoreItemMemory.putLong(msgInner.getPreparedTransactionOffset());\n            // 15 BODY\n            this.msgStoreItemMemory.putInt(bodyLength);\n            if (bodyLength > 0)\n                this.msgStoreItemMemory.put(msgInner.getBody());\n            // 16 TOPIC\n            this.msgStoreItemMemory.put((byte) topicLength);\n            this.msgStoreItemMemory.put(topicData);\n            // 17 PROPERTIES\n            this.msgStoreItemMemory.putShort((short) propertiesLength);\n            if (propertiesLength > 0)\n                this.msgStoreItemMemory.put(propertiesData);\n\n            final long beginTimeMills = CommitLog.this.defaultMessageStore.now();\n            // Write messages to the queue buffer\n            byteBuffer.put(this.msgStoreItemMemory.array(), 0, msgLen);\n\n            AppendMessageResult result = new AppendMessageResult(AppendMessageStatus.PUT_OK, wroteOffset, msgLen, msgId,\n                msgInner.getStoreTimestamp(), queueOffset, CommitLog.this.defaultMessageStore.now() - beginTimeMills);\n\n            switch (tranType) {\n                case MessageSysFlag.TRANSACTION_PREPARED_TYPE:\n                case MessageSysFlag.TRANSACTION_ROLLBACK_TYPE:\n                    break;\n                case MessageSysFlag.TRANSACTION_NOT_TYPE:\n                case MessageSysFlag.TRANSACTION_COMMIT_TYPE:\n                    // The next update ConsumeQueue information\n                    CommitLog.this.topicQueueTable.put(key, ++queueOffset);\n                    break;\n                default:\n                    break;\n            }\n            return result;\n        }\n')),(0,r.kt)("p",null,"\u8fd9\u4e2a\u65b9\u6cd5\u8bb2\u89e3CommitLog\u7684\u6574\u4e2a\u6570\u636e\u7ec4\u88c5\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://github.com/mxsm/picture/blob/main/rocketmq/broker-commitlog-2.gif?raw=true",alt:null})),(0,r.kt)("h3",{id:"4-commitlog\u6301\u4e45\u5316\u8fc7\u7a0b\u4e2d\u7684\u91cd\u8981\u7c7b"},"4. CommitLog\u6301\u4e45\u5316\u8fc7\u7a0b\u4e2d\u7684\u91cd\u8981\u7c7b"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://github.com/mxsm/document/blob/master/image/MQ/RocketMQ/RocketMQLevel.png?raw=true",alt:null})),(0,r.kt)("p",null,"\u4ee5\u4e0a\u7684\u56fe\u7247\u8bf4\u660e\u4e86RocketMQ\u7684\u4e0d\u540c\u5206\u5c42\u7684\u3002"),(0,r.kt)("h4",{id:"41-commitlog"},"4.1 CommitLog"),(0,r.kt)("p",null,"\u5bf9CommitLog\u65e5\u5fd7\u7684\u62bd\u8c61\u548c\u5904\u7406\u7c7b"),(0,r.kt)("h4",{id:"42-mappedfilequeue"},"4.2 MappedFileQueue"),(0,r.kt)("p",null,"\u6620\u5c04\u7684\u6587\u4ef6\u961f\u5217\uff0c\u7528\u6765\u5904\u7406\u6587\u4ef6\u6620\u5c04\u7684\u961f\u5217\u6570\u636e\u3002\u6bd4\u5982CommitLog\u65e5\u5fd7\u6587\u4ef6"),(0,r.kt)("h4",{id:"43-mappedfile"},"4.3 MappedFile"),(0,r.kt)("p",null,"\u5927\u6587\u4ef6\u7684\u78c1\u76d8\u64cd\u4f5c"),(0,r.kt)("h3",{id:"5-commitlog\u6570\u636e\u8bfb\u53d6\u9a8c\u8bc1"},"5. CommitLog\u6570\u636e\u8bfb\u53d6\u9a8c\u8bc1"),(0,r.kt)("p",null,"\u53d1\u9001\u6d88\u606f\u7684\u4ee3\u7801\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public class MQProducer {\n\n    public static void main(String[] args) throws Exception {\n        /* Instantiate with a producer group name. */\n        DefaultMQProducer producer = new\n            DefaultMQProducer("please_rename_unique_group_name");\n        // Specify name server addresses.\n        producer.setNamesrvAddr("192.168.31.49:9876");\n        //Launch the instance.\n        producer.start();\n        for (int i = 0; i < 1; i++) {\n            //Create a message instance, specifying topic, tag and message body.\n            String s = "Hello RocketMQ " +\n                System.nanoTime();\n            Message msg = new Message("TopicTest" /* Topic */,\n                "TagB" /* Tag */,\n                s.getBytes(RemotingHelper.DEFAULT_CHARSET) /* Message body */\n            );\n            //Call send message to deliver message to one of brokers.\n            SendResult sendResult = producer.send(msg);\n            System.out.printf("%s%n", sendResult);\n            System.out.println(s);\n        }\n        //Shut down once the producer instance is not longer in use.\n        producer.shutdown();\n    }\n}\n\n')),(0,r.kt)("p",null,"\u53d1\u9001\u5230MQ\u7684\u6d88\u606f\u5982\u4e0b\u56fe\uff1a"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://github.com/mxsm/picture/blob/main/rocketmq/%E6%B6%88%E6%81%AF%E5%AD%98%E5%82%A8%E6%89%93%E5%8D%B0%E5%AD%98%E5%82%A8%E5%8F%91%E9%80%81%E6%95%B0%E6%8D%AE.png?raw=true",alt:null})),(0,r.kt)("p",null,"\u7136\u540e\u518dBroker\u5b58\u50a8\u7684\u65f6\u5019\u589e\u52a0\u65e5\u5fd7\u6253\u5370\u5982\u4e0b\u56fe\uff1a"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://github.com/mxsm/picture/blob/main/rocketmq/%E6%B6%88%E6%81%AF%E5%AD%98%E5%82%A8%E6%89%93%E5%8D%B0%E5%AD%98%E5%82%A8.png?raw=true",alt:null})),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://github.com/mxsm/picture/blob/main/rocketmq/broker%E6%89%93%E5%8D%B0%E5%AD%98%E5%82%A8%E7%9A%84%E9%95%BF%E5%BA%A6.png?raw=true",alt:null})),(0,r.kt)("p",null,"\u7136\u540e\u901a\u8fc7\u4ee3\u7801\u89e3\u6790\u6570\u636e\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public class MappedFile {\n\n    public static void main(String[] args) throws Exception{\n\n     \n        File file = new File("C:\\\\Users\\\\mxsm\\\\store\\\\commitlog\\\\00000000000000000000");\n        RandomAccessFile randomAccessFile = new RandomAccessFile(file, "rw");\n        FileChannel channel = randomAccessFile.getChannel();\n        MappedByteBuffer map = channel.map(MapMode.READ_WRITE, 0, file.length());\n        int totalSize = map.getInt();\n        // 1 TOTALSIZE\n        System.out.println("TOTALSIZE:"+totalSize);\n        byte[] bytes = new byte[totalSize];\n        map.get(bytes);\n        ByteBuffer wrap = ByteBuffer.wrap(bytes);\n        int msgLen = 4 //MAGICCODE\n            + 4 //BODYCRC\n            + 4 //QUEUEID\n            + 4 //FLAG\n            + 8 //QUEUEOFFSET\n            + 8 //PHYSICALOFFSET\n            + 4 //SYSFLAG\n            + 8 //BORNTIMESTAMP\n            + 8 //BORNHOST\n            + 8 //STORETIMESTAMP\n            + 8 //STOREHOSTADDRESS\n            + 4 //RECONSUMETIMES\n            + 8; //Prepared Transaction Offset\n        //\u83b7\u53d6Body\u7684\u957f\u5ea6\n        byte[] bytes1 = new byte[4];\n        wrap.position(msgLen);\n        wrap.get(bytes1);\n        int anInt = ByteBuffer.wrap(bytes1).getInt();\n        byte[] bodyBytes = new byte[anInt];\n        wrap.get(bodyBytes,0,bodyBytes.length);\n        //\u6253\u5370Body\n        System.out.println(new String(bodyBytes));\n    }\n\n}\n')),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://github.com/mxsm/picture/blob/main/rocketmq/commitlog%E8%A7%A3%E6%9E%90%E5%90%8E%E7%9A%84%E6%95%B0%E6%8D%AE.png?raw=true",alt:null})))}p.isMDXComponent=!0}}]);