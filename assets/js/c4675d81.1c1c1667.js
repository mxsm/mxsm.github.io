"use strict";(self.webpackChunkmxsm_website=self.webpackChunkmxsm_website||[]).push([[5289],{6791:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var s=e(4848),a=e(8453);const r={title:"ConfigurationClassPostProcessor\u6e90\u7801\u89e3\u6790",date:new Date("2021-03-19T00:00:00.000Z"),weight:8},o=void 0,i={id:"spring/spring-framework/core-source-analysis/ConfigurationClassPostProcesso",title:"ConfigurationClassPostProcessor\u6e90\u7801\u89e3\u6790",description:"1. ConfigurationClassPostProcessor",source:"@site/docs/spring/spring-framework/core-source-analysis/ConfigurationClassPostProcesso.md",sourceDirName:"spring/spring-framework/core-source-analysis",slug:"/spring/spring-framework/core-source-analysis/ConfigurationClassPostProcesso",permalink:"/docs/spring/spring-framework/core-source-analysis/ConfigurationClassPostProcesso",draft:!1,unlisted:!1,editUrl:"https://github.com/mxsm/mxsm-website/edit/develop/docs/spring/spring-framework/core-source-analysis/ConfigurationClassPostProcesso.md",tags:[],version:"current",lastUpdatedBy:"mxsm",lastUpdatedAt:1720344793e3,frontMatter:{title:"ConfigurationClassPostProcessor\u6e90\u7801\u89e3\u6790",date:"2021-03-19T00:00:00.000Z",weight:8},sidebar:"springframework",previous:{title:"ClassPathXmlApplicationContext\u6e90\u7801\u89e3\u6790",permalink:"/docs/spring/spring-framework/core-source-analysis/ClassPathXmlApplicationContext"},next:{title:"FactoryBean\u89e3\u6790",permalink:"/docs/spring/spring-framework/core-source-analysis/FactoryBean"}},c={},l=[{value:"1. ConfigurationClassPostProcessor",id:"1-configurationclasspostprocessor",level:3},{value:"2. ConfigurationClassPostProcessor\u6e90\u7801\u5206\u6790",id:"2-configurationclasspostprocessor\u6e90\u7801\u5206\u6790",level:3},{value:"2.1 ConfigurationClassParser\u5bf9\u8c61\u7684\u5206\u6790",id:"21-configurationclassparser\u5bf9\u8c61\u7684\u5206\u6790",level:4},{value:"2.1.1  @Component\u6ce8\u89e3\u7684\u5904\u7406",id:"211--component\u6ce8\u89e3\u7684\u5904\u7406",level:5},{value:"2.1.2 @PropertySources\u3001@PropertySource \u6ce8\u89e3\u7684\u89e3\u6790",id:"212-propertysourcespropertysource-\u6ce8\u89e3\u7684\u89e3\u6790",level:5},{value:"2.1.3 @ComponentScans.class, @ComponentScan.class\u6ce8\u89e3\u7684\u89e3\u6790",id:"213-componentscansclass-componentscanclass\u6ce8\u89e3\u7684\u89e3\u6790",level:5},{value:"2.1.4 @Import\u6ce8\u89e3\u7684\u89e3\u6790",id:"214-import\u6ce8\u89e3\u7684\u89e3\u6790",level:5},{value:"2.1.5 @ImportResource\u6ce8\u89e3\u7684\u89e3\u6790",id:"215-importresource\u6ce8\u89e3\u7684\u89e3\u6790",level:5},{value:"2.1.6 @Configuration\u914d\u7f6e\u7c7b\u4e2d@Bean\u6ce8\u89e3\u7684\u89e3\u6790",id:"216-configuration\u914d\u7f6e\u7c7b\u4e2dbean\u6ce8\u89e3\u7684\u89e3\u6790",level:5},{value:"3. \u7ec8\u7ed3",id:"3-\u7ec8\u7ed3",level:3}];function d(t){const n={code:"code",em:"em",h3:"h3",h4:"h4",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"1-configurationclasspostprocessor",children:"1. ConfigurationClassPostProcessor"}),"\n",(0,s.jsx)(n.p,{children:"\u8fd9\u4e2a\u7c7b\u4e3b\u8981\u7528\u6765\u5904\u7406Spring\u4e2d\u7684\u914d\u7f6e\u6ce8\u89e3\uff0cSpring\u7684\u914d\u7f6e\u6ce8\u89e3\u4e3b\u8981\u5305\u542b\u4e00\u4e0b\u51e0\u4e2a\uff1a"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"@Configuration"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"@Component"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"@PropertySources\u3001@PropertySource"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"@ComponentScan \u3001 @ComponentScans"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"@Import"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"@ImportResource"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"@Bean"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"\u4ee5\u4e0a\u4e03\u4e2a\u662fSpring\u6700\u5e38\u89c1\u7684\u914d\u7f6e\u7c7b\u6ce8\u89e3\uff0c\u4e0b\u9762\u6765\u5206\u6790\u4e00\u4e0b\u6bcf\u4e00\u4e2a\u6ce8\u89e3\u5728Spring\u4e2d\u7684\u5b9e\u73b0\u3002"}),"\n",(0,s.jsx)(n.h3,{id:"2-configurationclasspostprocessor\u6e90\u7801\u5206\u6790",children:"2. ConfigurationClassPostProcessor\u6e90\u7801\u5206\u6790"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"ConfigurationClassPostProcessor"})})," \u4e3b\u8981\u662f\u901a\u8fc7 ",(0,s.jsx)(n.strong,{children:"AnnotationConfigUtils#registerAnnotationConfigProcessors"})," \u65b9\u6cd5\u6ce8\u5165 ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"ConfigurationClassPostProcessor"})})," \u7684 ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"BeanDefinition"})})," \u3002\u4e0b\u9762\u770b\u4e00\u4e0b ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"ConfigurationClassPostProcessor"})})," \u6e90\u7801"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"public class ConfigurationClassPostProcessor implements BeanDefinitionRegistryPostProcessor,\n\t\tPriorityOrdered, ResourceLoaderAware, BeanClassLoaderAware, EnvironmentAware {\n    // \u7701\u7565\u91cc\u9762\u7684\u4ee3\u7801 \u8fd9\u91cc\u770b\u4e00\u4e0b\u5b9a\u4e49\t\t    \n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\u901a\u8fc7\u4e0a\u9762\u53ef\u4ee5\u770b\u5230\u5b9e\u73b0\u4e86 ",(0,s.jsx)(n.strong,{children:"BeanDefinitionRegistryPostProcessor"})," \u8fd9\u4e2a\u63a5\u53e3\u3002\u8fd9\u4e2a\u63a5\u53e3\u662fSpring\u4e2d\u7684\u4e00\u4e2a\u5f88\u91cd\u8981\u7684 ",(0,s.jsx)(n.strong,{children:"BeanFactoryPostProcessor"})," \u7ee7\u627f\u3002\u4e0b\u9762\u5177\u4f53\u770b\u4e00\u4e0b\u91cc\u9762\u7684\u4e24\u4e2a\u91cd\u8981\u7684\u65b9\u6cd5\uff1a"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'public class ConfigurationClassPostProcessor implements BeanDefinitionRegistryPostProcessor,\n\t\tPriorityOrdered, ResourceLoaderAware, BeanClassLoaderAware, EnvironmentAware {\n    \n    //BeanDefinitionRegistryPostProcessor\u7684\u65b9\u6cd5\u5b9e\u73b0\n    @Override\n\tpublic void postProcessBeanDefinitionRegistry(BeanDefinitionRegistry registry) {\n\t\tint registryId = System.identityHashCode(registry);\n\t\tif (this.registriesPostProcessed.contains(registryId)) {\n\t\t\tthrow new IllegalStateException(\n\t\t\t\t\t"postProcessBeanDefinitionRegistry already called on this post-processor against " + registry);\n\t\t}\n\t\tif (this.factoriesPostProcessed.contains(registryId)) {\n\t\t\tthrow new IllegalStateException(\n\t\t\t\t\t"postProcessBeanFactory already called on this post-processor against " + registry);\n\t\t}\n\t\tthis.registriesPostProcessed.add(registryId);\n        //\u5173\u952e\u6027\u7684\u65b9\u6cd5--\u5904\u7406\u914d\u7f6eBean\u5b9a\u4e49\n\t\tprocessConfigBeanDefinitions(registry);\n\t}\n\t\n\t//BeanFactoryPostProcessor\u7684\u65b9\u6cd5\u5b9e\u73b0\n\t@Override\n\tpublic void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) {\n\t\tint factoryId = System.identityHashCode(beanFactory);\n\t\tif (this.factoriesPostProcessed.contains(factoryId)) {\n\t\t\tthrow new IllegalStateException(\n\t\t\t\t\t"postProcessBeanFactory already called on this post-processor against " + beanFactory);\n\t\t}\n\t\tthis.factoriesPostProcessed.add(factoryId);\n\t\tif (!this.registriesPostProcessed.contains(factoryId)) {\n\t\t    //\u5173\u952e\u6027\u7684\u65b9\u6cd5\n\t\t\tprocessConfigBeanDefinitions((BeanDefinitionRegistry) beanFactory);\n\t\t}\n\n\t\tenhanceConfigurationClasses(beanFactory);\n\t\tbeanFactory.addBeanPostProcessor(new ImportAwareBeanPostProcessor(beanFactory));\n\t}\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["\u4e0b\u9762\u770b\u4e00\u4e0b ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"processConfigBeanDefinitions"})})," \u65b9\u6cd5"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'\tpublic void processConfigBeanDefinitions(BeanDefinitionRegistry registry) {\n\t\tList<BeanDefinitionHolder> configCandidates = new ArrayList<>();\n\t\t//\u4eceSpring\u5bb9\u5668\u4e2d\u83b7\u53d6\u6ce8\u518c\u7684BeanDefinition\u540d\u79f0\n\t\tString[] candidateNames = registry.getBeanDefinitionNames();\n\n\t\tfor (String beanName : candidateNames) {\n\n\t\t\t//\u83b7\u53d6beanName\u5bf9\u5e94\u7684BeanDefinition\n\t\t\tBeanDefinition beanDef = registry.getBeanDefinition(beanName);\n\t\t\t//\u6392\u9664ConfigurationClassPostProcessor\n\t\t\tif (beanDef.getAttribute(ConfigurationClassUtils.CONFIGURATION_CLASS_ATTRIBUTE) != null) {\n\t\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\t\tlogger.debug("Bean definition has already been processed as a configuration class: " + beanDef);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//\u5224\u65ad\u662f\u5426\u5305\u542bConfiguration\u6ce8\u89e3\u7136\u540e\u5224\u65ad\u662f\u5426\u5305\u542b\n\t\t\telse if (ConfigurationClassUtils.checkConfigurationClassCandidate(beanDef, this.metadataReaderFactory)) {\n\t\t\t\tconfigCandidates.add(new BeanDefinitionHolder(beanDef, beanName));\n\t\t\t}\n\t\t}\n\t\t// \u5982\u679c\u6ca1\u6709\u53d1\u73b0Configuration\u76f4\u63a5\u8fd4\u56de\n\t\tif (configCandidates.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// \u5904\u7406\u5305\u542b\u4e86@Order\u6ce8\u89e3\n\t\tconfigCandidates.sort((bd1, bd2) -> {\n\t\t\tint i1 = ConfigurationClassUtils.getOrder(bd1.getBeanDefinition());\n\t\t\tint i2 = ConfigurationClassUtils.getOrder(bd2.getBeanDefinition());\n\t\t\treturn Integer.compare(i1, i2);\n\t\t});\n\n\n\t\tSingletonBeanRegistry sbr = null;\n\t\tif (registry instanceof SingletonBeanRegistry) {\n\t\t\tsbr = (SingletonBeanRegistry) registry;\n\t\t\tif (!this.localBeanNameGeneratorSet) {\n\t\t\t\tBeanNameGenerator generator = (BeanNameGenerator) sbr.getSingleton(\n\t\t\t\t\t\tAnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR);\n\t\t\t\tif (generator != null) {\n\t\t\t\t\tthis.componentScanBeanNameGenerator = generator;\n\t\t\t\t\tthis.importBeanNameGenerator = generator;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.environment == null) {\n\t\t\tthis.environment = new StandardEnvironment();\n\t\t}\n\n\t\t// ConfigurationClassParser\u89e3\u6790\u6bcf\u4e00\u4e2a\u5e26\u6709@Configuration\u6ce8\u89e3\u7684\u7c7b\n\t\tConfigurationClassParser parser = new ConfigurationClassParser(\n\t\t\t\tthis.metadataReaderFactory, this.problemReporter, this.environment,\n\t\t\t\tthis.resourceLoader, this.componentScanBeanNameGenerator, registry);\n\n\t\tSet<BeanDefinitionHolder> candidates = new LinkedHashSet<>(configCandidates);\n\t\tSet<ConfigurationClass> alreadyParsed = new HashSet<>(configCandidates.size());\n\t\tdo {\n            //\u89e3\u6790\u5305\u542b\u6709Configuration\u6ce8\u89e3\u7684\u7c7b\n\t\t\tparser.parse(candidates);\n\t\t\tparser.validate();\n\n\t\t\tSet<ConfigurationClass> configClasses = new LinkedHashSet<>(parser.getConfigurationClasses());\n\t\t\tconfigClasses.removeAll(alreadyParsed);\n\n\t\t\t// \u8bfb\u53d6\u521b\u5efa\u89e3\u6790\u540e\u7684BeanDefinition\u5230\u4e0a\u4e0b\u6587Context\u4e2d\n\t\t\tif (this.reader == null) {\n\t\t\t\tthis.reader = new ConfigurationClassBeanDefinitionReader(\n\t\t\t\t\t\tregistry, this.sourceExtractor, this.resourceLoader, this.environment,\n\t\t\t\t\t\tthis.importBeanNameGenerator, parser.getImportRegistry());\n\t\t\t}\n\t\t\tthis.reader.loadBeanDefinitions(configClasses);\n\t\t\talreadyParsed.addAll(configClasses);\n\n\t\t\tcandidates.clear();\n\t\t\tif (registry.getBeanDefinitionCount() > candidateNames.length) {\n\t\t\t\tString[] newCandidateNames = registry.getBeanDefinitionNames();\n\t\t\t\tSet<String> oldCandidateNames = new HashSet<>(Arrays.asList(candidateNames));\n\t\t\t\tSet<String> alreadyParsedClasses = new HashSet<>();\n\t\t\t\tfor (ConfigurationClass configurationClass : alreadyParsed) {\n\t\t\t\t\talreadyParsedClasses.add(configurationClass.getMetadata().getClassName());\n\t\t\t\t}\n\t\t\t\tfor (String candidateName : newCandidateNames) {\n\t\t\t\t\tif (!oldCandidateNames.contains(candidateName)) {\n\t\t\t\t\t\tBeanDefinition bd = registry.getBeanDefinition(candidateName);\n\t\t\t\t\t\tif (ConfigurationClassUtils.checkConfigurationClassCandidate(bd, this.metadataReaderFactory) &&\n\t\t\t\t\t\t\t\t!alreadyParsedClasses.contains(bd.getBeanClassName())) {\n\t\t\t\t\t\t\tcandidates.add(new BeanDefinitionHolder(bd, candidateName));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcandidateNames = newCandidateNames;\n\t\t\t}\n\t\t}\n\t\twhile (!candidates.isEmpty());\n\n\t\t//\u6ce8\u518cImportRegistry\u4f5c\u4e3a\u4e00\u4e2aBean\u53bb\u652f\u6301ImportAware\u5bfc\u5165@Configuration\u7c7b\n\t\tif (sbr != null && !sbr.containsSingleton(IMPORT_REGISTRY_BEAN_NAME)) {\n\t\t\tsbr.registerSingleton(IMPORT_REGISTRY_BEAN_NAME, parser.getImportRegistry());\n\t\t}\n\n\t\tif (this.metadataReaderFactory instanceof CachingMetadataReaderFactory) {\n\t\t\t// Clear cache in externally provided MetadataReaderFactory; this is a no-op\n\t\t\t// for a shared cache since it\'ll be cleared by the ApplicationContext.\n\t\t\t((CachingMetadataReaderFactory) this.metadataReaderFactory).clearCache();\n\t\t}\n\t}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"21-configurationclassparser\u5bf9\u8c61\u7684\u5206\u6790",children:"2.1 ConfigurationClassParser\u5bf9\u8c61\u7684\u5206\u6790"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"ConfigurationClassParser"})})," \u4e3b\u8981\u5206\u4e3a\u51e0\u4e2a\u90e8\u5206\uff1a"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"@Component\u6ce8\u89e3\u7684\u89e3\u6790"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"@PropertySources\u3001@PropertySource \u6ce8\u89e3\u7684\u89e3\u6790"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"@ComponentScans.class, @ComponentScan.class\u6ce8\u89e3\u7684\u89e3\u6790"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"@Import\u6ce8\u89e3\u7684\u89e3\u6790"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"@ImportResource\u6ce8\u89e3\u7684\u89e3\u6790"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"@Configuration\u914d\u7f6e\u7c7b\u4e2d@Bean\u6ce8\u89e3\u7684\u89e3\u6790"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"ConfigurationClassParser"})})," \u4e3b\u8981\u662f\u89e3\u6790 ",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"@Configuration"})})," \u6ce8\u89e3\u7c7b\u4e0a\u6216\u8005\u7c7b\u91cc\u9762\u7684\u8fd9\u4e9b\u6ce8\u89e3\u4e0b\u9762\u6765\u9010\u4e00\u5206\u6790\u3002"]}),"\n",(0,s.jsxs)(n.p,{children:["\u89e3\u6790 ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"@Configuration"})})," \u4e3b\u8981\u662f\u901a\u8fc7 ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"ConfigurationClassParser"})})," \u5bf9\u8c61\u7684parse\u65b9\u6cd5\u6765\u8fdb\u884c\u89e3\u6790"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'public void parse(Set<BeanDefinitionHolder> configCandidates) {\n\t\tfor (BeanDefinitionHolder holder : configCandidates) {\n\t\t\tBeanDefinition bd = holder.getBeanDefinition();\n\t\t\ttry {\n\t\t\t\tif (bd instanceof AnnotatedBeanDefinition) {\n\t\t\t\t    //\u89e3\u6790\u5904\u7406AnnotatedBeanDefinition\n\t\t\t\t\tparse(((AnnotatedBeanDefinition) bd).getMetadata(), holder.getBeanName());\n\t\t\t\t}\n\t\t\t\telse if (bd instanceof AbstractBeanDefinition && ((AbstractBeanDefinition) bd).hasBeanClass()) {\n\t\t\t\t    //\u89e3\u6790\u5904\u7406AbstractBeanDefinition\n\t\t\t\t\tparse(((AbstractBeanDefinition) bd).getBeanClass(), holder.getBeanName());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tparse(bd.getBeanClassName(), holder.getBeanName());\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (BeanDefinitionStoreException ex) {\n\t\t\t\tthrow ex;\n\t\t\t}\n\t\t\tcatch (Throwable ex) {\n\t\t\t\tthrow new BeanDefinitionStoreException(\n\t\t\t\t\t\t"Failed to parse configuration class [" + bd.getBeanClassName() + "]", ex);\n\t\t\t}\n\t\t}\n\t\t//\u5904\u7406\u5b9e\u73b0\u4e86DeferredImportSelector\u63a5\u53e3\u7684\u7c7b\n\t\tthis.deferredImportSelectorHandler.process();\n\t}\n'})}),"\n",(0,s.jsx)(n.p,{children:"\u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\u53d1\u73b0\u4e3b\u8981\u662f\u901a\u8fc7\u8c03\u7528 parse\u65b9\u6cd5\u8fdb\u884c\u63a5\u4e0b\u6765\u7684\u5904\u7406"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'\tprotected final void parse(@Nullable String className, String beanName) throws IOException {\n\t\tAssert.notNull(className, "No bean class name for configuration class bean definition");\n\t\tMetadataReader reader = this.metadataReaderFactory.getMetadataReader(className);\n\t\tprocessConfigurationClass(new ConfigurationClass(reader, beanName));\n\t}\n\n\tprotected final void parse(Class<?> clazz, String beanName) throws IOException {\n\t\tprocessConfigurationClass(new ConfigurationClass(clazz, beanName));\n\t}\n\n\tprotected final void parse(AnnotationMetadata metadata, String beanName) throws IOException {\n\t\tprocessConfigurationClass(new ConfigurationClass(metadata, beanName));\n\t}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["parse\u65b9\u6cd5\u6709\u4e09\u4e2a\u91cd\u8f7d\u7684\u65b9\u6cd5\uff0c\u4e09\u4e2a\u91cd\u5199\u65b9\u6cd5\u90fd\u662f\u8c03\u7528 ",(0,s.jsx)(n.strong,{children:"processConfigurationClass"})," \u65b9\u6cd5\uff0c\u63a5\u4e0b\u6765\u5f00\u59cb\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u65b9\u6cd5\uff1a"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"\t\tprotected void processConfigurationClass(ConfigurationClass configClass) throws IOException {\n\t\tif (this.conditionEvaluator.shouldSkip(configClass.getMetadata(), ConfigurationPhase.PARSE_CONFIGURATION)) {\n\t\t\treturn;\n\t\t}\n\n\t\t//\u5224\u65ad\u914d\u7f6e\u7c7b\u662f\u5426\u5b58\u5728\n\t\tConfigurationClass existingClass = this.configurationClasses.get(configClass);\n\t\tif (existingClass != null) {\n\n\t\t\t//\u5224\u65adconfigClass\u662fImport\u6ce8\u89e3\n\t\t\tif (configClass.isImported()) {\n\t\t\t\tif (existingClass.isImported()) {\n\t\t\t\t\t//\u5df2\u7ecf\u5b58\u5728\u7684ConfigurationClass\u5408\u5e76\u65b0ConfigurationClass\u7684\u5bfc\u5165\u8005\n\t\t\t\t\texistingClass.mergeImportedBy(configClass);\n\t\t\t\t}\n\t\t\t\t// \u6ce8\u518c\u8fc7\u65e0\u9700\u518d\u6b21\u6ce8\u518c\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// \u627e\u5230\u663e\u5f0fbean\u5b9a\u4e49\uff0c\u53ef\u80fd\u66ff\u6362\u5bfc\u5165\n\t\t\t\t// \u5220\u9664\u65e7\u7684configClass\n\t\t\t\tthis.configurationClasses.remove(configClass);\n\t\t\t\tthis.knownSuperclasses.values().removeIf(configClass::equals);\n\t\t\t}\n\t\t}\n\n\t\t// \u9012\u5f52\u5730\u5904\u7406\u914d\u7f6e\u7c7b\u53ca\u5176\u7236\u7c7b\n\t\tSourceClass sourceClass = asSourceClass(configClass);\n\t\tdo {\n\t\t\tsourceClass = doProcessConfigurationClass(configClass, sourceClass);\n\t\t}\n\t\twhile (sourceClass != null);\n\t\t//\u4fdd\u5b58\u5df2\u7ecf\u5904\u7406\u8fc7\u7684configClass\n\t\tthis.configurationClasses.put(configClass, configClass);\n\t}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\u770b\u4e00\u4e0b ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"doProcessConfigurationClass"})})," \u7684\u65b9\u6cd5"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'\tprotected final SourceClass doProcessConfigurationClass(ConfigurationClass configClass, SourceClass sourceClass)\n\t\t\tthrows IOException {\n\n\t\tif (configClass.getMetadata().isAnnotated(Component.class.getName())) {\n\t\t\t// \u9012\u5f52\u5904\u7406\u6210\u5458\u5185\u90e8\u5185\uff0c\u5904\u7406\u5e26@Component\u6ce8\u89e3\u7684\u7c7b\n\t\t\tprocessMemberClasses(configClass, sourceClass);\n\t\t}\n\n\t\t// \u5904\u7406\u4efb\u4f55@PropertySource\u7684\u7c7b\n\t\tfor (AnnotationAttributes propertySource : AnnotationConfigUtils.attributesForRepeatable(\n\t\t\t\tsourceClass.getMetadata(), PropertySources.class,\n\t\t\t\torg.springframework.context.annotation.PropertySource.class)) {\n\t\t\tif (this.environment instanceof ConfigurableEnvironment) {\n\t\t\t\t//\u5904\u7406\u5c5e\u6027\n\t\t\t\tprocessPropertySource(propertySource);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlogger.info("Ignoring @PropertySource annotation on [" + sourceClass.getMetadata().getClassName() +\n\t\t\t\t\t\t"]. Reason: Environment must implement ConfigurableEnvironment");\n\t\t\t}\n\t\t}\n\n\t\t//\u5904\u7406\u4efb\u4f55 @ComponentScan\u7684\u7c7b\n\t\tSet<AnnotationAttributes> componentScans = AnnotationConfigUtils.attributesForRepeatable(\n\t\t\t\tsourceClass.getMetadata(), ComponentScans.class, ComponentScan.class);\n\t\tif (!componentScans.isEmpty() &&\n\t\t\t\t!this.conditionEvaluator.shouldSkip(sourceClass.getMetadata(), ConfigurationPhase.REGISTER_BEAN)) {\n\t\t\tfor (AnnotationAttributes componentScan : componentScans) {\n\t\t\t\t// The config class is annotated with @ComponentScan -> perform the scan immediately\n\t\t\t\tSet<BeanDefinitionHolder> scannedBeanDefinitions =\n\t\t\t\t\t\tthis.componentScanParser.parse(componentScan, sourceClass.getMetadata().getClassName());\n\t\t\t\t// Check the set of scanned definitions for any further config classes and parse recursively if needed\n\t\t\t\tfor (BeanDefinitionHolder holder : scannedBeanDefinitions) {\n\t\t\t\t\tBeanDefinition bdCand = holder.getBeanDefinition().getOriginatingBeanDefinition();\n\t\t\t\t\tif (bdCand == null) {\n\t\t\t\t\t\tbdCand = holder.getBeanDefinition();\n\t\t\t\t\t}\n\t\t\t\t\tif (ConfigurationClassUtils.checkConfigurationClassCandidate(bdCand, this.metadataReaderFactory)) {\n\t\t\t\t\t\tparse(bdCand.getBeanClassName(), holder.getBeanName());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// \u5904\u7406\u4efb\u4f55@Import\u6ce8\u89e3\u7684\u7c7b\n\t\tprocessImports(configClass, sourceClass, getImports(sourceClass), true);\n\n\t\t//\u5904\u7406\u4efb\u4f55@ImportResource\u6ce8\u89e3\u7684\u7c7b\n\t\tAnnotationAttributes importResource =\n\t\t\t\tAnnotationConfigUtils.attributesFor(sourceClass.getMetadata(), ImportResource.class);\n\t\tif (importResource != null) {\n\t\t\tString[] resources = importResource.getStringArray("locations");\n\t\t\tClass<? extends BeanDefinitionReader> readerClass = importResource.getClass("reader");\n\t\t\tfor (String resource : resources) {\n\t\t\t\tString resolvedResource = this.environment.resolveRequiredPlaceholders(resource);\n\t\t\t\tconfigClass.addImportedResource(resolvedResource, readerClass);\n\t\t\t}\n\t\t}\n\n\n\t\tSet<MethodMetadata> beanMethods = retrieveBeanMethodMetadata(sourceClass);\n\t\tfor (MethodMetadata methodMetadata : beanMethods) {\n\t\t\tconfigClass.addBeanMethod(new BeanMethod(methodMetadata, configClass));\n\t\t}\n\n\t\t// \u5904\u7406\u5b9e\u73b0\u7684\u6240\u6709\u63a5\u53e3\u4e2d@Bean\u6ce8\u89e3\u7684\u65b9\u6cd5\uff0c\u53bb\u4e0a\u9762\u7684\u5904\u7406\u65b9\u6cd5\u4e00\u6837\uff0c\u4f46\u4e0d\u662f\u62bd\u8c61\u65b9\u6cd5\uff0c\n\t\t// \u56e0\u4e3ajava8\u4e2d\u63a5\u53e3\u6709\u9ed8\u8ba4\u65b9\u6cd5\u548c\u5176\u4ed6\u5177\u4f53\u65b9\u6cd5\uff0c\u8fd9\u91cc\u53ea\u4f1a\u5904\u7406\u8fd9\u4e9b\u65b9\u6cd5\u7684@Bean\u6ce8\u89e3\n\t\tprocessInterfaces(configClass, sourceClass);\n\n\t\t// \u5904\u7406\u7236\u7c7b\n\t\tif (sourceClass.getMetadata().hasSuperClass()) {\n\n\t\t\tString superclass = sourceClass.getMetadata().getSuperClassName();\n\t\t\t// java\u5305\u7684\u7236\u7c7b\u548c\u5df2\u7ecf\u5904\u7406\u8fc7\u7684\u7236\u7c7b\u4e0d\u5904\u7406\n\t\t\tif (superclass != null && !superclass.startsWith("java") &&\n\t\t\t\t\t!this.knownSuperclasses.containsKey(superclass)) {\n\t\t\t\t// \u6807\u8bb0\u7236\u7c7b\u5df2\u7ecf\u5904\u7406\u8fc7\n\t\t\t\tthis.knownSuperclasses.put(superclass, configClass);\n\t\t\t\t// \u8fd4\u56de\u7236\u7c7b\u7684SourceClass\u518d\u6b21\u8fdb\u884c\u9012\u5f52\u5904\u7406\n\t\t\t\treturn sourceClass.getSuperClass();\n\t\t\t}\n\t\t}\n\t\t// \u6ca1\u6709\u7236\u7c7b\u5904\u7406\u5b8c\u6210\n\t\treturn null;\n\t}\n'})}),"\n",(0,s.jsx)(n.h5,{id:"211--component\u6ce8\u89e3\u7684\u5904\u7406",children:"2.1.1  @Component\u6ce8\u89e3\u7684\u5904\u7406"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"//\u5224\u65ad@configuration\u6ce8\u89e3\u7684\u7c7b\u4e0a\u9762\u662f\u5426\u5305\u542b\u6709@Component\u6ce8\u89e3 \nif (configClass.getMetadata().isAnnotated(Component.class.getName())) {\n\tprocessMemberClasses(configClass, sourceClass);\n}\n"})}),"\n",(0,s.jsx)(n.h5,{id:"212-propertysourcespropertysource-\u6ce8\u89e3\u7684\u89e3\u6790",children:"2.1.2 @PropertySources\u3001@PropertySource \u6ce8\u89e3\u7684\u89e3\u6790"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"\t\tfor (AnnotationAttributes propertySource : AnnotationConfigUtils.attributesForRepeatable(\n\t\t\t\tsourceClass.getMetadata(), PropertySources.class,\n\t\t\t\torg.springframework.context.annotation.PropertySource.class)) {\n\t\t\tif (this.environment instanceof ConfigurableEnvironment) {\n\t\t\t\tprocessPropertySource(propertySource);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//\u7701\u7565\u6253\u5370\u65e5\u5fd7\n\t\t\t}\n\t\t}\n"})}),"\n",(0,s.jsx)(n.h5,{id:"213-componentscansclass-componentscanclass\u6ce8\u89e3\u7684\u89e3\u6790",children:"2.1.3 @ComponentScans.class, @ComponentScan.class\u6ce8\u89e3\u7684\u89e3\u6790"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"\t\tSet<AnnotationAttributes> componentScans = AnnotationConfigUtils.attributesForRepeatable(\n\t\t\t\tsourceClass.getMetadata(), ComponentScans.class, ComponentScan.class);\n\t\tif (!componentScans.isEmpty() &&\n\t\t\t\t!this.conditionEvaluator.shouldSkip(sourceClass.getMetadata(), ConfigurationPhase.REGISTER_BEAN)) {\n\t\t\tfor (AnnotationAttributes componentScan : componentScans) {\n\t\t\t\t//\u6dfb\u52a0\u6709@ComponentScan\u6ce8\u89e3\u7684\u7c7b -> \u7acb\u523b\u626b\u63cf\n\t\t\t\tSet<BeanDefinitionHolder> scannedBeanDefinitions =\n\t\t\t\t\t\tthis.componentScanParser.parse(componentScan, sourceClass.getMetadata().getClassName());\n\t\t\t\t//\u68c0\u67e5\u5df2\u626b\u63cf\u7684\u5b9a\u4e49\u96c6\u4ee5\u83b7\u5f97\u66f4\u591a\u7684\u914d\u7f6e\u7c7b\uff0c\u5e76\u5728\u9700\u8981\u65f6\u8fdb\u884c\u9012\u5f52\u89e3\u6790\n\t\t\t\tfor (BeanDefinitionHolder holder : scannedBeanDefinitions) {\n\t\t\t\t\tBeanDefinition bdCand = holder.getBeanDefinition().getOriginatingBeanDefinition();\n\t\t\t\t\tif (bdCand == null) {\n\t\t\t\t\t\tbdCand = holder.getBeanDefinition();\n\t\t\t\t\t}\n                    //\u5224\u65ad\u662f\u5426\u6709\u914d\u7f6e@Configuration\uff0c\u7136\u540e\u9012\u5f52\u8c03\u7528\u89e3\u6790\n\t\t\t\t\tif (ConfigurationClassUtils.checkConfigurationClassCandidate(bdCand, this.metadataReaderFactory)) {\n\t\t\t\t\t\tparse(bdCand.getBeanClassName(), holder.getBeanName());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n"})}),"\n",(0,s.jsx)(n.h5,{id:"214-import\u6ce8\u89e3\u7684\u89e3\u6790",children:"2.1.4 @Import\u6ce8\u89e3\u7684\u89e3\u6790"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// Process any @Import annotations\nprocessImports(configClass, sourceClass, getImports(sourceClass), true);\n\nprivate void processImports(ConfigurationClass configClass, SourceClass currentSourceClass,\n\t\t\tCollection<SourceClass> importCandidates, boolean checkForCircularImports) {\n\n\t\tif (importCandidates.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (checkForCircularImports && isChainedImportOnStack(configClass)) {\n\t\t\tthis.problemReporter.error(new CircularImportProblem(configClass, this.importStack));\n\t\t}\n\t\telse {\n\t\t\tthis.importStack.push(configClass);\n\t\t\ttry {\n\t\t\t\tfor (SourceClass candidate : importCandidates) {\n\t\t\t\t\tif (candidate.isAssignable(ImportSelector.class)) {\n\t\t\t\t\t\t// \u5904\u7406ImportSelector\u5b9e\u73b0\u7c7b\n\t\t\t\t\t\tClass<?> candidateClass = candidate.loadClass();\n\t\t\t\t\t\tImportSelector selector = ParserStrategyUtils.instantiateClass(candidateClass, ImportSelector.class,\n\t\t\t\t\t\t\t\tthis.environment, this.resourceLoader, this.registry);\n\t\t\t\t\t\tif (selector instanceof DeferredImportSelector) {\n                            //\u5224\u65ad\u662f\u5426\u4e3aDeferredImportSelector\u7684\u5b9e\u73b0--\u5ef6\u8fdf\u5904\u7406\n\t\t\t\t\t\t\tthis.deferredImportSelectorHandler.handle(configClass, (DeferredImportSelector) selector);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tString[] importClassNames = selector.selectImports(currentSourceClass.getMetadata());\n\t\t\t\t\t\t\tCollection<SourceClass> importSourceClasses = asSourceClasses(importClassNames);\n\t\t\t\t\t\t\tprocessImports(configClass, currentSourceClass, importSourceClasses, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (candidate.isAssignable(ImportBeanDefinitionRegistrar.class)) {\n\t\t\t\t\t\t//ImportBeanDefinitionRegistrar\u63a5\u53e3\u5b9e\u73b0\u7684\u7684\u5904\u7406\n\t\t\t\t\t\tClass<?> candidateClass = candidate.loadClass();\n\t\t\t\t\t\tImportBeanDefinitionRegistrar registrar =\n\t\t\t\t\t\t\t\tParserStrategyUtils.instantiateClass(candidateClass, ImportBeanDefinitionRegistrar.class,\n\t\t\t\t\t\t\t\t\t\tthis.environment, this.resourceLoader, this.registry);\n\t\t\t\t\t\tconfigClass.addImportBeanDefinitionRegistrar(registrar, currentSourceClass.getMetadata());\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// \u5f53\u505aConfig\u7c7b\u6765\u5904\u7406\n\t\t\t\t\t\tthis.importStack.registerImport(\n\t\t\t\t\t\t\t\tcurrentSourceClass.getMetadata(), candidate.getMetadata().getClassName());\n\t\t\t\t\t\tprocessConfigurationClass(candidate.asConfigClass(configClass));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (BeanDefinitionStoreException ex) {\n\t\t\t\tthrow ex;\n\t\t\t}\n\t\t\tcatch (Throwable ex) {\n\t\t\t\tthrow new BeanDefinitionStoreException(\n\t\t\t\t\t\t"Failed to process import candidates for configuration class [" +\n\t\t\t\t\t\tconfigClass.getMetadata().getClassName() + "]", ex);\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tthis.importStack.pop();\n\t\t\t}\n\t\t}\n\t}\n'})}),"\n",(0,s.jsx)(n.h5,{id:"215-importresource\u6ce8\u89e3\u7684\u89e3\u6790",children:"2.1.5 @ImportResource\u6ce8\u89e3\u7684\u89e3\u6790"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'\t\tAnnotationAttributes importResource =\n\t\t\t\tAnnotationConfigUtils.attributesFor(sourceClass.getMetadata(), ImportResource.class);\n\t\tif (importResource != null) {\n\t\t\tString[] resources = importResource.getStringArray("locations");\n\t\t\tClass<? extends BeanDefinitionReader> readerClass = importResource.getClass("reader");\n\t\t\tfor (String resource : resources) {\n\t\t\t\tString resolvedResource = this.environment.resolveRequiredPlaceholders(resource);\n\t\t\t\tconfigClass.addImportedResource(resolvedResource, readerClass);\n\t\t\t}\n\t\t}\n'})}),"\n",(0,s.jsx)(n.h5,{id:"216-configuration\u914d\u7f6e\u7c7b\u4e2dbean\u6ce8\u89e3\u7684\u89e3\u6790",children:"2.1.6 @Configuration\u914d\u7f6e\u7c7b\u4e2d@Bean\u6ce8\u89e3\u7684\u89e3\u6790"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"Set<MethodMetadata> beanMethods = retrieveBeanMethodMetadata(sourceClass);\nfor (MethodMetadata methodMetadata : beanMethods) {\n\tconfigClass.addBeanMethod(new BeanMethod(methodMetadata, configClass));\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"3-\u7ec8\u7ed3",children:"3. \u7ec8\u7ed3"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"@Import\u81ea\u5b9a\u4e49\u6ce8\u89e3\u7684\u65f6\u5019\u53ef\u4ee5\u653e\u5728Bean\u4e0a\u9762"}),"\n"]})]})}function g(t={}){const{wrapper:n}={...(0,a.R)(),...t.components};return n?(0,s.jsx)(n,{...t,children:(0,s.jsx)(d,{...t})}):d(t)}},8453:(t,n,e)=>{e.d(n,{R:()=>o,x:()=>i});var s=e(6540);const a={},r=s.createContext(a);function o(t){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function i(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:o(t.components),s.createElement(r.Provider,{value:n},t.children)}}}]);