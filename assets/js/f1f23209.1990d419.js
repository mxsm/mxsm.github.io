"use strict";(self.webpackChunkmxsm_website=self.webpackChunkmxsm_website||[]).push([[6610],{336:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>a,frontMatter:()=>i,metadata:()=>l,toc:()=>o});var r=s(4848),n=s(8453);const i={title:"RocketMQ5.0",sidebar_label:"Overview",hide_table_of_contents:!0,slug:"/rocketmq/rocketmq-rust"},c="rocketmq-rust",l={id:"rocketmq/rocketmq-rust/index",title:"RocketMQ5.0",description:"Welcome to Apache Rocketmq Rust implementation (Unofficial ). RocketMQ-Rust is a reimplementation of the Apache RocketMQ message middleware in the Rust language. This project aims to provide Rust developers with a high-performance and reliable message queue service, making full use of the features of the Rust language.",source:"@site/docs/rocketmq/rocketmq-rust/index.md",sourceDirName:"rocketmq/rocketmq-rust",slug:"/rocketmq/rocketmq-rust",permalink:"/docs/rocketmq/rocketmq-rust",draft:!1,unlisted:!1,editUrl:"https://github.com/mxsm/mxsm-website/edit/develop/docs/rocketmq/rocketmq-rust/index.md",tags:[],version:"current",lastUpdatedBy:"mxsm",lastUpdatedAt:1720344793e3,frontMatter:{title:"RocketMQ5.0",sidebar_label:"Overview",hide_table_of_contents:!0,slug:"/rocketmq/rocketmq-rust"},sidebar:"rocketmqrust",next:{title:"Rocketmq-rust name server",permalink:"/docs/rocketmq/rocketmq-rust/namesrv/namesrv-boot"}},d={},o=[{value:"RocketMQ-Rust Features",id:"rocketmq-rust-features",level:3},{value:"Getting Started",id:"getting-started",level:2},{value:"Requirements",id:"requirements",level:3},{value:"Run name server",id:"run-name-server",level:3},{value:"Modules",id:"modules",level:2},{value:"Name Server",id:"name-server",level:2},{value:"Contributing",id:"contributing",level:2},{value:"License",id:"license",level:2}];function h(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"rocketmq-rust",children:"rocketmq-rust"}),"\n",(0,r.jsxs)(t.p,{children:["Welcome to ",(0,r.jsx)(t.a,{href:"https://github.com/apache/rocketmq",children:"Apache Rocketmq"})," Rust implementation (Unofficial ). ",(0,r.jsx)(t.strong,{children:"RocketMQ-Rust"})," is a reimplementation of the Apache RocketMQ message middleware in the Rust language. This project aims to provide Rust developers with a high-performance and reliable message queue service, making full use of the features of the Rust language."]}),"\n",(0,r.jsx)(t.h3,{id:"rocketmq-rust-features",children:"RocketMQ-Rust Features"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Rust Language Advantages:"})," Leveraging the benefits of Rust, such as memory safety, zero-cost abstractions, and high concurrency performance, RocketMQ-Rust offers an efficient and reliable message middleware."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Asynchronous and Non-blocking Design:"})," RocketMQ-Rust takes full advantage of Rust's asynchronous programming capabilities, adopting a non-blocking design that supports high-concurrency message processing."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Ecosystem Integration:"})," As part of the Rust ecosystem, RocketMQ-Rust integrates well with other libraries and frameworks within the Rust ecosystem, providing flexible integration options for developers."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Cross-platform Support:"})," RocketMQ-Rust supports multiple platforms, including Linux, Windows, macOS, making it convenient for use in different environments."]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,r.jsx)(t.h3,{id:"requirements",children:"Requirements"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"rust toolchain MSRV is 1.75.(stable,nightly)"}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"run-name-server",children:"Run name server"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Run the following command to see usage\uff1a"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"windows platform"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-cmd",children:"cargo run --bin rocketmq-namesrv-rust -- --help\n\nRocketMQ Name server(Rust)\n\nUsage: rocketmq-namesrv-rust.exe [OPTIONS]\n\nOptions:\n  -p, --port <PORT>  rocketmq name server port [default: 9876]\n  -i, --ip <IP>      rocketmq name server ip [default: 127.0.0.1]\n  -h, --help         Print help\n  -V, --version      Print version\n"})}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Linux platform"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-shell",children:"$ cargo run --bin rocketmq-namesrv-rust -- --help\n\nRocketMQ Name server(Rust)\n\nUsage: rocketmq-namesrv-rust [OPTIONS]\n\nOptions:\n  -p, --port <PORT>  rocketmq name server port [default: 9876]\n  -i, --ip <IP>      rocketmq name server ip [default: 127.0.0.1]\n  -h, --help         Print help\n  -V, --version      Print version\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Run the following command to start the name server"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-shell",children:"cargo run --bin rocketmq-namesrv-rust\n"})}),"\n",(0,r.jsx)(t.h2,{id:"modules",children:"Modules"}),"\n",(0,r.jsx)(t.p,{children:"The existing RocketMQ has the following functional modules:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.strong,{children:"Name Server"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.strong,{children:"Broker"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.strong,{children:"Store (Local Storage)"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.strong,{children:"Controller (High Availability)"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.strong,{children:"Client (SDK)"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.strong,{children:"Proxy"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.strong,{children:"Tiered Store (Tiered Storage Module)"})}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["The specific functions of each module can be referred to in the ",(0,r.jsx)(t.a,{href:"https://github.com/apache/rocketmq/tree/develop/docs",children:"official RocketMQ documentation"}),". The Rust implementation will be carried out sequentially in the following order."]}),"\n",(0,r.jsx)(t.h2,{id:"name-server",children:"Name Server"}),"\n",(0,r.jsx)(t.p,{children:"Feature list:"}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:["Not support: ","\ud83d\udc94"," ","\u274c"]}),"\n",(0,r.jsxs)(t.p,{children:["Base support: ","\u2764\ufe0f"," ","\u2705"]}),"\n",(0,r.jsxs)(t.p,{children:["Perfect support: ","\ud83d\udc96"," ","\u2705"]}),"\n"]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Feature"}),(0,r.jsx)(t.th,{children:"request code"}),(0,r.jsx)(t.th,{children:"Support"}),(0,r.jsx)(t.th,{children:"remark"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Put KV Config"}),(0,r.jsx)(t.td,{children:"100"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc96"," ","\u2705"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Get KV Config"}),(0,r.jsx)(t.td,{children:"101"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc96"," ","\u2705"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Delete KV Config"}),(0,r.jsx)(t.td,{children:"102"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc96"," ","\u2705"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Get kv list by namespace"}),(0,r.jsx)(t.td,{children:"219"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc96"," ","\u2705"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Query Data Version"}),(0,r.jsx)(t.td,{children:"322"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc96"," ","\u2705"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Register Broker"}),(0,r.jsx)(t.td,{children:"103"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc96"," ","\u2705"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Unregister Broker"}),(0,r.jsx)(t.td,{children:"104"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc96"," ","\u2705"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Broker Heartbeat"}),(0,r.jsx)(t.td,{children:"904"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc96"," ","\u2705"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Get broker member_group"}),(0,r.jsx)(t.td,{children:"901"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc96"," ","\u2705"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Get broker cluster info"}),(0,r.jsx)(t.td,{children:"106"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc96"," ","\u2705"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Wipe write perm of boker"}),(0,r.jsx)(t.td,{children:"205"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc96"," ","\u2705"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Add write perm of brober"}),(0,r.jsx)(t.td,{children:"327"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc96"," ","\u2705"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Get all topic list from name server"}),(0,r.jsx)(t.td,{children:"206"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc96"," ","\u2705"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Delete topic in name server"}),(0,r.jsx)(t.td,{children:"216"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc96"," ","\u2705"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Register topic in name server"}),(0,r.jsx)(t.td,{children:"217"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc96"," ","\u2705"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Get topics by cluster"}),(0,r.jsx)(t.td,{children:"224"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc96"," ","\u2705"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Get system topic list from name server"}),(0,r.jsx)(t.td,{children:"304"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc96"," ","\u2705"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Get unit topic list"}),(0,r.jsx)(t.td,{children:"311"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc96"," ","\u2705"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Get has unit sub topic list"}),(0,r.jsx)(t.td,{children:"312"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc96"," ","\u2705"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Get has unit sub ununit topic list"}),(0,r.jsx)(t.td,{children:"313"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc96"," ","\u2705"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Update name server config"}),(0,r.jsx)(t.td,{children:"318"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc94"," ","\u274c"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Get name server config"}),(0,r.jsx)(t.td,{children:"318"}),(0,r.jsxs)(t.td,{children:["\ud83d\udc94"," ","\u274c"]}),(0,r.jsx)(t.td,{})]})]})]}),"\n",(0,r.jsx)(t.p,{children:"Other module implementations will be done subsequently, starting with the Rust implementation of the Name Server. The goal is to achieve functionality similar to the Java version."}),"\n",(0,r.jsx)(t.h2,{id:"contributing",children:"Contributing"}),"\n",(0,r.jsx)(t.p,{children:"Contributions to code, issue reporting, and suggestions are welcome. The development of RocketMQ-Rust relies on the support of developers. Let's collaborate to advance Rust in the message middleware domain."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:"https://repobeats.axiom.co/api/embed/6ca125de92b36e1f78c6681d0a1296b8958adea1.svg",alt:"Alt",title:"Repobeats analytics image"})}),"\n",(0,r.jsx)("a",{href:"https://github.com/mxsm/rocketmq-rust/graphs/contributors",children:(0,r.jsx)("img",{src:"https://contrib.rocks/image?repo=mxsm/rocketmq-rust&anon=1"})}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"center"},children:(0,r.jsx)(t.strong,{children:"Stargazers Over Time"})}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:(0,r.jsx)(t.strong,{children:"Contributors Over Time"})})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.a,{href:"https://api.star-history.com/svg?repos=mxsm/rocketmq-rust&type=Date",children:(0,r.jsx)(t.img,{src:"https://api.star-history.com/svg?repos=mxsm/rocketmq-rust&type=Date",alt:"Stargazers over time"})})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.a,{href:"https://git-contributor.com?chart=contributorOverTime&repo=mxsm/rocketmq-rust",children:(0,r.jsx)(t.img,{src:"https://contributor-overtime-api.git-contributor.com/contributors-svg?chart=contributorOverTime&repo=mxsm/rocketmq-rust",alt:"GitHub Contributor Over Time"})})})]})})]}),"\n",(0,r.jsx)(t.h2,{id:"license",children:"License"}),"\n",(0,r.jsxs)(t.p,{children:["RocketMQ-Rust is licensed under the ",(0,r.jsx)(t.a,{href:"https://github.com/mxsm/rocketmq-rust/blob/main/LICENSE-APACHE",children:"Apache License 2.0"})," and ",(0,r.jsx)(t.a,{href:"https://github.com/mxsm/rocketmq-rust/blob/main/LICENSE-MIT",children:"MIT license"})]})]})}function a(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>l});var r=s(6540);const n={},i=r.createContext(n);function c(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);