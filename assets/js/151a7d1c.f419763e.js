"use strict";(self.webpackChunkmxsm_website=self.webpackChunkmxsm_website||[]).push([[8515],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),u=s(n),k=a,d=u["".concat(i,".").concat(k)]||u[k]||c[k]||l;return n?r.createElement(d,o(o({ref:t},m),{},{components:n})):r.createElement(d,o({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=k;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[u]="string"==typeof e?e:a,o[1]=p;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},6110:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const l={title:"Rust\u667a\u80fd\u6307\u9488(Smart Pointer)",sidebar_label:"Rust\u667a\u80fd\u6307\u9488(Smart Pointer)",linkTitle:"Rust\u667a\u80fd\u6307\u9488(Smart Pointer)",weight:202308272034,description:"Rust\u667a\u80fd\u6307\u9488(Smart Pointer)"},o=void 0,p={unversionedId:"rust/rust-learn/concepts/smart-pointer",id:"rust/rust-learn/concepts/smart-pointer",title:"Rust\u667a\u80fd\u6307\u9488(Smart Pointer)",description:"Rust\u667a\u80fd\u6307\u9488(Smart Pointer)",source:"@site/docs/rust/rust-learn/concepts/04-smart-pointer.md",sourceDirName:"rust/rust-learn/concepts",slug:"/rust/rust-learn/concepts/smart-pointer",permalink:"/docs/rust/rust-learn/concepts/smart-pointer",draft:!1,editUrl:"https://github.com/mxsm/mxsm-website/edit/develop/docs/rust/rust-learn/concepts/04-smart-pointer.md",tags:[],version:"current",lastUpdatedBy:"mxsm",lastUpdatedAt:1694344731,formattedLastUpdatedAt:"Sep 10, 2023",sidebarPosition:4,frontMatter:{title:"Rust\u667a\u80fd\u6307\u9488(Smart Pointer)",sidebar_label:"Rust\u667a\u80fd\u6307\u9488(Smart Pointer)",linkTitle:"Rust\u667a\u80fd\u6307\u9488(Smart Pointer)",weight:202308272034,description:"Rust\u667a\u80fd\u6307\u9488(Smart Pointer)"},sidebar:"rustLearn",previous:{title:"Rust\u751f\u547d\u5468\u671f(lifetime)\u4e0e\u5f15\u7528\u6709\u6548\u6027",permalink:"/docs/rust/rust-learn/concepts/lifetime"},next:{title:"Understanding Ownership",permalink:"/docs/rust/rust-learn/error"}},i={},s=[{value:"1. \u4ec0\u4e48\u662f\u667a\u80fd\u6307\u9488",id:"1-\u4ec0\u4e48\u662f\u667a\u80fd\u6307\u9488",level:2},{value:"2. \u667a\u80fd\u6307\u9488\u7684\u5b9e\u73b0\u57fa\u7840",id:"2-\u667a\u80fd\u6307\u9488\u7684\u5b9e\u73b0\u57fa\u7840",level:2},{value:"2.1.Box&lt;T&gt;\u667a\u80fd\u6307\u9488",id:"21boxt\u667a\u80fd\u6307\u9488",level:3},{value:"3. \u81ea\u5b9a\u4e49\u667a\u80fd\u6307\u9488",id:"3-\u81ea\u5b9a\u4e49\u667a\u80fd\u6307\u9488",level:2},{value:"4.\u603b\u7ed3",id:"4\u603b\u7ed3",level:2}],m={toc:s},u="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"1-\u4ec0\u4e48\u662f\u667a\u80fd\u6307\u9488"},"1. \u4ec0\u4e48\u662f\u667a\u80fd\u6307\u9488"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u6307\u9488")," \uff08",(0,a.kt)("em",{parentName:"p"},"pointer"),"\uff09\u662f\u4e00\u4e2a\u5305\u542b\u5185\u5b58\u5730\u5740\u7684\u53d8\u91cf\u7684\u901a\u7528\u6982\u5ff5\u3002\u4f7f\u7528C\u548cC++\u7684\u4eba\u5c31\u4f1a\u7ecf\u5e38\u7684\u9047\u5230\u6307\u9488\u3002\u800cJava\u7684\u5f00\u53d1\u8005\u6307\u9488\u5df2\u7ecf\u88ab\u5c4f\u853d\u3002\u5f00\u53d1\u4eba\u5458\u57fa\u672c\u4e0a\u4e0d\u8981\u53bb\u5173\u5fc3\u3002\u90a3\u4e48Rust\u7684\u667a\u80fd\u6307\u9488\u53c8\u662f\u4ec0\u4e48\uff1f"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u667a\u80fd\u6307\u9488"),"\uff08",(0,a.kt)("em",{parentName:"p"},"smart pointers"),"\uff09\u662f\u4e00\u7c7b",(0,a.kt)("strong",{parentName:"p"},"\u6570\u636e\u7ed3\u6784(\u7ed3\u6784\u4f53)"),"\uff0c\u5b83\u4eec\u7684\u8868\u73b0\u7c7b\u4f3c\u6307\u9488\uff0c\u4f46\u662f\u4e5f\u62e5\u6709\u989d\u5916\u7684\u5143\u6570\u636e\u548c\u529f\u80fd\u3002"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u6ce8\u610f\uff1a\u667a\u80fd\u6307\u9488\u7684\u6982\u5ff5\u5e76\u975e Rust \u72ec\u6709\uff1a\u5176\u8d77\u6e90\u4e8e C++\uff0c\u4e5f\u5b58\u5728\u4e8e\u5176\u4ed6\u8bed\u8a00\u4e2d")),(0,a.kt)("p",null,"\u666e\u901a\u6307\u9488(\u5f15\u7528)\u548c\u667a\u80fd\u6307\u9488\u7684\u533a\u522b\uff1a\u5f15\u7528\u662f\u4e00\u7c7b\u53ea\u501f\u7528\u6570\u636e\u7684\u6307\u9488\uff0c\u5728\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u667a\u80fd\u6307\u9488 ",(0,a.kt)("strong",{parentName:"p"},"\u62e5\u6709")," \u5b83\u4eec\u6307\u5411\u7684\u6570\u636e\u3002"),(0,a.kt)("p",null,"\u667a\u80fd\u6307\u9488\u662f\u4e00\u7c7b\u975e\u57fa\u7840\u6570\u636e\u7684\u6570\u636e\u7ed3\u6784\u6240\u4ee5\u667a\u80fd\u6307\u9488\u901a\u5e38\u4f7f\u7528\u7ed3\u6784\u4f53\u5b9e\u73b0\u3002"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u8bf4\u660e\uff1a \u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0Deref\u548cDrop trait\u81ea\u5b9a\u4e49\u667a\u80fd\u6307\u9488"),(0,a.kt)("p",{parentName:"blockquote"},"Rust\u6807\u51c6\u5e93\u4e2d\u63d0\u4f9b\u4e86\u8bb8\u591a\u4e0d\u540c\u7684\u667a\u80fd\u6307\u9488\uff1aString",(0,a.kt)("inlineCode",{parentName:"p"},"Vec<T>"),"\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"Box<T>"),"\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"Rc<T>"),"\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"Arc<T>"),"\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"Weak<T>"),"\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"Cell<T>"),"\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"RefCell<T>"),"\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"UnsafeCell<T>"))),(0,a.kt)("p",null,"\u6807\u51c6\u5e93\u4e2d\u6700\u5e38\u7528\u7684\u667a\u80fd\u6307\u9488\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"Box<T>"),"\uff0c\u7528\u4e8e\u5728\u5806\u4e0a\u5206\u914d\u503c")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"Rc<T>"),"\uff0c\u4e00\u4e2a\u5f15\u7528\u8ba1\u6570\u7c7b\u578b\uff0c\u5176\u6570\u636e\u53ef\u4ee5\u6709\u591a\u4e2a\u6240\u6709\u8005")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"Ref<T>")," \u548c ",(0,a.kt)("inlineCode",{parentName:"strong"},"RefMut<T>"),"\uff0c\u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"strong"},"RefCell<T>")," \u8bbf\u95ee\uff08 ",(0,a.kt)("inlineCode",{parentName:"strong"},"RefCell<T>")," \u662f\u4e00\u4e2a\u5728\u8fd0\u884c\u65f6\u800c\u4e0d\u662f\u5728\u7f16\u8bd1\u65f6\u6267\u884c\u501f\u7528\u89c4\u5219\u7684\u7c7b\u578b\uff09"))),(0,a.kt)("h2",{id:"2-\u667a\u80fd\u6307\u9488\u7684\u5b9e\u73b0\u57fa\u7840"},"2. \u667a\u80fd\u6307\u9488\u7684\u5b9e\u73b0\u57fa\u7840"),(0,a.kt)("p",null,"\u667a\u80fd\u6307\u9488\u901a\u5e38\u7528\u7ed3\u6784\u4f53\u6765\u63d0\u73b0\uff0c",(0,a.kt)("strong",{parentName:"p"},"\u667a\u80fd\u6307\u9488\u533a\u522b\u4e8e\u5e38\u89c4\u7ed3\u6784\u4f53\u7684\u663e\u8457\u7279\u6027\u5728\u4e8e\u5176\u5b9e\u73b0\u4e86 ",(0,a.kt)("inlineCode",{parentName:"strong"},"Deref")," \u548c ",(0,a.kt)("inlineCode",{parentName:"strong"},"Drop")," trait\u3002 ")," ",(0,a.kt)("strong",{parentName:"p"},"\u5b9e\u73b0",(0,a.kt)("inlineCode",{parentName:"strong"},"Deref")," trait\u5141\u8bb8\u6211\u4eec\u91cd\u8f7d\u89e3\u5f15\u7528\u8fd0\u7b97\u7b26\uff08dereference operator\uff09")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"fn main() {\n    let a = &1;\n    let b = Box::new(1);\n    assert_eq!(1, *a);\n    assert_eq!(1, *b);\n}\n")),(0,a.kt)("h3",{id:"21boxt\u667a\u80fd\u6307\u9488"},"2.1.Box","<","T>\u667a\u80fd\u6307\u9488"),(0,a.kt)("p",null,"\u901a\u8fc7\u4e0a\u9762\u7684\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u667a\u80fd\u6307\u9488\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u6e90\u7801\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'#[lang = "owned_box"]\n#[fundamental]\n#[stable(feature = "rust1", since = "1.0.0")]\n// The declaration of the `Box` struct must be kept in sync with the\n// `alloc::alloc::box_free` function or ICEs will happen. See the comment\n// on `box_free` for more details.\npub struct Box<\n    T: ?Sized,\n    #[unstable(feature = "allocator_api", issue = "32838")] A: Allocator = Global,\n>(Unique<T>, A);\n')),(0,a.kt)("p",null,"\u901a\u8fc7\u4e0a\u9762\u7684\u6e90\u7801\u53ef\u4ee5\u77e5\u9053Box","<","T>\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u540c\u65f6\u5b9e\u73b0\u4e86\u5b9e\u73b0\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"Deref")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"Drop")," trait\u6211\u4eec\u770b\u4e00\u4e0b\u6e90\u7801\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'#[stable(feature = "rust1", since = "1.0.0")]\nunsafe impl<#[may_dangle] T: ?Sized, A: Allocator> Drop for Box<T, A> {\n    fn drop(&mut self) {\n        // FIXME: Do nothing, drop is currently performed by compiler.\n    }\n}\n\n#[stable(feature = "rust1", since = "1.0.0")]\nimpl<T: ?Sized, A: Allocator> Deref for Box<T, A> {\n    type Target = T;\n\n    fn deref(&self) -> &T {\n        &**self\n    }\n}\n')),(0,a.kt)("p",null,"\u901a\u8fc7\u4e0a\u9762\u7684\u6e90\u7801\u53ef\u4ee5\u53d1\u73b0drop\u5e76\u6ca1\u6709\u4efb\u4f55\u5b9e\u73b0\u3002"),(0,a.kt)("p",null,"\u4f8b\u5b50\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"}," let b = Box::new(5); //\u6570\u636e\u5b58\u50a8\u5728\u5806\u4e0a\u9762\n let c = 2; //\u6570\u636e\u5b58\u50a8\u5728\u6808\u4e0a\u9762\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Box<T>")," \u662f\u4e00\u79cd\u667a\u80fd\u6307\u9488\u7c7b\u578b\uff0c\u7528\u4e8e\u5728\u5806\u4e0a\u5206\u914d\u548c\u5b58\u50a8\u6570\u636e\uff0c\u5e76\u5728\u4e0d\u540c\u4f5c\u7528\u57df\u4e4b\u95f4\u5171\u4eab\u6240\u6709\u6743\u3002",(0,a.kt)("inlineCode",{parentName:"p"},"Box<T>")," \u7684\u4e3b\u8981\u4f7f\u7528\u573a\u666f\u662f\u5728\u9700\u8981\u52a8\u6001\u5206\u914d\u7684\u6570\u636e\uff0c\u4f46\u53c8\u9700\u8981\u5728\u7f16\u8bd1\u65f6\u77e5\u9053\u5927\u5c0f\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u3002"),(0,a.kt)("p",null,"\u4ee5\u4e0b\u662f\u4e00\u4e9b\u4f7f\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"Box<T>")," \u7684\u5e38\u89c1\u573a\u666f\uff0c\u5e76\u7ed9\u51fa\u76f8\u5e94\u7684\u4f8b\u5b50\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"\u52a8\u6001\u5206\u914d\u5927\u578b\u6570\u636e\u7ed3\u6784\uff1a")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"struct BigStruct {\n    // \u5927\u578b\u6570\u636e\u7ed3\u6784\n}\n\nfn create_big_struct() -> Box<BigStruct> {\n    let big_struct = BigStruct {\n        // \u521d\u59cb\u5316\u5927\u578b\u6570\u636e\u7ed3\u6784\n    };\n    Box::new(big_struct)\n}\n")))),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"\u5728\u9012\u5f52\u6570\u636e\u7ed3\u6784\u4e2d\u907f\u514d\u65e0\u9650\u5927\u5c0f\u95ee\u9898"),"\uff1a"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"enum LinkedList<T> {\n    Cons(T, Box<LinkedList<T>>),\n    Nil,\n}\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"\u5728 trait \u5bf9\u8c61\u4e2d\u5b58\u50a8\u7c7b\u578b\u5bf9\u8c61"),"\uff1a"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'trait Shape {\n    fn area(&self) -> f64;\n}\n\nstruct Circle {\n    radius: f64,\n}\n\nimpl Shape for Circle {\n    fn area(&self) -> f64 {\n        std::f64::consts::PI * self.radius * self.radius\n    }\n}\n\nfn main() {\n    let circle: Box<dyn Shape> = Box::new(Circle { radius: 5.0 });\n    println!("Circle area: {}", circle.area());\n}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"\u4f7f\u7528\u5728\u7f16\u8bd1\u65f6\u672a\u77e5\u5927\u5c0f\u7684\u7c7b\u578b"),"\uff1a"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"fn process_unknown_size_data(data: &[u8]) -> Box<[u8]> {\n    data.to_vec().into_boxed_slice()\n}\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"\u6784\u5efa\u9012\u5f52\u6570\u636e\u7ed3\u6784"),"\uff1a"),(0,a.kt)("p",{parentName:"li"},"\u8fd9\u4e2a\u548c\u7b2c\u4e8c\u4e2a\u5728\u9012\u5f52\u6570\u636e\u7ed3\u6784\u4e2d\u907f\u514d\u65e0\u9650\u5927\u5c0f\u95ee\u9898\u7c7b\u4f3c"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'#[derive(Debug)]\nstruct Node {\n value: i32,\n    next: Option<Box<Node>>,\n}\n\nfn main() {\n    let node1 = Node {\n     value: 1,\n        next: None,\n    };\n\n    let node2 = Node {\n     value: 2,\n        next: Some(Box::new(node1)),\n    };\n\n    println!("{:?}", node2);\n}\n')))),(0,a.kt)("p",null,"\u603b\u4e4b\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"Box<T>")," \u5728\u9700\u8981\u5728\u5806\u4e0a\u5206\u914d\u6570\u636e\u5e76\u4e14\u5728\u4e0d\u540c\u4f5c\u7528\u57df\u4e4b\u95f4\u5171\u4eab\u6240\u6709\u6743\u65f6\u975e\u5e38\u6709\u7528\u3002\u5b83\u662f Rust \u4e2d\u5904\u7406\u52a8\u6001\u5206\u914d\u7684\u6570\u636e\u7684\u91cd\u8981\u5de5\u5177\uff0c\u80fd\u591f\u5e2e\u52a9\u907f\u514d\u751f\u547d\u5468\u671f\u548c\u6240\u6709\u6743\u95ee\u9898\u3002"),(0,a.kt)("h2",{id:"3-\u81ea\u5b9a\u4e49\u667a\u80fd\u6307\u9488"},"3. \u81ea\u5b9a\u4e49\u667a\u80fd\u6307\u9488"),(0,a.kt)("p",null,"\u667a\u80fd\u6307\u9488\u7684\u5173\u952e\u5728\u4e8e\u5b9e\u73b0 ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Deref")," \u548c ",(0,a.kt)("inlineCode",{parentName:"strong"},"Drop")," trait")," \u3002 \u6240\u4ee5\u6211\u4eec\u81ea\u5b9a\u4e49\u4e5f\u5fc5\u987b\u5b9e\u73b0\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'use std::ops::Deref;\nfn main() {\n    let pointer = MxsmSmartPointer::new(1);\n    println!("{:?}", pointer);\n    assert_eq!(1,*pointer);\n}\n#[derive(Debug)]\npub struct MxsmSmartPointer{\n    num: i32\n}\n\nimpl MxsmSmartPointer{\n    fn new(num:i32)->Self{\n        Self{\n            num\n        }\n    }\n}\nimpl Drop for MxsmSmartPointer {\n    fn drop(&mut self) {\n        println!("Drop")\n    }\n}\nimpl Deref for  MxsmSmartPointer{\n    type Target = i32;\n    fn deref(&self) -> &Self::Target {\n        &self.num\n    }\n}\n')),(0,a.kt)("p",null,"\u8fd0\u884c\u4ee3\u7801\u7ed3\u679c\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"D:/develop/Rust/mxsm_application/target/debug/mxsm_application.exe\nMxsmSmartPointer { num: 1 }\nDrop\n\nProcess finished with exit code 0\n")),(0,a.kt)("h2",{id:"4\u603b\u7ed3"},"4.\u603b\u7ed3"),(0,a.kt)("p",null,"\u9996\u5148\u667a\u80fd\u6307\u9488\u7684\u57fa\u7840\u662f",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Deref")," \u548c ",(0,a.kt)("inlineCode",{parentName:"strong"},"Drop")," trait"),"\uff0c \u4e0a\u9762\u5217\u4e3e\u4e86Box\u667a\u80fd\u6307\u9488\u7684\u7528\u6cd5\u548c\u90e8\u5206\u7684\u6e90\u7801\uff0c\u540c\u65f6\u8ba9\u6211\u4eec\u77e5\u9053\u5982\u4f55\u81ea\u5b9a\u4e49\u76f8\u5173\u7684\u667a\u80fd\u6307\u9488\u3002Rust \u8bed\u8a00\u4e2d\u6709\u591a\u79cd\u667a\u80fd\u6307\u9488\u7c7b\u578b\uff0c\u5b83\u4eec\u5177\u6709\u4e0d\u540c\u7684\u7279\u70b9\u548c\u7528\u9014\u3002"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Rc","<","T>\uff1a\u5171\u4eab\u6240\u6709\u6743\u7684\u667a\u80fd\u6307\u9488\uff0c\u5141\u8bb8\u591a\u4e2a\u5f15\u7528\u540c\u65f6\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002Rc","<","T> \u5b9e\u73b0\u4e86\u6240\u6709\u6743\u6a21\u5f0f\uff0c\u5f53\u6240\u6709\u5f15\u7528\u90fd\u88ab\u5220\u9664\u65f6\uff0c\u5b83\u4f1a\u81ea\u52a8\u91ca\u653e\u8be5\u5bf9\u8c61\u7684\u5185\u5b58\u3002"),(0,a.kt)("li",{parentName:"ol"},"Arc","<","T>\uff1a\u4e0e Rc","<","T> \u7c7b\u4f3c\uff0c\u4f46\u662f\u5b83\u652f\u6301\u8de8\u7ebf\u7a0b\u5b89\u5168\u7684\u5171\u4eab\u6240\u6709\u6743\u3002"),(0,a.kt)("li",{parentName:"ol"},"Box","<","T>\uff1a\u8f7b\u91cf\u7ea7\u7684\u667a\u80fd\u6307\u9488\uff0c\u7528\u4e8e\u5206\u914d\u5806\u5185\u5b58\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u4e0d\u53ef\u53d8\u7684\u503c\u3002"),(0,a.kt)("li",{parentName:"ol"},"Ref","<","T>\uff1a\u4e0d\u53ef\u53d8\u7684\u667a\u80fd\u6307\u9488\uff0c\u7528\u4e8e\u6307\u5411\u4e00\u4e2a\u4e0d\u53ef\u53d8\u7684\u503c\u3002\u5b83\u4e0d\u80fd\u88ab\u590d\u5236\u6216\u79fb\u52a8\uff0c\u5e76\u4e14\u4fdd\u8bc1\u4e86\u6307\u5411\u7684\u503c\u5728\u6574\u4e2a\u751f\u547d\u5468\u671f\u5185\u4e0d\u4f1a\u88ab\u4fee\u6539\u3002"),(0,a.kt)("li",{parentName:"ol"},"Pin","<","T>\uff1a\u7c7b\u4f3c\u4e8e Ref","<","T>\uff0c\u4f46\u662f\u5b83\u53ef\u4ee5\u5728\u501f\u7528\u68c0\u67e5\u8fc7\u7a0b\u4e2d\u88ab\u56fa\u5b9a\uff0c\u4ee5\u786e\u4fdd\u5b83\u4e0d\u4f1a\u88ab\u79fb\u52a8\u6216\u5220\u9664\u3002"),(0,a.kt)("li",{parentName:"ol"},"Send","<","T>\uff1a\u7528\u4e8e\u5b9e\u73b0\u8de8\u7ebf\u7a0b\u5b89\u5168\u7684\u667a\u80fd\u6307\u9488\u3002\u5b83\u786e\u4fdd\u4e86\u5728\u4e0d\u540c\u7ebf\u7a0b\u4e2d\u4f7f\u7528\u7684\u667a\u80fd\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u662f\u5b89\u5168\u7684\u3002")),(0,a.kt)("p",null,"\u8fd9\u4e9b\u667a\u80fd\u6307\u9488\u7c7b\u578b\u5728 Rust \u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u5b83\u4eec\u63d0\u4f9b\u4e86\u9ad8\u6548\u3001\u5b89\u5168\u7684\u5185\u5b58\u7ba1\u7406\u65b9\u6cd5\uff0c\u5e2e\u52a9\u7a0b\u5e8f\u5458\u907f\u514d\u5e38\u89c1\u7684\u5185\u5b58\u95ee\u9898\uff0c\u5982\u5185\u5b58\u6cc4\u6f0f\u548c\u60ac\u7a7a\u6307\u9488\u3002"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u6211\u662f\u8682\u8681\u80cc\u5927\u8c61\uff0c\u6587\u7ae0\u5bf9\u4f60\u6709\u5e2e\u52a9\u7ed9",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mxsm/mxsm-website"},"\u9879\u76ee\u70b9\u4e2a\u2764"),"\u5173\u6ce8\u6211",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mxsm"},"GitHub:mxsm"),"\uff0c\u6587\u7ae0\u6709\u4e0d\u6b63\u786e\u7684\u5730\u65b9\u8bf7\u60a8\u65a7\u6b63,\u521b\u5efa",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mxsm/mxsm-website/issues"},"ISSUE\u63d0\u4ea4PR"),"~","\u8c22\u8c22! Emal:",(0,a.kt)("a",{parentName:"p",href:"mailto:mxsm@apache.com"},"mxsm@apache.com"))))}c.isMDXComponent=!0}}]);