"use strict";(self.webpackChunkmxsm_website=self.webpackChunkmxsm_website||[]).push([[4973],{3905:(e,n,r)=>{r.d(n,{Zo:()=>l,kt:()=>y});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},s=Object.keys(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=t.createContext({}),p=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},l=function(e){var n=p(e.components);return t.createElement(c.Provider,{value:n},e.children)},g="mdxType",P={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),g=p(r),d=a,y=g["".concat(c,".").concat(d)]||g[d]||P[d]||s;return r?t.createElement(y,o(o({ref:n},l),{},{components:r})):t.createElement(y,o({ref:n},l))}));function y(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=d;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[g]="string"==typeof e?e:a,o[1]=i;for(var p=2;p<s;p++)o[p]=r[p];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1408:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>P,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var t=r(7462),a=(r(7294),r(3905));const s={title:"ClassPathXmlApplicationContext\u6e90\u7801\u89e3\u6790",date:new Date("2019-02-26T00:00:00.000Z")},o=void 0,i={unversionedId:"spring/spring-framework/core-source-analysis/ClassPathXmlApplicationContext",id:"spring/spring-framework/core-source-analysis/ClassPathXmlApplicationContext",title:"ClassPathXmlApplicationContext\u6e90\u7801\u89e3\u6790",description:"1. ClassPathXmlApplicationContext\u6e90\u7801\u89e3\u6790",source:"@site/docs/spring/spring-framework/core-source-analysis/ClassPathXmlApplicationContext.md",sourceDirName:"spring/spring-framework/core-source-analysis",slug:"/spring/spring-framework/core-source-analysis/ClassPathXmlApplicationContext",permalink:"/docs/spring/spring-framework/core-source-analysis/ClassPathXmlApplicationContext",draft:!1,editUrl:"https://github.com/mxsm/mxsm-website/edit/develop/docs/spring/spring-framework/core-source-analysis/ClassPathXmlApplicationContext.md",tags:[],version:"current",lastUpdatedBy:"mxsm",lastUpdatedAt:1682736290,formattedLastUpdatedAt:"Apr 29, 2023",frontMatter:{title:"ClassPathXmlApplicationContext\u6e90\u7801\u89e3\u6790",date:"2019-02-26T00:00:00.000Z"},sidebar:"springframework",previous:{title:"BeanPostProcessor\u8bb2\u89e3",permalink:"/docs/spring/spring-framework/core-source-analysis/BeanPostProcessor"},next:{title:"ConfigurationClassPostProcessor\u6e90\u7801\u89e3\u6790",permalink:"/docs/spring/spring-framework/core-source-analysis/ConfigurationClassPostProcesso"}},c={},p=[{value:"1. ClassPathXmlApplicationContext\u6e90\u7801\u89e3\u6790",id:"1-classpathxmlapplicationcontext\u6e90\u7801\u89e3\u6790",level:3}],l={toc:p},g="wrapper";function P(e){let{components:n,...r}=e;return(0,a.kt)(g,(0,t.Z)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"1-classpathxmlapplicationcontext\u6e90\u7801\u89e3\u6790"},"1. ClassPathXmlApplicationContext\u6e90\u7801\u89e3\u6790"),(0,a.kt)("p",null,"\u4ece\u540d\u79f0\u53ef\u4ee5\u770b\u51fa\u6765\u8fd9\u4e2a ",(0,a.kt)("strong",{parentName:"p"},"ApplicationContext")," \u4e3b\u8981\u8d1f\u8d23Class Path \u7684xml\u5bf9Spring \u6846\u67b6\u7684\u89e3\u6790"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public class ClassPathXmlApplicationContext extends AbstractXmlApplicationContext {\n\n    @Nullable\n    private Resource[] configResources;\n\n    public ClassPathXmlApplicationContext() {\n    }\n\n    public ClassPathXmlApplicationContext(ApplicationContext parent) {\n        super(parent);\n    }\n\n    public ClassPathXmlApplicationContext(String configLocation) throws BeansException {\n        this(new String[] {configLocation}, true, null);\n    }\n\n    public ClassPathXmlApplicationContext(String... configLocations) throws BeansException {\n        this(configLocations, true, null);\n    }\n\n    public ClassPathXmlApplicationContext(String[] configLocations, @Nullable ApplicationContext parent)\n            throws BeansException {\n\n        this(configLocations, true, parent);\n    }\n\n    public ClassPathXmlApplicationContext(String[] configLocations, boolean refresh) throws BeansException {\n        this(configLocations, refresh, null);\n    }\n\n    public ClassPathXmlApplicationContext(\n            String[] configLocations, boolean refresh, @Nullable ApplicationContext parent)\n            throws BeansException {\n\n        super(parent);\n        setConfigLocations(configLocations);\n        if (refresh) {\n            refresh();\n        }\n    }\n    \n    public ClassPathXmlApplicationContext(String path, Class<?> clazz) throws BeansException {\n        this(new String[] {path}, clazz);\n    }\n\n    public ClassPathXmlApplicationContext(String[] paths, Class<?> clazz) throws BeansException {\n        this(paths, clazz, null);\n    }\n\n    public ClassPathXmlApplicationContext(String[] paths, Class<?> clazz, @Nullable ApplicationContext parent)\n            throws BeansException {\n\n        super(parent);\n        Assert.notNull(paths, "Path array must not be null");\n        Assert.notNull(clazz, "Class argument must not be null");\n        this.configResources = new Resource[paths.length];\n        for (int i = 0; i < paths.length; i++) {\n            this.configResources[i] = new ClassPathResource(paths[i], clazz);\n        }\n        refresh();\n    }\n\n\n    @Override\n    @Nullable\n    protected Resource[] getConfigResources() {\n        return this.configResources;\n    }\n\n}\n')),(0,a.kt)("p",null,"\u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\u6765\u4e3b\u8981\u5c31\u662f\u51e0\u4e2a ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"ClassPathXmlApplicationContext"))," \u7684\u6784\u9020\u51fd\u6570\u3002\u6784\u9020\u51fd\u6570\u7684\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\u3002\u901a\u8fc7\u83b7\u53d6\u5230 ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Resource"))," (\u5728Spring\u4e2d\u6240\u6709\u7684\u914d\u7f6e\u6587\u4ef6\u90fd\u88ab\u62bd\u8c61\u6210\u4e86\u4e00\u4e2a\u8d44\u6e90)\u3002\u4e3b\u8981\u7684\u901a\u8fc7\u8c03\u7528 ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"refresh()"))," \u65b9\u6cd5\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public abstract class AbstractApplicationContext extends DefaultResourceLoader\n        implements ConfigurableApplicationContext {\n\n    @Override\n    public void refresh() throws BeansException, IllegalStateException {\n        synchronized (this.startupShutdownMonitor) {\n            //\u51c6\u5907\u5237\u65b0\u5f53\u524d ApplicationContext.\n            prepareRefresh();\n\n            // \u544a\u8bc9\u5b50\u7c7b\u53bb\u5237\u65b0\u5185\u90e8\u7684Bean Factory--bean\u7684\u89e3\u6790\u548c\u52a0\u8f7dBean\u7684\u5b9a\u4e49\n            ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();\n\n\n            //\u51c6\u5907 bean factory \u80fd\u4f7f\u7528\u5f53\u524d\u7684context\n            prepareBeanFactory(beanFactory);\n\n            try {\n                //\u5141\u8bb8\u5728\u4e0a\u4e0b\u6587\u5b50\u7c7b\u4e2d\u5bf9bean\u5de5\u5382\u8fdb\u884c\u540e\u5904\u7406\n                postProcessBeanFactory(beanFactory);\n\n                //\u8c03\u7528 factory processors\u5728\u5f53\u524d context \u6ce8\u518c\u4e3aBeans\n                invokeBeanFactoryPostProcessors(beanFactory);\n\n                //\u6ce8\u518cBean\u7684\u540e\u7f6e\u5904\u7406\u5668\n                registerBeanPostProcessors(beanFactory);\n\n                // \u4e3a\u5f53\u524dcontext\u521d\u59cb\u5316\u6d88\u606f\u8d44\u6e90 .\n                initMessageSource();\n\n                // \u521d\u59cb\u5316\u4e8b\u4ef6\u591a\u8def\u901a\u9053.\n                initApplicationEventMulticaster();\n\n                // \u521d\u59cb\u5316\u5176\u4ed6\u7279\u6b8a\u7684beans\u5728\u7279\u6b8acontext\u5b50\u7c7b\n                onRefresh();\n\n                // \u68c0\u67e5\u548c\u6ce8\u518c\u76d1\u542c\n                registerListeners();\n\n                //\u5b9e\u4f8b\u5316\u6240\u6709\u7684\u5269\u4e0b\u7684\u5355\u4f8b(\u975e\u61d2\u52a0\u8f7d\u521d\u59cb\u5316)\n                finishBeanFactoryInitialization(beanFactory);\n\n                //\u53d1\u5e03\u5339\u914d\u4e8b\u4ef6.\n                finishRefresh();\n            }\n\n            catch (BeansException ex) {\n                if (logger.isWarnEnabled()) {\n                    logger.warn("Exception encountered during context initialization - " +\n                            "cancelling refresh attempt: " + ex);\n                }\n\n                // Destroy already created singletons to avoid dangling resources.\n                destroyBeans();\n\n                // Reset \'active\' flag.\n                cancelRefresh(ex);\n\n                // Propagate exception to caller.\n                throw ex;\n            }\n\n            finally {\n                // Reset common introspection caches in Spring\'s core, since we\n                // might not ever need metadata for singleton beans anymore...\n                resetCommonCaches();\n            }\n        }\n    }\n\n}\n')),(0,a.kt)("p",null,"\u770b\u4e00\u4e0b\u4e0a\u9762\u4ee3\u7801\u7684\u6d41\u7a0b\u56fe\u89e3\uff1a"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://github.com/mxsm/document/blob/master/image/Spring/Springframework/AbstractApplicationContextReflash%E8%87%AA%E8%A1%8C%E6%B5%81%E7%A8%8B%E5%9B%BE.png?raw=true",alt:null})),(0,a.kt)("p",null,"\u4e0a\u9762\u4ee3\u7801\u7701\u7565\u4e86\u5176\u4ed6\u65b9\u6cd5\u3002\u63a5\u4e0b\u6765\u4e00\u4e2a\u4e2a\u6765\u89e3\u6790\u65b9\u6cd5\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"prepareRefresh()"))," "),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},'protected void prepareRefresh() {\n    // \u9996\u5148\u6807\u8bb0\u4e3aactive\u72b6\u6001\n    this.startupDate = System.currentTimeMillis();\n    this.closed.set(false);\n    this.active.set(true);\n\n    if (logger.isDebugEnabled()) {\n        if (logger.isTraceEnabled()) {\n            logger.trace("Refreshing " + this);\n        }\n        else {\n            logger.debug("Refreshing " + getDisplayName());\n        }\n    }\n\n    // \u5728context\u4e2d\u521d\u59cb\u5316\u4efb\u4f55\u6709\u5360\u4f4d\u7b26\u7684\u8d44\u6e90----\u7531AbstractApplicationContext\u7684\u5b50\u7c7b\u5b9e\u73b0\n    initPropertySources();\n\n    //\u9a8c\u8bc1\u4e00\u4e9b\u5fc5\u987b\u6709\u7684\u5c5e\u6027\n    getEnvironment().validateRequiredProperties();\n\n    // \u5b58\u50a8\u51c6\u5907\u5237\u65b0 ApplicationListeners...\n    if (this.earlyApplicationListeners == null) {\n        this.earlyApplicationListeners = new LinkedHashSet<>(this.applicationListeners);\n    }\n    else {\n        // \u91cd\u7f6e\u672c\u5730\u7684\n        this.applicationListeners.clear();\n        this.applicationListeners.addAll(this.earlyApplicationListeners);\n    }\n    this.earlyApplicationEvents = new LinkedHashSet<>();\n}\n')),(0,a.kt)("p",{parentName:"li"},"\u770b\u4e00\u4e0b\u5728 ",(0,a.kt)("strong",{parentName:"p"},"prepareRefresh")," \u65b9\u6cd5\u4e2d\u7684\u51e0\u4e2a\u4e3b\u8981\u7684\u65b9\u6cd5\uff1a"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"initPropertySources()"))," \u8be5\u65b9\u6cd5\u4e3b\u8981\u7528\u4e8e\u521d\u59cb\u5316\u5c5e\u6027\u8d44\u6e90\u5728\u5b50\u7c7b\u4e2d\u8fdb\u884c\u5b9e\u73b0\u3002\u5bf9\u4e8e\u4e0d\u540c\u7684\u5b50\u7c7b\u5b9e\u73b0\u7684\u65b9\u5f0f\u4e0d\u540c\u3002\u5bf9\u4e8e\u73b0\u5728\u6211\u4eec\u7814\u7a76\u7684\u662f ",(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"ClassPathXmlApplicationContext")),"  \u3002\u901a\u8fc7\u4ee3\u7801\u7814\u7a76\u53d1\u73b0\u5728\u8fd9\u4e2a\u7c7b\u4e2d\u662f\u6ca1\u6709\u5b9e\u73b0\u7684\u3002"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory()"))),(0,a.kt)("p",{parentName:"li"},"\u63a5\u4e0b\u6765\u770b\u4e00\u4e0b ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"obtainFreshBeanFactory"))," \u65b9\u6cd5\u7684\u4ee3\u7801\uff1a"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"protected ConfigurableListableBeanFactory obtainFreshBeanFactory() {\n        refreshBeanFactory();\n        return getBeanFactory();\n}\n")),(0,a.kt)("p",{parentName:"li"},"\u5305\u542b\u4e86\u4e24\u4e2a\u65b9\u6cd5\u5206\u522b\u662f\uff1a"),(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"refreshBeanFactory --- \u62bd\u8c61\u65b9\u6cd5\u7531\u5b50\u7c7b(AbstractRefreshableApplicationContext)\u5b9e\u73b0")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"protected final void refreshBeanFactory() throws BeansException {\n        //\u5224\u65ad\u662f\u5426\u6709BeanFactory\n        if (hasBeanFactory()) {\n            destroyBeans();\n            closeBeanFactory();\n        }\n        try {\n            //\u91cd\u65b0\u521b\u5efaBeanFactory\n            DefaultListableBeanFactory beanFactory = createBeanFactory();\n            //\u8bbe\u7f6e\u5e8f\u5217\u5316ID\n            beanFactory.setSerializationId(getId());\n            customizeBeanFactory(beanFactory);\n            //\u52a0\u8f7dBean\u7684\u5b9a\u4e49---\u8fd9\u91cc\u5c31\u662f\u52a0\u8f7d\u5b9a\u4e49Spring Bean \u7684\u5b9a\u4e49\u52a0\u8f7d\u5230 BeanFactory\n            //\u8fd9\u4e2a\u65b9\u6cd5\u662f\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\u7531\u5b50\u7c7b\u5b9e\u73b0\n            loadBeanDefinitions(beanFactory);\n            synchronized (this.beanFactoryMonitor) {\n                this.beanFactory = beanFactory;\n            }\n        }\n        catch (IOException ex) {\n            //\u7701\u7565\u3002\u3002\u3002\u3002 \u629b\u51fa\u9519\u8bef\n        }\n    }\n")),(0,a.kt)("p",{parentName:"li"},"\u5bf9\u4e8e ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"ClassPathXmlApplicationContext"))," \u8fd9\u4e2a\u65b9\u6cd5\u7684\u5b9e\u73b0\u7684\u5b50\u7c7b\u662f  ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"AbstractXmlApplicationContext"))," \u4e0b\u9762\u6765\u7c97\u7565\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u73b0\uff1a"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"    @Override\n    protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) throws BeansException, IOException {\n        //\u521b\u5efa\u4e00\u4e2aXML\u5bf9\u5e94\u7684\u5b9a\u4e49Reader\n        XmlBeanDefinitionReader beanDefinitionReader = new XmlBeanDefinitionReader(beanFactory);\n  \n        //\u8bbe\u7f6e Environment ResourceLoader EntityResolver\n        beanDefinitionReader.setEnvironment(this.getEnvironment());\n        beanDefinitionReader.setResourceLoader(this);\n        beanDefinitionReader.setEntityResolver(new ResourceEntityResolver(this));\n  \n        //\u521d\u59cb\u5316Reader\n        initBeanDefinitionReader(beanDefinitionReader);\n        //\u52a0\u8f7dBean\u7684\u5b9a\u4e49\n        loadBeanDefinitions(beanDefinitionReader);\n    }\n"))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"getBeanFactory --- \u62bd\u8c61\u65b9\u6cd5\u7531\u5b50\u7c7b(AbstractRefreshableApplicationContext)\u5b9e\u73b0")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"@Override\n    public final ConfigurableListableBeanFactory getBeanFactory() {\n")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},'    synchronized (this.beanFactoryMonitor) {\n        if (this.beanFactory == null) {\n            throw new IllegalStateException("BeanFactory not initialized or already closed - " +\n                    "call \'refresh\' before accessing beans via the ApplicationContext");\n        }\n        return this.beanFactory;\n    }\n}\n')),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"\n\n"))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"prepareBeanFactory(beanFactory)"))),(0,a.kt)("p",{parentName:"li"},"\u4e3b\u8981\u5bf9bean Factory \u8fdb\u884c\u8bbe\u7f6e"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"protected void prepareBeanFactory(ConfigurableListableBeanFactory beanFactory) {\n        // \u8bbe\u7f6eBean\u7684\u7c7b\u52a0\u8f7d\u5668.\n        beanFactory.setBeanClassLoader(getClassLoader());\n        //\u8bbe\u7f6eBean\u8868\u8fbe\u5f0f\u89e3\u6790\u5668\n        beanFactory.setBeanExpressionResolver(new StandardBeanExpressionResolver(beanFactory.getBeanClassLoader()));\n        //\u8bbe\u7f6e\u5c5e\u6027\n        beanFactory.addPropertyEditorRegistrar(new ResourceEditorRegistrar(this, getEnvironment()));\n\n        // \u6dfb\u52a0Context\u4e0a\u4e0b\u6587\u5904\u7406 *Aware\u5904\u7406\u5668\n        beanFactory.addBeanPostProcessor(new ApplicationContextAwareProcessor(this));\n        //\u8bbe\u7f6e\u5ffd\u7565*Aware\u4f9d\u8d56--\u4e0a\u9762\u7684ApplicationContextAwareProcessor\u5df2\u7ecf\u5904\u7406\u4e86\n        beanFactory.ignoreDependencyInterface(EnvironmentAware.class);\n        beanFactory.ignoreDependencyInterface(EmbeddedValueResolverAware.class);\n        beanFactory.ignoreDependencyInterface(ResourceLoaderAware.class);\n        beanFactory.ignoreDependencyInterface(ApplicationEventPublisherAware.class);\n        beanFactory.ignoreDependencyInterface(MessageSourceAware.class);\n        beanFactory.ignoreDependencyInterface(ApplicationContextAware.class);\n\n        // \u8bbe\u7f6e\u7279\u6b8a\u7c7b\u578b\u5bf9\u5e94\u7684bean.beanFactory\u5bf9\u5e94\u521a\u521a\u83b7\u53d6\u7684BeanFactory\n        //ResourceLoader, ApplicationEventPublisher, ApplicationContext\u8fd93\u4e2a\u63a5\u53e3\u5bf9\u5e94\u7684bean\u90fd\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7684Spring\u5bb9\u5668\n        beanFactory.registerResolvableDependency(BeanFactory.class, beanFactory);\n        beanFactory.registerResolvableDependency(ResourceLoader.class, this);\n        beanFactory.registerResolvableDependency(ApplicationEventPublisher.class, this);\n        beanFactory.registerResolvableDependency(ApplicationContext.class, this);\n\n        // \u6ce8\u518cApplicationListenerDetector\uff0c\u7528\u4e8e\u53d1\u73b0\u5b9e\u73b0\u4e86ApplicationListener\u63a5\u53e3\u7684bean\n        beanFactory.addBeanPostProcessor(new ApplicationListenerDetector(this));\n\n        // Detect a LoadTimeWeaver and prepare for weaving, if found.\n        if (beanFactory.containsBean(LOAD_TIME_WEAVER_BEAN_NAME)) {\n            beanFactory.addBeanPostProcessor(new LoadTimeWeaverAwareProcessor(beanFactory));\n            // Set a temporary ClassLoader for type matching.\n            beanFactory.setTempClassLoader(new ContextTypeMatchClassLoader(beanFactory.getBeanClassLoader()));\n        }\n\n        // \u6ce8\u518c\u9ed8\u8ba4\u7684 environment beans\n        if (!beanFactory.containsLocalBean(ENVIRONMENT_BEAN_NAME)) {\n            beanFactory.registerSingleton(ENVIRONMENT_BEAN_NAME, getEnvironment());\n        }\n        if (!beanFactory.containsLocalBean(SYSTEM_PROPERTIES_BEAN_NAME)) {\n            beanFactory.registerSingleton(SYSTEM_PROPERTIES_BEAN_NAME, getEnvironment().getSystemProperties());\n        }\n        if (!beanFactory.containsLocalBean(SYSTEM_ENVIRONMENT_BEAN_NAME)) {\n            beanFactory.registerSingleton(SYSTEM_ENVIRONMENT_BEAN_NAME, getEnvironment().getSystemEnvironment());\n        }\n    }\n")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"postProcessBeanFactory(beanFactory)"))),(0,a.kt)("p",{parentName:"li"},"\u5728 ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"ClassPathXmlApplicationContext"))," \u4e2d ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"postProcessBeanFactory"))," \u53ea\u662f\u4e00\u4e2a\u7a7a\u7684\u5b9e\u73b0")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"invokeBeanFactoryPostProcessors(beanFactory)"))),(0,a.kt)("p",{parentName:"li"},"\u5b9e\u4f8b\u5316\u548c\u6267\u884c\u6240\u6709\u7684\u6ce8\u518c\u7684 ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"BeanFactoryPostProcessor")),"  \u5982\u679c\u5b9e\u73b0\u4e86 ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Ordered")),"  \u6216\u8005 ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"PriorityOrdered"))," \u9700\u8981\u9075\u5faa"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"    protected void invokeBeanFactoryPostProcessors(ConfigurableListableBeanFactory beanFactory) {\n        //\u5904\u7406\u540e\u7f6eBean Factory \u5904\u7406\u5668\n        PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(beanFactory, getBeanFactoryPostProcessors());\n        if (beanFactory.getTempClassLoader() == null && beanFactory.containsBean(LOAD_TIME_WEAVER_BEAN_NAME)) {\n            beanFactory.addBeanPostProcessor(new LoadTimeWeaverAwareProcessor(beanFactory));\n            beanFactory.setTempClassLoader(new ContextTypeMatchClassLoader(beanFactory.getBeanClassLoader()));\n        }\n    }\n")),(0,a.kt)("p",{parentName:"li"},"\u5728\u4e0a\u9762\u7684\u65b9\u6cd5\u4e3b\u8981\u662f\u901a\u8fc7\uff1a ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(beanFactory, getBeanFactoryPostProcessors())"))," \u6765\u8fdb\u884c"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"    public static void invokeBeanFactoryPostProcessors(\n            ConfigurableListableBeanFactory beanFactory, List<BeanFactoryPostProcessor> beanFactoryPostProcessors) {\n\n        //\u9996\u5148\u6267\u884cBeanDefinitionRegistryPostProcessor\n        Set<String> processedBeans = new HashSet<>();\n\n        if (beanFactory instanceof BeanDefinitionRegistry) {\n            BeanDefinitionRegistry registry = (BeanDefinitionRegistry) beanFactory;\n            List<BeanFactoryPostProcessor> regularPostProcessors = new ArrayList<>();\n            List<BeanDefinitionRegistryPostProcessor> registryProcessors = new ArrayList<>();\n\n            for (BeanFactoryPostProcessor postProcessor : beanFactoryPostProcessors) {\n                if (postProcessor instanceof BeanDefinitionRegistryPostProcessor) {\n                    //\u8c03\u7528\u5904\u7406BeanDefinitionRegistryPostProcessor\n                    BeanDefinitionRegistryPostProcessor registryProcessor =\n                            (BeanDefinitionRegistryPostProcessor) postProcessor;\n                    registryProcessor.postProcessBeanDefinitionRegistry(registry);\n                    registryProcessors.add(registryProcessor);\n                }\n                else {\n                    regularPostProcessors.add(postProcessor);\n                }\n            }\n\n\n            List<BeanDefinitionRegistryPostProcessor> currentRegistryProcessors = new ArrayList<>();\n\n            // \u9996\u5148\u6267\u884c BeanDefinitionRegistryPostProcessors \u5b9e\u73b0\u4e86 PriorityOrdered.\n            String[] postProcessorNames =\n                    beanFactory.getBeanNamesForType(BeanDefinitionRegistryPostProcessor.class, true, false);\n            for (String ppName : postProcessorNames) {\n                if (beanFactory.isTypeMatch(ppName, PriorityOrdered.class)) {\n                    currentRegistryProcessors.add(beanFactory.getBean(ppName, BeanDefinitionRegistryPostProcessor.class));\n                    processedBeans.add(ppName);\n                }\n            }\n            sortPostProcessors(currentRegistryProcessors, beanFactory);\n            registryProcessors.addAll(currentRegistryProcessors);\n            invokeBeanDefinitionRegistryPostProcessors(currentRegistryProcessors, registry);\n            currentRegistryProcessors.clear();\n\n            // \u63a5\u4e0b\u6765\u6267\u884c BeanDefinitionRegistryPostProcessors \u5b9e\u73b0 Ordered.\n            postProcessorNames = beanFactory.getBeanNamesForType(BeanDefinitionRegistryPostProcessor.class, true, false);\n            for (String ppName : postProcessorNames) {\n                if (!processedBeans.contains(ppName) && beanFactory.isTypeMatch(ppName, Ordered.class)) {\n                    currentRegistryProcessors.add(beanFactory.getBean(ppName, BeanDefinitionRegistryPostProcessor.class));\n                    processedBeans.add(ppName);\n                }\n            }\n            sortPostProcessors(currentRegistryProcessors, beanFactory);\n            registryProcessors.addAll(currentRegistryProcessors);\n            invokeBeanDefinitionRegistryPostProcessors(currentRegistryProcessors, registry);\n            currentRegistryProcessors.clear();\n\n            // \u6267\u884c\u5269\u4e0b\u7684\u6240\u6709\u7684 BeanDefinitionRegistryPostProcessors\n            boolean reiterate = true;\n            while (reiterate) {\n                reiterate = false;\n                postProcessorNames = beanFactory.getBeanNamesForType(BeanDefinitionRegistryPostProcessor.class, true, false);\n                for (String ppName : postProcessorNames) {\n                    if (!processedBeans.contains(ppName)) {\n                        currentRegistryProcessors.add(beanFactory.getBean(ppName, BeanDefinitionRegistryPostProcessor.class));\n                        processedBeans.add(ppName);\n                        reiterate = true;\n                    }\n                }\n                sortPostProcessors(currentRegistryProcessors, beanFactory);\n                registryProcessors.addAll(currentRegistryProcessors);\n                invokeBeanDefinitionRegistryPostProcessors(currentRegistryProcessors, registry);\n                currentRegistryProcessors.clear();\n            }\n            \n            //\u6267\u884c\u56de\u8c03\u65b9\u6cd5 postProcessBeanFactory\n            invokeBeanFactoryPostProcessors(registryProcessors, beanFactory);\n            invokeBeanFactoryPostProcessors(regularPostProcessors, beanFactory);\n        }\n\n        else {\n            // Invoke factory processors registered with the context instance.\n            invokeBeanFactoryPostProcessors(beanFactoryPostProcessors, beanFactory);\n        }\n\n        // Do not initialize FactoryBeans here: We need to leave all regular beans\n        // uninitialized to let the bean factory post-processors apply to them!\n        String[] postProcessorNames =\n                beanFactory.getBeanNamesForType(BeanFactoryPostProcessor.class, true, false);\n\n        //\u5904\u7406PriorityOrdered \u548c Ordered \u7684\u7c7b\n        List<BeanFactoryPostProcessor> priorityOrderedPostProcessors = new ArrayList<>();\n        List<String> orderedPostProcessorNames = new ArrayList<>();\n        List<String> nonOrderedPostProcessorNames = new ArrayList<>();\n        for (String ppName : postProcessorNames) {\n            if (processedBeans.contains(ppName)) {\n                // skip - already processed in first phase above\n            }\n            else if (beanFactory.isTypeMatch(ppName, PriorityOrdered.class)) {\n                priorityOrderedPostProcessors.add(beanFactory.getBean(ppName, BeanFactoryPostProcessor.class));\n            }\n            else if (beanFactory.isTypeMatch(ppName, Ordered.class)) {\n                orderedPostProcessorNames.add(ppName);\n            }\n            else {\n                nonOrderedPostProcessorNames.add(ppName);\n            }\n        }\n\n        // \u9996\u5148\u6267\u884c BeanFactoryPostProcessors \u5b9e\u73b0\u4e86 PriorityOrdered.\n        sortPostProcessors(priorityOrderedPostProcessors, beanFactory);\n        invokeBeanFactoryPostProcessors(priorityOrderedPostProcessors, beanFactory);\n\n        // \u6267\u884c BeanFactoryPostProcessors \u5b9e\u73b0\u4e86 Ordered.\n        List<BeanFactoryPostProcessor> orderedPostProcessors = new ArrayList<>(orderedPostProcessorNames.size());\n        for (String postProcessorName : orderedPostProcessorNames) {\n            orderedPostProcessors.add(beanFactory.getBean(postProcessorName, BeanFactoryPostProcessor.class));\n        }\n        sortPostProcessors(orderedPostProcessors, beanFactory);\n        invokeBeanFactoryPostProcessors(orderedPostProcessors, beanFactory);\n\n        // \u6700\u540e\u6267\u884c\u6240\u6709\u7684 BeanFactoryPostProcessors.\n        List<BeanFactoryPostProcessor> nonOrderedPostProcessors = new ArrayList<>(nonOrderedPostProcessorNames.size());\n        for (String postProcessorName : nonOrderedPostProcessorNames) {\n            nonOrderedPostProcessors.add(beanFactory.getBean(postProcessorName, BeanFactoryPostProcessor.class));\n        }\n        invokeBeanFactoryPostProcessors(nonOrderedPostProcessors, beanFactory);\n\n        beanFactory.clearMetadataCache();\n    }\n")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"registerBeanPostProcessors(beanFactory)"))),(0,a.kt)("p",{parentName:"li"},"\u6ce8\u518cBean ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"PostProcessor")),"  \u5904\u7406\u5668\u3002\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"protected void registerBeanPostProcessors(ConfigurableListableBeanFactory beanFactory) {\n        PostProcessorRegistrationDelegate.registerBeanPostProcessors(beanFactory, this);\n    }\n")),(0,a.kt)("p",{parentName:"li"},"\u4ece\u4e0a\u9762\u53ef\u4ee5\u770b\u51fa\u6765\u5c31\u4e00\u884c\u4ee3\u7801\uff0c\u8c03\u7528\u4e86 ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"PostProcessorRegistrationDelegate.registerBeanPostProcessors(beanFactory, this)"))," \u9759\u6001\u65b9\u6cd5"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public static void registerBeanPostProcessors(\n            ConfigurableListableBeanFactory beanFactory, AbstractApplicationContext applicationContext) {\n\n        String[] postProcessorNames = beanFactory.getBeanNamesForType(BeanPostProcessor.class, true, false);\n        int beanProcessorTargetCount = beanFactory.getBeanPostProcessorCount() + 1 + postProcessorNames.length;\n        beanFactory.addBeanPostProcessor(new BeanPostProcessorChecker(beanFactory, beanProcessorTargetCount));\n        List<BeanPostProcessor> priorityOrderedPostProcessors = new ArrayList<>();\n        List<BeanPostProcessor> internalPostProcessors = new ArrayList<>();\n        List<String> orderedPostProcessorNames = new ArrayList<>();\n        List<String> nonOrderedPostProcessorNames = new ArrayList<>();\n        for (String ppName : postProcessorNames) {\n            if (beanFactory.isTypeMatch(ppName, PriorityOrdered.class)) {\n                BeanPostProcessor pp = beanFactory.getBean(ppName, BeanPostProcessor.class);\n                priorityOrderedPostProcessors.add(pp);\n                if (pp instanceof MergedBeanDefinitionPostProcessor) {\n                    internalPostProcessors.add(pp);\n                }\n            }\n            else if (beanFactory.isTypeMatch(ppName, Ordered.class)) {\n                orderedPostProcessorNames.add(ppName);\n            }\n            else {\n                nonOrderedPostProcessorNames.add(ppName);\n            }\n        }\n        sortPostProcessors(priorityOrderedPostProcessors, beanFactory);\n        registerBeanPostProcessors(beanFactory, priorityOrderedPostProcessors);\n        List<BeanPostProcessor> orderedPostProcessors = new ArrayList<>(orderedPostProcessorNames.size());\n        for (String ppName : orderedPostProcessorNames) {\n            BeanPostProcessor pp = beanFactory.getBean(ppName, BeanPostProcessor.class);\n            orderedPostProcessors.add(pp);\n            if (pp instanceof MergedBeanDefinitionPostProcessor) {\n                internalPostProcessors.add(pp);\n            }\n        }\n        sortPostProcessors(orderedPostProcessors, beanFactory);\n        registerBeanPostProcessors(beanFactory, orderedPostProcessors);\n        List<BeanPostProcessor> nonOrderedPostProcessors = new ArrayList<>(nonOrderedPostProcessorNames.size());\n        for (String ppName : nonOrderedPostProcessorNames) {\n            BeanPostProcessor pp = beanFactory.getBean(ppName, BeanPostProcessor.class);\n            nonOrderedPostProcessors.add(pp);\n            if (pp instanceof MergedBeanDefinitionPostProcessor) {\n                internalPostProcessors.add(pp);\n            }\n        }\n        registerBeanPostProcessors(beanFactory, nonOrderedPostProcessors);\n\n        \n        sortPostProcessors(internalPostProcessors, beanFactory);\n        registerBeanPostProcessors(beanFactory, internalPostProcessors);\n\n        \n        beanFactory.addBeanPostProcessor(new ApplicationListenerDetector(applicationContext));\n    }\n")),(0,a.kt)("p",{parentName:"li"},"\u8fd9\u6bb5\u4ee3\u7801\u548c ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"BeanFactoryPostProcessor"))," \u5904\u7406\u5dee\u4e0d\u591a\u3002")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"initMessageSource()"))),(0,a.kt)("p",{parentName:"li"},"\u521d\u59cb\u5316\u6d88\u606f\u6e90"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},'    protected void initMessageSource() {\n        ConfigurableListableBeanFactory beanFactory = getBeanFactory();\n        //\u5224\u65ad\u662f\u5426\u5b58\u5728Bean\u540d\u79f0\u4e3amessageSource\n        if (beanFactory.containsLocalBean(MESSAGE_SOURCE_BEAN_NAME)) {\n            this.messageSource = beanFactory.getBean(MESSAGE_SOURCE_BEAN_NAME, MessageSource.class);\n            // Make MessageSource aware of parent MessageSource.\n            if (this.parent != null && this.messageSource instanceof HierarchicalMessageSource) {\n                HierarchicalMessageSource hms = (HierarchicalMessageSource) this.messageSource;\n                if (hms.getParentMessageSource() == null) {\n                    hms.setParentMessageSource(getInternalParentMessageSource());\n                }\n            }\n            if (logger.isTraceEnabled()) {\n                logger.trace("Using MessageSource [" + this.messageSource + "]");\n            }\n        }\n        else {\n            //BeanFactory \u4e0d\u5b58\u5728\u76f4\u63a5\u5efa\u7acb\n            DelegatingMessageSource dms = new DelegatingMessageSource();\n            dms.setParentMessageSource(getInternalParentMessageSource());\n            this.messageSource = dms;\n            beanFactory.registerSingleton(MESSAGE_SOURCE_BEAN_NAME, this.messageSource);\n            if (logger.isTraceEnabled()) {\n                logger.trace("No \'" + MESSAGE_SOURCE_BEAN_NAME + "\' bean, using [" + this.messageSource + "]");\n            }\n        }\n    }\n'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"initApplicationEventMulticaster()"))),(0,a.kt)("p",{parentName:"li"},"\u521d\u59cb\u5316\u5e7f\u64ad\u4e8b\u4ef6")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"onRefresh()")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"registerListeners()"))),(0,a.kt)("p",{parentName:"li"},"\u6ce8\u518c\u7cfb\u7edf\u91cc\u7684\u76d1\u542c\u8005\uff0c\u770b\u4e00\u4e0b\u8fd9\u4e2a\u65b9\u6cd5\u7684\u4ee3\u7801:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"    protected void registerListeners() {\n        // \u6ce8\u518c\u7279\u5b9a\u7684\u9759\u6001\u7684\u76d1\u542c\u5668\n        for (ApplicationListener<?> listener : getApplicationListeners()) {\n            getApplicationEventMulticaster().addApplicationListener(listener);\n        }\n\n        //\u83b7\u53d6\u76d1\u542c\u5668\u7684Bean\u7684\u540d\u79f0\n        String[] listenerBeanNames = getBeanNamesForType(ApplicationListener.class, true, false);\n        for (String listenerBeanName : listenerBeanNames) {\n            getApplicationEventMulticaster().addApplicationListenerBean(listenerBeanName);\n        }\n\n        // Publish early application events now that we finally have a multicaster...\n        Set<ApplicationEvent> earlyEventsToProcess = this.earlyApplicationEvents;\n        this.earlyApplicationEvents = null;\n        if (earlyEventsToProcess != null) {\n            for (ApplicationEvent earlyEvent : earlyEventsToProcess) {\n                getApplicationEventMulticaster().multicastEvent(earlyEvent);\n            }\n        }\n    }\n")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"finishBeanFactoryInitialization(beanFactory)"))),(0,a.kt)("p",{parentName:"li"},"\u521d\u59cb\u5316\u5269\u4e0b\u7684\u5355\u4f8bBean"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"    protected void finishBeanFactoryInitialization(ConfigurableListableBeanFactory beanFactory) {\n        \n        if (beanFactory.containsBean(CONVERSION_SERVICE_BEAN_NAME) &&\n                beanFactory.isTypeMatch(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class)) {\n            beanFactory.setConversionService(\n                    beanFactory.getBean(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class));\n        }\n        if (!beanFactory.hasEmbeddedValueResolver()) {\n            beanFactory.addEmbeddedValueResolver(strVal -> getEnvironment().resolvePlaceholders(strVal));\n        }\n\n        //\u5305\u542bAware\u4e2d\u7684\n        String[] weaverAwareNames = beanFactory.getBeanNamesForType(LoadTimeWeaverAware.class, false, false);\n        for (String weaverAwareName : weaverAwareNames) {\n            getBean(weaverAwareName);\n        }\n\n        beanFactory.setTempClassLoader(null);\n\n        beanFactory.freezeConfiguration();\n\n        // \u5b9e\u4f8b\u5316\u5355\u4f8bBean\n        beanFactory.preInstantiateSingletons();\n    }\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"finishRefresh()"))),(0,a.kt)("p",{parentName:"li"},"\u5b8c\u6210\u6700\u540e\u7684\u5237\u65b0"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"protected void finishRefresh() {\n        // Clear context-level resource caches (such as ASM metadata from scanning).\n        clearResourceCaches();\n\n        // Initialize lifecycle processor for this context.\n        initLifecycleProcessor();\n\n        // Propagate refresh to lifecycle processor first.\n        getLifecycleProcessor().onRefresh();\n\n        // Publish the final event.\n        publishEvent(new ContextRefreshedEvent(this));\n\n        // Participate in LiveBeansView MBean, if active.\n        LiveBeansView.registerApplicationContext(this);\n    }\n")))))}P.isMDXComponent=!0}}]);