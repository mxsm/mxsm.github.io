"use strict";(self.webpackChunkmxsm_website=self.webpackChunkmxsm_website||[]).push([[2955],{8172:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>P});var n=r(4848),s=r(8453);const o={title:"BeanFactoryPostProcessor\u8be6\u89e3",date:new Date("2019-02-13T00:00:00.000Z"),weight:6},a=void 0,i={id:"spring/spring-framework/core-source-analysis/BeanFactoryPostProcessor",title:"BeanFactoryPostProcessor\u8be6\u89e3",description:"1. BeanFactoryPostProcessor\u7ee7\u627f\u5173\u7cfb",source:"@site/docs/spring/spring-framework/core-source-analysis/BeanFactoryPostProcessor.md",sourceDirName:"spring/spring-framework/core-source-analysis",slug:"/spring/spring-framework/core-source-analysis/BeanFactoryPostProcessor",permalink:"/docs/spring/spring-framework/core-source-analysis/BeanFactoryPostProcessor",draft:!1,unlisted:!1,editUrl:"https://github.com/mxsm/mxsm-website/edit/develop/docs/spring/spring-framework/core-source-analysis/BeanFactoryPostProcessor.md",tags:[],version:"current",lastUpdatedBy:"mxsm",lastUpdatedAt:1710773855,formattedLastUpdatedAt:"Mar 18, 2024",frontMatter:{title:"BeanFactoryPostProcessor\u8be6\u89e3",date:"2019-02-13T00:00:00.000Z",weight:6},sidebar:"springframework",previous:{title:"BeanDefinition\u8be6\u89e3",permalink:"/docs/spring/spring-framework/core-source-analysis/BeanDefinition"},next:{title:"BeanPostProcessor\u76f8\u5173\u63a5\u53e3\u6267\u884c\u7684\u65b9\u6cd5",permalink:"/docs/spring/spring-framework/core-source-analysis/BeanPostProcessor-exe-method"}},c={},P=[{value:"1. BeanFactoryPostProcessor\u7ee7\u627f\u5173\u7cfb",id:"1-beanfactorypostprocessor\u7ee7\u627f\u5173\u7cfb",level:3},{value:"2. BeanFactoryPostProcessor\u5728Spring\u4e2d\u5982\u4f55\u5de5\u4f5c\u7684\u6e90\u7801\u5206\u6790",id:"2-beanfactorypostprocessor\u5728spring\u4e2d\u5982\u4f55\u5de5\u4f5c\u7684\u6e90\u7801\u5206\u6790",level:3},{value:"3. \u603b\u7ed3",id:"3-\u603b\u7ed3",level:3}];function d(t){const e={a:"a",blockquote:"blockquote",code:"code",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h3,{id:"1-beanfactorypostprocessor\u7ee7\u627f\u5173\u7cfb",children:"1. BeanFactoryPostProcessor\u7ee7\u627f\u5173\u7cfb"}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:"https://github.com/mxsm/document/blob/master/image/Spring/Springframework/BeanFactoryPostProcessor.png?raw=true",alt:"\u56fe"})}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"BeanFactoryPostProcessor"})})," \u4e3b\u8981\u7528\u6765\u5904\u7406\u6ce8\u5165Bean\u5230BeanFactory\u4e2d\u4ee5\u53caBean\u7c7b\u4e0a\u9762\u7684\u6ce8\u89e3\uff0c\u6bd4\u5982 ",(0,n.jsx)(e.strong,{children:"@Configuration"})]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.strong,{children:"PropertySourcesPlaceholderConfigurer\u548c PropertyPlaceholderConfigurer"})}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-java",children:'//xml context \u5143\u7d20\u89e3\u6790\npublic class ContextNamespaceHandler extends NamespaceHandlerSupport {\n\n\t@Override\n\tpublic void init() {\n\t\tregisterBeanDefinitionParser("property-placeholder", new PropertyPlaceholderBeanDefinitionParser());\n\t\tregisterBeanDefinitionParser("property-override", new PropertyOverrideBeanDefinitionParser());\n\t\tregisterBeanDefinitionParser("annotation-config", new AnnotationConfigBeanDefinitionParser());\n\t\tregisterBeanDefinitionParser("component-scan", new ComponentScanBeanDefinitionParser());\n\t\tregisterBeanDefinitionParser("load-time-weaver", new LoadTimeWeaverBeanDefinitionParser());\n\t\tregisterBeanDefinitionParser("spring-configured", new SpringConfiguredBeanDefinitionParser());\n\t\tregisterBeanDefinitionParser("mbean-export", new MBeanExportBeanDefinitionParser());\n\t\tregisterBeanDefinitionParser("mbean-server", new MBeanServerBeanDefinitionParser());\n\t}\n\n}\n\nclass PropertyPlaceholderBeanDefinitionParser extends AbstractPropertyLoadingBeanDefinitionParser {\n\n\tprivate static final String SYSTEM_PROPERTIES_MODE_ATTRIBUTE = "system-properties-mode";\n\n\tprivate static final String SYSTEM_PROPERTIES_MODE_DEFAULT = "ENVIRONMENT";\n\n\n\t@Override\n\tprotected Class<?> getBeanClass(Element element) {\n\t\t// As of Spring 3.1, the default value of system-properties-mode has changed from\n\t\t// \'FALLBACK\' to \'ENVIRONMENT\'. This latter value indicates that resolution of\n\t\t// placeholders against system properties is a function of the Environment and\n\t\t// its current set of PropertySources.\n\t\tif (SYSTEM_PROPERTIES_MODE_DEFAULT.equals(element.getAttribute(SYSTEM_PROPERTIES_MODE_ATTRIBUTE))) {\n\t\t\treturn PropertySourcesPlaceholderConfigurer.class;\n\t\t}\n\n\t\t// The user has explicitly specified a value for system-properties-mode: revert to\n\t\t// PropertyPlaceholderConfigurer to ensure backward compatibility with 3.0 and earlier.\n\t\treturn PropertyPlaceholderConfigurer.class;\n\t}\n\n\t@Override\n\tprotected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) {\n\t\tsuper.doParse(element, parserContext, builder);\n\n\t\tbuilder.addPropertyValue("ignoreUnresolvablePlaceholders",\n\t\t\t\tBoolean.valueOf(element.getAttribute("ignore-unresolvable")));\n\n\t\tString systemPropertiesModeName = element.getAttribute(SYSTEM_PROPERTIES_MODE_ATTRIBUTE);\n\t\tif (StringUtils.hasLength(systemPropertiesModeName) &&\n\t\t\t\t!systemPropertiesModeName.equals(SYSTEM_PROPERTIES_MODE_DEFAULT)) {\n\t\t\tbuilder.addPropertyValue("systemPropertiesModeName", "SYSTEM_PROPERTIES_MODE_" + systemPropertiesModeName);\n\t\t}\n\n\t\tif (element.hasAttribute("value-separator")) {\n\t\t\tbuilder.addPropertyValue("valueSeparator", element.getAttribute("value-separator"));\n\t\t}\n\t\tif (element.hasAttribute("trim-values")) {\n\t\t\tbuilder.addPropertyValue("trimValues", element.getAttribute("trim-values"));\n\t\t}\n\t\tif (element.hasAttribute("null-value")) {\n\t\t\tbuilder.addPropertyValue("nullValue", element.getAttribute("null-value"));\n\t\t}\n\t}\n\n}\n'})}),"\n",(0,n.jsx)(e.p,{children:"\u8fd9\u7c7b\u52a0\u8f7d\u4e86\u3002"}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.strong,{children:"ConfigurationClassPostProcessor"})}),"\n",(0,n.jsx)(e.p,{children:"\u8fd9\u4e2a\u7c7b\u6ce8\u5165\u5206\u4e3a\u4e24\u79cd\uff1a"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(e.p,{children:"XML\u7684\u60c5\u51b5\u4e0b\u6ce8\u5165"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-java",children:'public class ContextNamespaceHandler extends NamespaceHandlerSupport {\n    @Override\n    public void init() {\n        registerBeanDefinitionParser("property-placeholder", new PropertyPlaceholderBeanDefinitionParser());\n        registerBeanDefinitionParser("property-override", new PropertyOverrideBeanDefinitionParser());\n        //\u8fd9\u4e2a\u7c7b\u6ce8\u5165\n        registerBeanDefinitionParser("annotation-config", new AnnotationConfigBeanDefinitionParser());\n        //\u8fd9\u4e2a\u7c7b\u6ce8\u5165\n        registerBeanDefinitionParser("component-scan", new ComponentScanBeanDefinitionParser());\n        registerBeanDefinitionParser("load-time-weaver", new LoadTimeWeaverBeanDefinitionParser());\n        registerBeanDefinitionParser("spring-configured", new SpringConfiguredBeanDefinitionParser());\n        registerBeanDefinitionParser("mbean-export", new MBeanExportBeanDefinitionParser());\n        registerBeanDefinitionParser("mbean-server", new MBeanServerBeanDefinitionParser());\n    }\n}\n'})}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["\n",(0,n.jsx)(e.p,{children:"\u6ce8\u89e3\u7684\u60c5\u51b5\u4e0b\u6ce8\u5165"}),"\n",(0,n.jsxs)(e.blockquote,{children:["\n",(0,n.jsx)(e.p,{children:"AnnotationConfigUtils.registerAnnotationConfigProcessors(parserContext.getRegistry(), source);\u8fd9\u4e2a\u65b9\u6cd5\u91cc\u9762\u6ce8\u5165\u4e86"}),"\n"]}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-java",children:'\tpublic static Set<BeanDefinitionHolder> registerAnnotationConfigProcessors(\n\t\t\tBeanDefinitionRegistry registry, @Nullable Object source) {\n\n\t\tDefaultListableBeanFactory beanFactory = unwrapDefaultListableBeanFactory(registry);\n\t\tif (beanFactory != null) {\n\t\t\tif (!(beanFactory.getDependencyComparator() instanceof AnnotationAwareOrderComparator)) {\n\t\t\t\tbeanFactory.setDependencyComparator(AnnotationAwareOrderComparator.INSTANCE);\n\t\t\t}\n\t\t\tif (!(beanFactory.getAutowireCandidateResolver() instanceof ContextAnnotationAutowireCandidateResolver)) {\n\t\t\t\tbeanFactory.setAutowireCandidateResolver(new ContextAnnotationAutowireCandidateResolver());\n\t\t\t}\n\t\t}\n\n\t\tSet<BeanDefinitionHolder> beanDefs = new LinkedHashSet<>(8);\n\n\t\tif (!registry.containsBeanDefinition(CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME)) {\n\t\t\t//\u6ce8\u5165ConfigurationClassPostProcessor\n            RootBeanDefinition def = new RootBeanDefinition(ConfigurationClassPostProcessor.class);\n\t\tdef.setSource(source);\n\t\t\tbeanDefs.add(registerPostProcessor(registry, def, CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME));\n\t\t}\n\n\t\tif (!registry.containsBeanDefinition(AUTOWIRED_ANNOTATION_PROCESSOR_BEAN_NAME)) {\n\t\t\tRootBeanDefinition def = new RootBeanDefinition(AutowiredAnnotationBeanPostProcessor.class);\n\t\t\tdef.setSource(source);\n\t\t\tbeanDefs.add(registerPostProcessor(registry, def, AUTOWIRED_ANNOTATION_PROCESSOR_BEAN_NAME));\n\t\t}\n\n\t\t// Check for JSR-250 support, and if present add the CommonAnnotationBeanPostProcessor.\n\t\tif (jsr250Present && !registry.containsBeanDefinition(COMMON_ANNOTATION_PROCESSOR_BEAN_NAME)) {\n\t\t\tRootBeanDefinition def = new RootBeanDefinition(CommonAnnotationBeanPostProcessor.class);\n\t\t\tdef.setSource(source);\n\t\t\tbeanDefs.add(registerPostProcessor(registry, def, COMMON_ANNOTATION_PROCESSOR_BEAN_NAME));\n\t\t}\n\n\t\t// Check for JPA support, and if present add the PersistenceAnnotationBeanPostProcessor.\n\t\tif (jpaPresent && !registry.containsBeanDefinition(PERSISTENCE_ANNOTATION_PROCESSOR_BEAN_NAME)) {\n\t\t\tRootBeanDefinition def = new RootBeanDefinition();\n\t\t\ttry {\n\t\t\t\tdef.setBeanClass(ClassUtils.forName(PERSISTENCE_ANNOTATION_PROCESSOR_CLASS_NAME,\n\t\t\t\t\t\tAnnotationConfigUtils.class.getClassLoader()));\n\t\t\t}\n\t\t\tcatch (ClassNotFoundException ex) {\n\t\t\t\tthrow new IllegalStateException(\n\t\t\t\t\t\t"Cannot load optional framework class: " + PERSISTENCE_ANNOTATION_PROCESSOR_CLASS_NAME, ex);\n\t\t\t}\n\t\t\tdef.setSource(source);\n\t\t\tbeanDefs.add(registerPostProcessor(registry, def, PERSISTENCE_ANNOTATION_PROCESSOR_BEAN_NAME));\n\t\t}\n\n\t\tif (!registry.containsBeanDefinition(EVENT_LISTENER_PROCESSOR_BEAN_NAME)) {\n\t\t\tRootBeanDefinition def = new RootBeanDefinition(EventListenerMethodProcessor.class);\n\t\t\tdef.setSource(source);\n\t\t\tbeanDefs.add(registerPostProcessor(registry, def, EVENT_LISTENER_PROCESSOR_BEAN_NAME));\n\t\t}\n\n\t\tif (!registry.containsBeanDefinition(EVENT_LISTENER_FACTORY_BEAN_NAME)) {\n\t\t\tRootBeanDefinition def = new RootBeanDefinition(DefaultEventListenerFactory.class);\n\t\t\tdef.setSource(source);\n\t\t\tbeanDefs.add(registerPostProcessor(registry, def, EVENT_LISTENER_FACTORY_BEAN_NAME));\n\t\t}\n\n\t\treturn beanDefs;\n\t}\n\n'})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"\u5728Spring\u6e90\u7801\u4e2d\u4e3b\u8981\u53ef\u4ee5\u5173\u6ce8\u4e00\u4e0b\u4e0a\u9762\u7684\u4e09\u4e2a\u5b9e\u73b0\u7c7b\u3002"}),"\n",(0,n.jsxs)(e.blockquote,{children:["\n",(0,n.jsx)(e.p,{children:"\u4e3b\u8981\u5173\u6ce8\u4e0b\u9762\u8fd9\u4e24\u4e2a\u63a5\u53e3\uff1a"}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.strong,{children:"BeanFactoryPostProcessor"})}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:"BeanDefinitionRegistryPostProcessor"})," (\u53ef\u4ee5\u6ce8\u5165bean)"]}),"\n"]}),"\n",(0,n.jsx)(e.h3,{id:"2-beanfactorypostprocessor\u5728spring\u4e2d\u5982\u4f55\u5de5\u4f5c\u7684\u6e90\u7801\u5206\u6790",children:"2. BeanFactoryPostProcessor\u5728Spring\u4e2d\u5982\u4f55\u5de5\u4f5c\u7684\u6e90\u7801\u5206\u6790"}),"\n",(0,n.jsxs)(e.p,{children:["\u9996\u5148\u6211\u4eec\u5e94\u8be5\u77e5\u9053\uff0c",(0,n.jsx)(e.strong,{children:"\u4e0d\u7ba1\u662f\u4ec0\u4e48\u5728Spring\u7684\u5bb9\u5668\u4e2d\u90fd\u662f\u4e00\u4e2aBean"})," \uff0c\u7ecf\u8fc7bean\u7684\u626b\u63cf\u6216\u8005xml\u5b9a\u4e49\u540e\u52a0\u8f7d\u3002\u4ee3\u7801\u9996\u5148\u4f1a\u5728\u8fd9\u91cc\u8fdb\u5165\uff1a"]}),"\n",(0,n.jsxs)(e.blockquote,{children:["\n",(0,n.jsx)(e.p,{children:"AbstractApplicationContext#refresh#invokeBeanFactoryPostProcessors \u65b9\u6cd5\u4e2d\u6765\u5904\u7406"}),"\n"]}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-java",children:"\tprotected void invokeBeanFactoryPostProcessors(ConfigurableListableBeanFactory beanFactory) {\n        //\u8fd9\u4e2a\u65b9\u6cd5\u4e3b\u8981\u5904\u7406\u5b9e\u73b0\u4e86BeanFactoryPostProcessor\u63a5\u53e3\u7684java\u7c7b\n\t\tPostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(beanFactory, getBeanFactoryPostProcessors());\n\n\t\t// Detect a LoadTimeWeaver and prepare for weaving, if found in the meantime\n\t\t// (e.g. through an @Bean method registered by ConfigurationClassPostProcessor)\n\t\tif (beanFactory.getTempClassLoader() == null && beanFactory.containsBean(LOAD_TIME_WEAVER_BEAN_NAME)) {\n\t\t\tbeanFactory.addBeanPostProcessor(new LoadTimeWeaverAwareProcessor(beanFactory));\n\t\t\tbeanFactory.setTempClassLoader(new ContextTypeMatchClassLoader(beanFactory.getBeanClassLoader()));\n\t\t}\n\t}\n"})}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(beanFactory, getBeanFactoryPostProcessors())"})})," \u8fd9\u4e2a\u65b9\u6cd5\u4e3b\u8981\u5904\u7406BeanFactoryPostProcessor\u5b9e\u73b0\u7684\u7c7b\u3002"]}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-java",children:"public static void invokeBeanFactoryPostProcessors(\n\t\t\tConfigurableListableBeanFactory beanFactory, List<BeanFactoryPostProcessor> beanFactoryPostProcessors) {\n\n\n\t\tSet<String> processedBeans = new HashSet<>();\n\n\t\t//\u5224\u65adBeanFactory\u662f\u5426\u4e3aBeanDefinitionRegistry\u7684\u5b9e\u4f8b(BeanDefinitionRegistry\u53ef\u4ee5\u6ce8\u5165bean)\n\t\tif (beanFactory instanceof BeanDefinitionRegistry) {\n\t\t\tBeanDefinitionRegistry registry = (BeanDefinitionRegistry) beanFactory;\n\n\t\t\t//\u5b58\u653e\u5b9e\u73b0BeanFactoryPostProcessor\u7684\u5b9e\u4f8b\n\t\t\tList<BeanFactoryPostProcessor> regularPostProcessors = new ArrayList<>();\n\n\t\t\t//\u5b58\u653e\u5b9e\u73b0BeanDefinitionRegistryPostProcessor\n\t\t\tList<BeanDefinitionRegistryPostProcessor> registryProcessors = new ArrayList<>();\n\n\t\t\tfor (BeanFactoryPostProcessor postProcessor : beanFactoryPostProcessors) {\n\n\t\t\t\t//\u5206\u7c7b\u5b58\u653eBeanDefinitionRegistryPostProcessor \u548c BeanFactoryPostProcessor\n\t\t\t\tif (postProcessor instanceof BeanDefinitionRegistryPostProcessor) {\n\t\t\t\t\tBeanDefinitionRegistryPostProcessor registryProcessor =\n\t\t\t\t\t\t\t(BeanDefinitionRegistryPostProcessor) postProcessor;\n\t\t\t\t\t//\u6267\u884cpostProcessBeanDefinitionRegistry\u65b9\u6cd5\n\t\t\t\t\tregistryProcessor.postProcessBeanDefinitionRegistry(registry);\n\t\t\t\t\tregistryProcessors.add(registryProcessor);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tregularPostProcessors.add(postProcessor);\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t//\u5904\u7406\u5f53\u524dBeanDefinitionRegistryPostProcessor\u5b9e\u73b0\u7c7b\n\t\t\tList<BeanDefinitionRegistryPostProcessor> currentRegistryProcessors = new ArrayList<>();\n\n\t\t\t// \u9996\u5148\u6267\u884c\u5b9e\u73b0\u4e86PriorityOrdered\u7684BeanDefinitionRegistryPostProcessor\u5b9e\u73b0\u7c7b\n\t\t\t// \u5728beanFacotry\u4e2d\u901a\u8fc7BeanDefinitionRegistryPostProcessor\u7c7b\u578b\u83b7\u53d6\u540d\u79f0\n\t\t\tString[] postProcessorNames =\n\t\t\t\t\tbeanFactory.getBeanNamesForType(BeanDefinitionRegistryPostProcessor.class, true, false);\n\t\t\tfor (String ppName : postProcessorNames) {\n\n\t\t\t\t//\u8fc7\u6ee4\u51fa\u6765PriorityOrdered\u7684\u5b9e\u73b0\u7c7b\n\t\t\t\tif (beanFactory.isTypeMatch(ppName, PriorityOrdered.class)) {\n\t\t\t\t\tcurrentRegistryProcessors.add(beanFactory.getBean(ppName, BeanDefinitionRegistryPostProcessor.class));\n\t\t\t\t\tprocessedBeans.add(ppName);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//\u6392\u5e8f\u6309\u7167PriorityOrdered\n\t\t\tsortPostProcessors(currentRegistryProcessors, beanFactory);\n\t\t\tregistryProcessors.addAll(currentRegistryProcessors);\n\t\t\t//\u6267\u884cBeanDefinitionRegistryPostProcessor#postProcessBeanDefinitionRegistry()\u65b9\u6cd5\n\t\t\tinvokeBeanDefinitionRegistryPostProcessors(currentRegistryProcessors, registry);\n\t\t\tcurrentRegistryProcessors.clear();\n\n\t\t\t// \u6267\u884cBeanDefinitionRegistryPostProcessors\u5b9e\u73b0\u4e86Ordered\u63a5\u53e3\u7684\u7c7b.\n\t\t\tpostProcessorNames = beanFactory.getBeanNamesForType(BeanDefinitionRegistryPostProcessor.class, true, false);\n\t\t\tfor (String ppName : postProcessorNames) {\n\t\t\t\tif (!processedBeans.contains(ppName) && beanFactory.isTypeMatch(ppName, Ordered.class)) {\n\t\t\t\t\tcurrentRegistryProcessors.add(beanFactory.getBean(ppName, BeanDefinitionRegistryPostProcessor.class));\n\t\t\t\t\tprocessedBeans.add(ppName);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsortPostProcessors(currentRegistryProcessors, beanFactory);\n\t\t\tregistryProcessors.addAll(currentRegistryProcessors);\n\t\t\tinvokeBeanDefinitionRegistryPostProcessors(currentRegistryProcessors, registry);\n\t\t\tcurrentRegistryProcessors.clear();\n\n\t\t\t// \u6700\u540e\u6267\u884c\u90a3\u4e9b\u5b9e\u73b0\u4e86BeanDefinitionRegistryPostProcessor\u7c7b\u7684\n\t\t\tboolean reiterate = true;\n\t\t\twhile (reiterate) {\n\t\t\t\treiterate = false;\n\t\t\t\tpostProcessorNames = beanFactory.getBeanNamesForType(BeanDefinitionRegistryPostProcessor.class, true, false);\n\t\t\t\tfor (String ppName : postProcessorNames) {\n\t\t\t\t\tif (!processedBeans.contains(ppName)) {\n\t\t\t\t\t\tcurrentRegistryProcessors.add(beanFactory.getBean(ppName, BeanDefinitionRegistryPostProcessor.class));\n\t\t\t\t\t\tprocessedBeans.add(ppName);\n\t\t\t\t\t\treiterate = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortPostProcessors(currentRegistryProcessors, beanFactory);\n\t\t\t\tregistryProcessors.addAll(currentRegistryProcessors);\n\t\t\t\tinvokeBeanDefinitionRegistryPostProcessors(currentRegistryProcessors, registry);\n\t\t\t\tcurrentRegistryProcessors.clear();\n\t\t\t}\n\n\n\t\t\t//\u8c03\u7528BeanFactoryPostProcessor\u7684postProcessBeanFactory\n\t\t\tinvokeBeanFactoryPostProcessors(registryProcessors, beanFactory);\n\t\t\tinvokeBeanFactoryPostProcessors(regularPostProcessors, beanFactory);\n\t\t}\n\n\t\telse {\n\t\t\t//\u76f4\u63a5\u8c03\u7528postProcessor#postProcessBeanFactory\n\t\t\tinvokeBeanFactoryPostProcessors(beanFactoryPostProcessors, beanFactory);\n\t\t}\n\n\t\t//\u4e0b\u9762\u5904\u7406\u7684\u662f\u5b9e\u73b0\u4e86BeanFactoryPostProcessor\u7684\u7c7b\n\t\tString[] postProcessorNames =\n\t\t\t\tbeanFactory.getBeanNamesForType(BeanFactoryPostProcessor.class, true, false);\n\n\t\t/**\n\t\t * \u4e09\u79cd\uff1a\n\t\t * 1 \u5b9e\u73b0\u4e86PriorityOrdered \u548c BeanFactoryPostProcessor\n\t\t * 2 \u5b9e\u73b0\u4e86Ordered \u548c BeanFactoryPostProcessor\n\t\t * 3 \u53ea\u5b9e\u73b0\u4e86BeanFactoryPostProcessor\n\t\t */\n\t\tList<BeanFactoryPostProcessor> priorityOrderedPostProcessors = new ArrayList<>();\n\t\tList<String> orderedPostProcessorNames = new ArrayList<>();\n\t\tList<String> nonOrderedPostProcessorNames = new ArrayList<>();\n\t\tfor (String ppName : postProcessorNames) {\n\n\t\t\tif (processedBeans.contains(ppName)) {\n\t\t\t\t// \u5982\u679c\u662fBeanDefinitionRegistryPostProcessor\u5904\u7406\u8fc7\u7684\u5c31\u4ec0\u4e48\u4e5f\u4e0d\u505a\n\t\t\t}\n\t\t\telse if (beanFactory.isTypeMatch(ppName, PriorityOrdered.class)) {\n\t\t\t\t//\u4fdd\u5b58\u5b9e\u73b0\u4e86PriorityOrdered\u63a5\u53e3\u7684BeanFactoryPostProcessor\n\t\t\t\tpriorityOrderedPostProcessors.add(beanFactory.getBean(ppName, BeanFactoryPostProcessor.class));\n\t\t\t}\n\t\t\telse if (beanFactory.isTypeMatch(ppName, Ordered.class)) {\n\t\t\t\t//\u4fdd\u5b58\u5b9e\u73b0\u4e86Ordered\u63a5\u53e3\u7684BeanFactoryPostProcessor\n\t\t\t\torderedPostProcessorNames.add(ppName);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//\u6b63\u5e38\u7684\u63a5\u53e3\n\t\t\t\tnonOrderedPostProcessorNames.add(ppName);\n\t\t\t}\n\t\t}\n\n\t\t//\u5bf9priorityOrderedPostProcessors\u8fdb\u884c\u6392\u5e8f\n\t\tsortPostProcessors(priorityOrderedPostProcessors, beanFactory);\n\t\t//\u6267\u884cBeanFactoryPostProcessor#postProcessBeanFactory()\u65b9\u6cd5\n\t\tinvokeBeanFactoryPostProcessors(priorityOrderedPostProcessors, beanFactory);\n\n\t\t// \u6267\u884c\u5b8c\u5b9e\u73b0\u4e86Ordered\u63a5\u53e3\u7684BeanFactoryPostProcessor\n\t\tList<BeanFactoryPostProcessor> orderedPostProcessors = new ArrayList<>();\n\t\tfor (String postProcessorName : orderedPostProcessorNames) {\n\t\t\torderedPostProcessors.add(beanFactory.getBean(postProcessorName, BeanFactoryPostProcessor.class));\n\t\t}\n\t\tsortPostProcessors(orderedPostProcessors, beanFactory);\n\t\tinvokeBeanFactoryPostProcessors(orderedPostProcessors, beanFactory);\n\n\t\t// \u6267\u884c\u5b8c\u5269\u4e0b\u7684BeanFactoryPostProcessor(\u6ca1\u6709\u5b9e\u73b0Ordered\u548cPriorityOrdered\u63a5\u53e3)\n\t\tList<BeanFactoryPostProcessor> nonOrderedPostProcessors = new ArrayList<>();\n\t\tfor (String postProcessorName : nonOrderedPostProcessorNames) {\n\t\t\tnonOrderedPostProcessors.add(beanFactory.getBean(postProcessorName, BeanFactoryPostProcessor.class));\n\t\t}\n\t\tinvokeBeanFactoryPostProcessors(nonOrderedPostProcessors, beanFactory);\n\n\n\t\tbeanFactory.clearMetadataCache();\n\t}\n"})}),"\n",(0,n.jsxs)(e.p,{children:["\u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\u6765\uff0c",(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"AbstractApplicationContext#refresh#invokeBeanFactoryPostProcessors"})})," \u8fd9\u4e2a\u65b9\u6cd5\u4e3b\u8981\u7528\u6765\u6267\u884c ",(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"BeanFactoryPostProcessor"})})," \u548c ",(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"BeanDefinitionRegistryPostProcessor"})})," \u8fd9\u4e24\u4e2a\u7c7b\u7684\u63a5\u53e3\u3002 ",(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"BeanDefinitionRegistryPostProcessor"})})," \u7ee7\u627f\u4e86  ",(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"BeanFactoryPostProcessor"})})," \u63a5\u53e3\u3002\u4ece\u8fd9\u91cc\u53ef\u4ee5\u770b\u51fa\u6765Spring\u5bb9\u5668\u662f\u5982\u4f55\u8c03\u7528\u8fd9\u4e24\u4e2a\u7c7b\u7684\u3002\u8fd9\u4e24\u4e2a\u7c7b\u6267\u884c\u7684\u987a\u5e8f"]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.strong,{children:"BeanDefinitionRegistryPostProcessor#postProcessBeanDefinitionRegistry"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.strong,{children:"BeanFactoryPostProcessor#postProcessBeanFactory"})}),"\n"]}),"\n",(0,n.jsx)(e.h3,{id:"3-\u603b\u7ed3",children:"3. \u603b\u7ed3"}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.code,{children:"BeanFactoryPostProcessor"})})," \u7684\u5b9e\u73b0\u7c7b\u4e3b\u8981\u5904\u7406\u7c7b\u4e0a\u9762\u7684\u6ce8\u89e3\u6bd4\u5982\uff1a"]}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"@Configuration"}),"\n",(0,n.jsx)(e.li,{children:"@Order"}),"\n",(0,n.jsx)(e.li,{children:"@Component"}),"\n",(0,n.jsx)(e.li,{children:"@PropertySources"}),"\n",(0,n.jsx)(e.li,{children:"@ComponentScans"}),"\n",(0,n.jsx)(e.li,{children:"@ComponentScan"}),"\n",(0,n.jsx)(e.li,{children:"@Import"}),"\n",(0,n.jsx)(e.li,{children:"@ImportResource"}),"\n",(0,n.jsx)(e.li,{children:"@Bean(\u7c7b\u5185\u90e8\u65b9\u6cd5\u4e0a)"}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"\u5904\u7406\u987a\u5e8f\u56fe\uff1a"}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:"https://github.com/mxsm/picture/blob/main/spring/BeanFactoryPostProcessor%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3%E5%A4%84%E7%90%86%E9%A1%BA%E5%BA%8F.png?raw=true",alt:""})}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:"https://blog.ljbmxsm.com/springframework/core-source-analysis/configurationclasspostprocesso/",children:"ConfigurationClassPostProcessor\u8be6\u89e3"})})]})}function l(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(d,{...t})}):d(t)}},8453:(t,e,r)=>{r.d(e,{R:()=>a,x:()=>i});var n=r(6540);const s={},o=n.createContext(s);function a(t){const e=n.useContext(o);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function i(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:a(t.components),n.createElement(o.Provider,{value:e},t.children)}}}]);