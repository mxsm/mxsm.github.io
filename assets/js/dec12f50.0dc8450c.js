"use strict";(self.webpackChunkmxsm_website=self.webpackChunkmxsm_website||[]).push([[262],{935:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var s=e(5893),t=e(1151);const l={title:"Rust \u4e2d\u7684\u9519\u8bef\u5904\u7406",linkTitle:"Rust \u4e2d\u7684\u9519\u8bef\u5904\u7406",sidebar_label:"Rust \u4e2d\u7684\u9519\u8bef\u5904\u7406",weight:202309091952,description:"Rust \u4e2d\u7684\u9519\u8bef\u5904\u7406"},i=void 0,o={id:"rust/rust-learn/error/error-handle",title:"Rust \u4e2d\u7684\u9519\u8bef\u5904\u7406",description:"Rust \u4e2d\u7684\u9519\u8bef\u5904\u7406",source:"@site/docs/rust/rust-learn/error/01-error-handle.md",sourceDirName:"rust/rust-learn/error",slug:"/rust/rust-learn/error/error-handle",permalink:"/docs/rust/rust-learn/error/error-handle",draft:!1,unlisted:!1,editUrl:"https://github.com/mxsm/mxsm-website/edit/develop/docs/rust/rust-learn/error/01-error-handle.md",tags:[],version:"current",lastUpdatedBy:"mxsm",lastUpdatedAt:1706459174,formattedLastUpdatedAt:"Jan 28, 2024",sidebarPosition:1,frontMatter:{title:"Rust \u4e2d\u7684\u9519\u8bef\u5904\u7406",linkTitle:"Rust \u4e2d\u7684\u9519\u8bef\u5904\u7406",sidebar_label:"Rust \u4e2d\u7684\u9519\u8bef\u5904\u7406",weight:202309091952,description:"Rust \u4e2d\u7684\u9519\u8bef\u5904\u7406"},sidebar:"rustLearn",previous:{title:"Understanding Ownership",permalink:"/docs/rust/rust-learn/error"},next:{title:"\u603b\u7ed3\u8bf4\u660e",permalink:"/docs/rust/rust-learn/summary"}},d={},c=[{value:"\u9519\u8bef\u4e0e\u5f02\u5e38",id:"\u9519\u8bef\u4e0e\u5f02\u5e38",level:2},{value:"Option",id:"option",level:2},{value:"Result",id:"result",level:2},{value:"Rust\u9519\u8bef\u4f20\u9012",id:"rust\u9519\u8bef\u4f20\u9012",level:2},{value:"Trait std::error::Error",id:"trait-stderrorerror",level:2},{value:"\u5982\u4f55\u81ea\u5b9a\u4e49\u9519\u8bef\u7c7b\u578b",id:"\u5982\u4f55\u81ea\u5b9a\u4e49\u9519\u8bef\u7c7b\u578b",level:2},{value:"\u5982\u4f55\u5904\u7406\u9519\u8bef",id:"\u5982\u4f55\u5904\u7406\u9519\u8bef",level:2}];function a(n){const r={a:"a",blockquote:"blockquote",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.p,{children:"\u4e0d\u7ba1\u5b66\u4ec0\u4e48\u5f00\u53d1\u8bed\u8a00\uff0c\u9519\u8bef\u5904\u7406\u662f\u4e00\u4e2a\u9700\u8981\u8981\u4f1a\u7684\uff0c\u4e0d\u540c\u7684\u8bed\u8a00\u6807\u51c6\u5e93\u90fd\u662f\u4ee5\u7edf\u4e00\u7684\u65b9\u5f0f\u5904\u7406\u9519\u8bef\u3002\u4eca\u5929\u5c31\u6765\u804a\u804aRust\u4e2d\u7684\u9519\u8bef\u5904\u7406\uff0c\u540c\u65f6\u5bf9\u6bd4Java\u4e2d\u7684\u9519\u8bef\u5904\u7406\u6709\u4ec0\u4e48\u4e0d\u540c\u3002"}),"\n",(0,s.jsx)(r.h2,{id:"\u9519\u8bef\u4e0e\u5f02\u5e38",children:"\u9519\u8bef\u4e0e\u5f02\u5e38"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"\u9519\u8bef\uff08Errors\uff09"}),"\uff1a\u8fd0\u884c\u65f6\u53d1\u751f\u7684\u4e0d\u5bfb\u5e38\u8d85\u51fa\u9884\u671f\u7684\u884c\u4e3a"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"\u9519\u8bef\u662f\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u901a\u5e38\u65e0\u6cd5\u901a\u8fc7\u4ee3\u7801\u6765\u5904\u7406\u6216\u4fee\u590d\u3002"})," \u9519\u8bef\u901a\u5e38\u8868\u793a\u7cfb\u7edf\u7ea7\u95ee\u9898\uff0c\u4f8b\u5982\u5185\u5b58\u8017\u5c3d\u3001\u865a\u62df\u673a\u5d29\u6e83\u3001\u7c7b\u627e\u4e0d\u5230\u7b49\u3002\u8fd9\u4e9b\u95ee\u9898\u901a\u5e38\u7531Java\u865a\u62df\u673a\uff08JVM\uff09\u6216\u5e95\u5c42\u64cd\u4f5c\u7cfb\u7edf\u5f15\u8d77\uff0c\u800c\u4e0d\u662f\u7531\u7a0b\u5e8f\u4ee3\u7801\u5f15\u8d77\u7684\u3002"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"\u9519\u8bef\u4e0d\u5e94\u8be5\u88ab\u7a0b\u5e8f\u5458\u6355\u83b7\u6216\u5904\u7406\u3002"})," \u7a0b\u5e8f\u5458\u65e0\u6cd5\u6709\u6548\u5730\u5904\u7406\u9519\u8bef\uff0c\u56e0\u6b64\u5b83\u4eec\u901a\u5e38\u4e0d\u88ab\u6355\u83b7\uff0c\u800c\u662f\u5bfc\u81f4\u7a0b\u5e8f\u7ec8\u6b62\u3002"]}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"\u5f02\u5e38\uff08Exceptions\uff09"}),"\uff1a\u8fd0\u884c\u65f6\u5019\u53d1\u751f\u7684\u4e0d\u89c4\u5219\uff0c",(0,s.jsx)(r.strong,{children:"\u9884\u6599\u4e4b\u5185\u7684\u884c\u4e3a"})," \u3002"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"\u5f02\u5e38\u662f\u53ef\u9884\u6d4b\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f16\u5199\u4ee3\u7801\u6765\u6355\u83b7\u548c\u5904\u7406\u3002"})," \u5f02\u5e38\u901a\u5e38\u7531\u7a0b\u5e8f\u4ee3\u7801\u5f15\u8d77\uff0c\u8868\u793a\u4e0d\u540c\u7c7b\u578b\u7684\u9519\u8bef\u60c5\u51b5\uff0c\u4f8b\u5982\u9664\u96f6\u9519\u8bef\u3001\u7a7a\u6307\u9488\u5f15\u7528\u3001\u6587\u4ef6\u672a\u627e\u5230\u7b49\u3002"]}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.strong,{children:"\u5f02\u5e38\u5904\u7406\u662f\u901a\u8fc7\u5f02\u5e38\u5904\u7406\u5668\u6765\u8fdb\u884c\u7684"})}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"option",children:"Option"}),"\n",(0,s.jsxs)(r.p,{children:["Rust\u548cJava\u7684\u4e00\u4e2a\u91cd\u8981\u7684\u4e0d\u540c\u5c31\u662f\uff1a",(0,s.jsxs)(r.strong,{children:["Rust\u4e2d\u6ca1\u6709",(0,s.jsx)(r.code,{children:"null"}),"\u7684\u6982\u5ff5"]}),"\u3002\u90a3\u4e48\u5c31\u6ca1\u529e\u6cd5\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u7136\u540e\u8d4b\u503cnull\u3002\u90a3\u4e48Rust\u4e2d\u9700\u8981\u9700\u8981\u8868\u8fbe\u76f8\u4f3c\u7684\u6982\u5ff5\u600e\u4e48\u529e\u3002\u5728Rust\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a",(0,s.jsx)(r.strong,{children:"struct Option"}),"\uff1a"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-rust",children:'pub enum Option<T> {\n    /// No value.\n    #[lang = "None"]\n    #[stable(feature = "rust1", since = "1.0.0")]\n    None,\n    /// Some value of type `T`.\n    #[lang = "Some"]\n    #[stable(feature = "rust1", since = "1.0.0")]\n    Some(#[stable(feature = "rust1", since = "1.0.0")] T),\n}\n'})}),"\n",(0,s.jsxs)(r.p,{children:["\u4ece\u4e0a\u9762\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u5f53\u4f60\u60f3\u8868\u8fbe**",(0,s.jsx)(r.code,{children:"null"}),"** \u7684\u65f6\u5019\u53ef\u4ee5\u7528None\u4ee3\u66ff\uff0c\u800c\u6709\u503c\u5c31\u53ef\u4ee5\u7528",(0,s.jsx)(r.strong,{children:"Some()"})," \u4ee3\u66ff\u3002\u90a3\u4e48\u5982\u4f55\u8bbf\u95eeSome\u4e2d\u7684\u5185\u5bb9\u5462\uff1f\u901a\u8fc7match\u83b7\u53d6"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-rust",children:'match option {\n    Some(target) => {println!("value={}",target)}\n    None => {println!("None Value")}\n}\n'})}),"\n",(0,s.jsx)(r.p,{children:"\u6216\u8005\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-rust",children:'let option = Option::Some(1);\nlet i = option.unwrap();\n\n//\u4e0b\u9762\u662f\u6e90\u7801\npub const fn unwrap(self) -> T {\n      match self {\n          Some(val) => val,\n          None => panic("called `Option::unwrap()` on a `None` value"),\n     }\n }\n'})}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:"Java\u4e2d\u4e5f\u6709\u7c7b\u4f3c\u7684\u7684\u7c7b\uff1aOptional \u4f46\u662f\u8fd9\u4e2a\u662f\u7528\u6765\u5904\u7406null\u5bf9\u8c61\uff0c\u51cf\u5c11\u7a7a\u6307\u9488"}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"result",children:"Result"}),"\n",(0,s.jsxs)(r.p,{children:["\u901a\u8fc7\u4e0a\u9762\u7684\u53ef\u4ee5\u77e5\u9053**",(0,s.jsx)(r.code,{children:"Option"}),"** \u7528\u6765\u5904\u7406**",(0,s.jsx)(r.code,{children:"null"}),"**\u3002 \u800cResult\u7528\u6765\u5904\u7406\u7ed3\u679c\uff1a"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-rust",children:'pub enum Result<T, E> {\n    /// Contains the success value\n    #[lang = "Ok"]\n    #[stable(feature = "rust1", since = "1.0.0")]\n    Ok(#[stable(feature = "rust1", since = "1.0.0")] T),\n\n    /// Contains the error value\n    #[lang = "Err"]\n    #[stable(feature = "rust1", since = "1.0.0")]\n    Err(#[stable(feature = "rust1", since = "1.0.0")] E),\n}\n'})}),"\n",(0,s.jsx)(r.p,{children:"\u901a\u8fc7\u4e0a\u9762\u7684Result\u7684\u6e90\u7801\u53ef\u4ee5\u770b\u51fa\u6765\uff0cResult\u679a\u4e3e\u4e3b\u8981\u6709\u4e24\u4e2a\u7c7b\u578b\uff1a"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Ok\uff1a"})," \u8868\u793a\u6ca1\u6709\u9519\u8bef"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Err\uff1a"})," \u8868\u793a\u9519\u8bef"]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"\u6240\u4ee5Result\u53ef\u4ee5\u4f7f\u7528 pattern matching\u3002\u4f46\u662f\u4ece\u4e0a\u9762\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\u6765\u8bed\u4e49\u5316\u7684Result\u7684\u6cdb\u578bT\u8868\u793a\u6ca1\u6709\u9519\u8bef\u7684\u5bf9\u8c61\uff0c\u800cE\u8868\u793a\u9519\u8bef\u7684\u7c7b\u578b\u3002\u4f46\u662f\u4e0b\u9762\u8fd9\u6837\u4e5f\u662f\u53ef\u4ee5\u7684"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-rust",children:"    fn read(num: i32)->Result<i32,i32>{\n        if num > 0 {\n            Ok(num)\n        }else {\n            Err(num)\n        }\n    }\n"})}),"\n",(0,s.jsx)(r.p,{children:"\u8fd9\u91cc\u4f60\u4f1a\u53d1\u73b0\u90fd\u662f\u4e00\u79cd\u7c7b\u578b\u5e76\u6ca1\u6709\u4ec0\u4e48\u9519\u8bef\u3002"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:"\u53ef\u4ee5\u4e86\u89e3\u4e00\u4e0b\uff1aanyhow\u7684crate"}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"rust\u9519\u8bef\u4f20\u9012",children:"Rust\u9519\u8bef\u4f20\u9012"}),"\n",(0,s.jsxs)(r.p,{children:["\u901a\u8fc7\u4e0a\u9762\u77e5\u9053**",(0,s.jsx)(r.code,{children:"Result"}),"** \u4e2d\u7684Err\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\uff0c\u800c\u5728Java\u4e2d\u6709\u4e00\u4e2a\u53eb\u505a\u9519\u8bef\u4f20\u9012\u7684\u6982\u5ff5\u3002\u65b9\u6cd5A\u629b\u51faException1\uff0c\u5f53\u65b9\u6cd5B\u8c03\u7528\u65b9\u6cd5A\u7684\u65f6\u5019\uff0c\u65b9\u6cd5A\u629b\u51fa\u7684\u9519\u8bef\u5c31\u4f1a\u4f20\u9012\u629b\u51fa\u5230\u65b9\u6cd5B\u3002\u5728Rust\u662f\u600e\u4e48\u6837\u7684\u5462\u770b\u4e00\u4e0b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-rust",children:'\n    fn a()->i32{\n        let result1 = "t".parse::<i32>().unwrap(); //ParseIntError\n        let result = "a".parse::<bool>().unwrap(); //ParseBoolError\n        1\n    }\n'})}),"\n",(0,s.jsxs)(r.p,{children:["\u4e0a\u9762\u7684\u4ee3\u7801\u6709\u4e2a\u95ee\u9898\u5c31\u662f\uff1a\u4e24\u4e2a\u89e3\u6790\u7684\u4ee3\u7801\u4f1a\u629b\u51fa\u4e0d\u540c\u7684\u9519\u8bef\u3002\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u629b\u51fa\u4ec0\u4e48\u9519\u8bef\u7c7b\u578b\u5462\uff1f\u8054\u60f3\u5230Java\u7684\u4e2d\u9519\u8bef\u6216\u8005\u5f02\u5e38\u901a\u5e38\u4f1a\u6709\u4e00\u4e2a\u9876\u5c42Class\uff0c\u7136\u540e\u5176\u4ed6\u7684\u5c31\u7ee7\u627f\u5373\u53ef\uff0c\u6240\u4ee5\u5728Rust\u4e2d\u4e5f\u6709\u8fd9\u6837\u4e00\u4e2atrait\uff1a",(0,s.jsx)(r.strong,{children:"Error"})," \u6211\u4eec\u9996\u5148\u770b\u4e00\u4e0bParseIntError\u7684\u6e90\u7801\uff1a"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-rust",children:'impl Error for ParseIntError {\n    #[allow(deprecated)]\n    fn description(&self) -> &str {\n        match self.kind {\n            IntErrorKind::Empty => "cannot parse integer from empty string",\n            IntErrorKind::InvalidDigit => "invalid digit found in string",\n            IntErrorKind::PosOverflow => "number too large to fit in target type",\n            IntErrorKind::NegOverflow => "number too small to fit in target type",\n            IntErrorKind::Zero => "number would be zero for non-zero type",\n        }\n    }\n}\n'})}),"\n",(0,s.jsx)(r.p,{children:"\u5b9e\u73b0\u4e86Error\u3002"}),"\n",(0,s.jsx)(r.h2,{id:"trait-stderrorerror",children:"Trait std::error::Error"}),"\n",(0,s.jsxs)(r.p,{children:["Rust\u7edf\u4e00\u7684\u9519\u8bef\u7c7b\u578b",(0,s.jsx)(r.strong,{children:"Error"})]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-rust",children:"pub trait Error: Debug + Display {\n    \n    fn source(&self) -> Option<&(dyn Error + 'static)> {\n        None\n    }\n\n    fn type_id(&self, _: private::Internal) -> TypeId\n    where\n        Self: 'static,\n    {\n        TypeId::of::<Self>()\n    }\n\n    fn provide<'a>(&'a self, demand: &mut Demand<'a>) {}\n}\n"})}),"\n",(0,s.jsx)(r.p,{children:"\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u5220\u9664\u4e86\u8fc7\u671f\u7684\u65b9\u6cd5\u3002 Error\u7ee7\u627f\u4e86Debug\u548cDisplay\uff0c\u6240\u4ee5\u5f53\u81ea\u5b9a\u4e49\u7684Error\u7684\u65f6\u5019\u9700\u8981\u5b9e\u73b0Debug\u548cDisplay\u3002"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:"Rust\u4e2d\u7684\u9519\u8bef\u7684\u4f20\u9012\u548cJava\u4e2d\u7684\u9519\u8bef\u4f20\u9012\u7c7b\u4f3c\uff0c\u90fd\u662f\u901a\u8fc7\u5b9a\u4e49\u4e00\u4e2a\u9876\u7ea7\u7684\u63a5\u53e3(Java)\uff0c Rust\u4e2d\u79f0\u4e4b\u4e3aTrait\u3002 \u7136\u540e\u5b9e\u73b0\u5bf9\u5e94\u7684\u63a5\u53e3\u5373\u53ef"}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"\u5982\u4f55\u81ea\u5b9a\u4e49\u9519\u8bef\u7c7b\u578b",children:"\u5982\u4f55\u81ea\u5b9a\u4e49\u9519\u8bef\u7c7b\u578b"}),"\n",(0,s.jsxs)(r.p,{children:["\u901a\u8fc7\u5b9e\u73b0",(0,s.jsx)(r.strong,{children:"Error"})," \u6765\u5b8c\u6210\u81ea\u5b9a\u4e49\u9519\u8bef"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-rust",children:'use std::error::Error;\nuse std::fmt::{Debug, Display, Formatter};\nuse std::num::ParseIntError;\nuse std::str::ParseBoolError;\n\nfn main() {\n   parse("1").unwrap();\n}\n\nfn parse(st: &str) -> Result<bool, CustomError> {\n    st.parse::<bool>().map_err(|e| {\n        CustomError {\n            kind: ErrorKind::BoolParseError(e)\n        }\n    })\n}\n\n#[derive(Clone)]\nstruct CustomError {\n    kind: ErrorKind,\n}\n\n#[derive(Clone)]\nenum ErrorKind {\n    IntParseError(ParseIntError),\n    BoolParseError(ParseBoolError),\n}\n\nimpl Display for ErrorKind {\n    fn fmt(&self, f: &mut Formatter<\'_>) -> std::fmt::Result {\n        match self {\n            ErrorKind::IntParseError(ref err) => write!(f, "Integer parsing error: {}",err),\n            ErrorKind::BoolParseError(ref err) => write!(f, "Boolean parsing error: {}",err),\n        }\n    }\n}\n\nimpl Debug for ErrorKind {\n    fn fmt(&self, f: &mut Formatter<\'_>) -> std::fmt::Result {\n        match self {\n            ErrorKind::IntParseError(ref err) => write!(f, "Integer parsing error: {}",err),\n            ErrorKind::BoolParseError(ref err) => write!(f, "Boolean parsing error: {}",err),\n        }\n    }\n}\n\nimpl Display for CustomError {\n    fn fmt(&self, f: &mut Formatter<\'_>) -> std::fmt::Result {\n        write!(f, "Kind={}", self.kind.to_string())\n    }\n}\n\nimpl Debug for CustomError {\n    fn fmt(&self, f: &mut Formatter<\'_>) -> std::fmt::Result {\n        write!(f, "Kind={}", self.kind.to_string())\n    }\n}\n\nimpl Error for CustomError {}\n'})}),"\n",(0,s.jsx)(r.h2,{id:"\u5982\u4f55\u5904\u7406\u9519\u8bef",children:"\u5982\u4f55\u5904\u7406\u9519\u8bef"}),"\n",(0,s.jsx)(r.p,{children:"\u5728 Rust \u4e2d\uff0c\u6709\u51e0\u79cd\u5904\u7406\u9519\u8bef\u7684\u65b9\u5f0f\uff0c\u53d6\u51b3\u4e8e\u60a8\u7684\u9700\u6c42\u548c\u4ee3\u7801\u7ed3\u6784\u3002\u4ee5\u4e0b\u662f Rust \u4e2d\u5904\u7406\u9519\u8bef\u7684\u4e3b\u8981\u65b9\u6cd5\uff1a"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Result \u7c7b\u578b"}),"\uff1a"]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"Result"})," \u662f Rust \u4e2d\u7528\u4e8e\u5904\u7406\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef\u7684\u64cd\u4f5c\u7684\u6807\u51c6\u65b9\u5f0f\u3002\u5b83\u6709\u4e24\u4e2a\u53d8\u4f53\uff1a",(0,s.jsx)(r.code,{children:"Result<T, E>"})," \u548c ",(0,s.jsx)(r.code,{children:"Result<(), E>"}),"\u3002"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"Result<T, E>"}),"\uff1a\u8868\u793a\u53ef\u80fd\u8fd4\u56de\u4e00\u4e2a\u7c7b\u578b\u4e3a ",(0,s.jsx)(r.code,{children:"T"})," \u7684\u503c\u6216\u8005\u4e00\u4e2a\u9519\u8bef\u7c7b\u578b\u4e3a ",(0,s.jsx)(r.code,{children:"E"})," \u7684\u9519\u8bef\u3002"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"Result<(), E>"}),"\uff1a\u8868\u793a\u53ef\u80fd\u8fd4\u56de\u4e00\u4e2a\u6210\u529f\u72b6\u6001\uff08",(0,s.jsx)(r.code,{children:"Ok(())"}),"\uff09\u6216\u8005\u4e00\u4e2a\u9519\u8bef\u7c7b\u578b\u4e3a ",(0,s.jsx)(r.code,{children:"E"})," \u7684\u9519\u8bef\u3002"]}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["\u60a8\u53ef\u4ee5\u4f7f\u7528 ",(0,s.jsx)(r.code,{children:"match"})," \u8868\u8fbe\u5f0f\u6216 ",(0,s.jsx)(r.code,{children:"unwrap"})," \u65b9\u6cd5\u6765\u5904\u7406 ",(0,s.jsx)(r.code,{children:"Result"})," \u7c7b\u578b\u3002"]}),"\n",(0,s.jsx)(r.p,{children:"\u793a\u4f8b\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-rust",children:'fn divide(x: i32, y: i32) -> Result<i32, &\'static str> {\n    if y == 0 {\n        return Err("division by zero");\n    }\n    Ok(x / y)\n}\n\nfn main() {\n    let result = divide(10, 2);\n\n    match result {\n        Ok(value) => println!("Result: {}", value),\n        Err(error) => println!("Error: {}", error),\n    }\n}\n'})}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"panic! \u5b8f"}),"\uff1a"]}),"\n",(0,s.jsxs)(r.p,{children:["\u5f53\u9047\u5230\u65e0\u6cd5\u6062\u590d\u7684\u9519\u8bef\u6216\u4e0d\u5e94\u8be5\u53d1\u751f\u7684\u60c5\u51b5\u65f6\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 ",(0,s.jsx)(r.code,{children:"panic!"})," \u5b8f\u6765\u89e6\u53d1\u6050\u614c\uff08panic\uff09\u3002\u6050\u614c\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u7acb\u5373\u7ec8\u6b62\u5e76\u6253\u5370\u9519\u8bef\u4fe1\u606f\u3002\u901a\u5e38\uff0c",(0,s.jsx)(r.code,{children:"panic!"})," \u7528\u4e8e\u8868\u793a\u7a0b\u5e8f\u9047\u5230\u4e86\u4e0d\u53ef\u4fee\u590d\u7684\u9519\u8bef\u60c5\u51b5\u3002"]}),"\n",(0,s.jsx)(r.p,{children:"\u793a\u4f8b\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-rust",children:'fn main() {\n    let x = 42;\n    if x < 0 {\n        panic!("x should be a positive number");\n    }\n}\n'})}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"? \u8fd0\u7b97\u7b26"}),"\uff1a"]}),"\n",(0,s.jsxs)(r.p,{children:["\u5728\u51fd\u6570\u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 ",(0,s.jsx)(r.code,{children:"?"})," \u8fd0\u7b97\u7b26\u6765\u5feb\u901f\u5904\u7406 ",(0,s.jsx)(r.code,{children:"Result"})," \u7c7b\u578b\u3002\u5982\u679c\u51fd\u6570\u8fd4\u56de\u7684\u662f ",(0,s.jsx)(r.code,{children:"Result"}),"\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 ",(0,s.jsx)(r.code,{children:"?"})," \u8fd0\u7b97\u7b26\u5c06\u9519\u8bef\u4f20\u64ad\u7ed9\u8c03\u7528\u8005\u3002"]}),"\n",(0,s.jsx)(r.p,{children:"\u793a\u4f8b\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-rust",children:'fn read_file() -> Result<String, std::io::Error> {\n    let content = std::fs::read_to_string("file.txt")?;\n    Ok(content)\n}\n\nfn main() {\n    match read_file() {\n        Ok(content) => println!("File content: {}", content),\n        Err(error) => println!("Error: {}", error),\n    }\n}\n'})}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"\u81ea\u5b9a\u4e49\u9519\u8bef\u7c7b\u578b"}),"\uff1a"]}),"\n",(0,s.jsx)(r.p,{children:"\u60a8\u53ef\u4ee5\u521b\u5efa\u81ea\u5b9a\u4e49\u7684\u9519\u8bef\u7c7b\u578b\uff0c\u901a\u5e38\u662f\u679a\u4e3e\u7c7b\u578b\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u8868\u793a\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u4e0d\u540c\u9519\u8bef\u60c5\u51b5\u3002\u8fd9\u4f7f\u5f97\u9519\u8bef\u7684\u7c7b\u578b\u66f4\u5177\u53ef\u8bfb\u6027\u548c\u8868\u8fbe\u6027\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u793a\u4f8b\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-rust",children:'enum MyError {\n    FileNotFound,\n    InvalidInput(String),\n    OtherError,\n}\n\nfn process_data(data: &str) -> Result<(), MyError> {\n    if data.is_empty() {\n        return Err(MyError::InvalidInput("Input data is empty".to_string()));\n    }\n    // \u5904\u7406\u6570\u636e\n    Ok(())\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["\u8fd9\u4e9b\u662f Rust \u4e2d\u5904\u7406\u9519\u8bef\u7684\u4e3b\u8981\u65b9\u5f0f\u3002\u901a\u8fc7\u7ed3\u5408\u4f7f\u7528 ",(0,s.jsx)(r.code,{children:"Result"})," \u7c7b\u578b\u3001",(0,s.jsx)(r.code,{children:"panic!"})," \u5b8f\u548c ",(0,s.jsx)(r.code,{children:"?"})," \u8fd0\u7b97\u7b26\uff0c\u4ee5\u53ca\u81ea\u5b9a\u4e49\u9519\u8bef\u7c7b\u578b\uff0c\u60a8\u53ef\u4ee5\u6709\u6548\u5730\u5904\u7406\u53ef\u80fd\u51fa\u73b0\u7684\u9519\u8bef\u60c5\u51b5\uff0c\u5e76\u7f16\u5199\u66f4\u5065\u58ee\u7684 Rust \u4ee3\u7801\u3002"]}),"\n",(0,s.jsx)(r.p,{children:"\u53c2\u8003\u6587\u732e\uff1a"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"https://sled.rs/errors.html",children:"https://sled.rs/errors.html"})}),"\n"]}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:["\u6211\u662f\u8682\u8681\u80cc\u5927\u8c61\uff0c\u6587\u7ae0\u5bf9\u4f60\u6709\u5e2e\u52a9\u7ed9",(0,s.jsx)(r.a,{href:"https://github.com/mxsm/mxsm-website",children:"\u9879\u76ee\u70b9\u4e2a\u2764"}),"\u5173\u6ce8\u6211",(0,s.jsxs)(r.a,{href:"https://github.com/mxsm",children:["GitHub",":mxsm"]}),"\uff0c\u6587\u7ae0\u6709\u4e0d\u6b63\u786e\u7684\u5730\u65b9\u8bf7\u60a8\u65a7\u6b63,\u521b\u5efa",(0,s.jsx)(r.a,{href:"https://github.com/mxsm/mxsm-website/issues",children:"ISSUE\u63d0\u4ea4PR"}),"~\u8c22\u8c22! Emal",":mxsm","@apache.com"]}),"\n"]})]})}function u(n={}){const{wrapper:r}={...(0,t.a)(),...n.components};return r?(0,s.jsx)(r,{...n,children:(0,s.jsx)(a,{...n})}):a(n)}},1151:(n,r,e)=>{e.d(r,{Z:()=>o,a:()=>i});var s=e(7294);const t={},l=s.createContext(t);function i(n){const r=s.useContext(l);return s.useMemo((function(){return"function"==typeof n?n(r):{...r,...n}}),[r,n])}function o(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:i(n.components),s.createElement(l.Provider,{value:r},n.children)}}}]);