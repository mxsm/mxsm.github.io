"use strict";(self.webpackChunkmxsm_website=self.webpackChunkmxsm_website||[]).push([[1814],{3905:(t,e,r)=>{r.d(e,{Zo:()=>s,kt:()=>d});var a=r(7294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function l(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?l(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function o(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},l=Object.keys(t);for(a=0;a<l.length;a++)r=l[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)r=l[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var m=a.createContext({}),p=function(t){var e=a.useContext(m),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},s=function(t){var e=p(t.components);return a.createElement(m.Provider,{value:e},t.children)},u="mdxType",k={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},c=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,l=t.originalType,m=t.parentName,s=o(t,["components","mdxType","originalType","parentName"]),u=p(r),c=n,d=u["".concat(m,".").concat(c)]||u[c]||k[c]||l;return r?a.createElement(d,i(i({ref:e},s),{},{components:r})):a.createElement(d,i({ref:e},s))}));function d(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=r.length,i=new Array(l);i[0]=c;var o={};for(var m in e)hasOwnProperty.call(e,m)&&(o[m]=e[m]);o.originalType=t,o[u]="string"==typeof t?t:n,i[1]=o;for(var p=2;p<l;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},5618:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>m,contentTitle:()=>i,default:()=>k,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const l={title:"RocketMQ5.0",sidebar_label:"Overview",hide_table_of_contents:!0,slug:"/rocketmq/rocketmq-rust"},i="rocketmq-rust",o={unversionedId:"rocketmq/rocketmq-rust/index",id:"rocketmq/rocketmq-rust/index",title:"RocketMQ5.0",description:"Welcome to Apache Rocketmq Rust implementation (Unofficial ). RocketMQ-Rust is a reimplementation of the Apache RocketMQ message middleware in the Rust language. This project aims to provide Rust developers with a high-performance and reliable message queue service, making full use of the features of the Rust language.",source:"@site/docs/rocketmq/rocketmq-rust/index.md",sourceDirName:"rocketmq/rocketmq-rust",slug:"/rocketmq/rocketmq-rust",permalink:"/docs/rocketmq/rocketmq-rust",draft:!1,editUrl:"https://github.com/mxsm/mxsm-website/edit/develop/docs/rocketmq/rocketmq-rust/index.md",tags:[],version:"current",lastUpdatedBy:"mxsm",lastUpdatedAt:1706424803,formattedLastUpdatedAt:"Jan 28, 2024",frontMatter:{title:"RocketMQ5.0",sidebar_label:"Overview",hide_table_of_contents:!0,slug:"/rocketmq/rocketmq-rust"},sidebar:"rocketmqrust"},m={},p=[{value:"RocketMQ-Rust Features",id:"rocketmq-rust-features",level:3},{value:"Getting Started",id:"getting-started",level:2},{value:"Requirements",id:"requirements",level:3},{value:"Run name server",id:"run-name-server",level:3},{value:"Modules",id:"modules",level:2},{value:"Name Server",id:"name-server",level:2},{value:"Contributing",id:"contributing",level:2},{value:"License",id:"license",level:2}],s={toc:p},u="wrapper";function k(t){let{components:e,...r}=t;return(0,n.kt)(u,(0,a.Z)({},s,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"rocketmq-rust"},"rocketmq-rust"),(0,n.kt)("p",null,"Welcome to ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/apache/rocketmq"},"Apache Rocketmq")," Rust implementation (Unofficial ). ",(0,n.kt)("strong",{parentName:"p"},"RocketMQ-Rust")," is a reimplementation of the Apache RocketMQ message middleware in the Rust language. This project aims to provide Rust developers with a high-performance and reliable message queue service, making full use of the features of the Rust language."),(0,n.kt)("h3",{id:"rocketmq-rust-features"},"RocketMQ-Rust Features"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Rust Language Advantages:")," Leveraging the benefits of Rust, such as memory safety, zero-cost abstractions, and high concurrency performance, RocketMQ-Rust offers an efficient and reliable message middleware."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Asynchronous and Non-blocking Design:")," RocketMQ-Rust takes full advantage of Rust's asynchronous programming capabilities, adopting a non-blocking design that supports high-concurrency message processing."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Ecosystem Integration:")," As part of the Rust ecosystem, RocketMQ-Rust integrates well with other libraries and frameworks within the Rust ecosystem, providing flexible integration options for developers."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Cross-platform Support:")," RocketMQ-Rust supports multiple platforms, including Linux, Windows, macOS, making it convenient for use in different environments.")),(0,n.kt)("h2",{id:"getting-started"},"Getting Started"),(0,n.kt)("h3",{id:"requirements"},"Requirements"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"rust toolchain MSRV is 1.75.(stable,nightly)")),(0,n.kt)("h3",{id:"run-name-server"},"Run name server"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Run the following command to see usage\uff1a")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"windows platform")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-cmd"},"cargo run --bin rocketmq-namesrv-rust -- --help\n\nRocketMQ Name server(Rust)\n\nUsage: rocketmq-namesrv-rust.exe [OPTIONS]\n\nOptions:\n  -p, --port <PORT>  rocketmq name server port [default: 9876]\n  -i, --ip <IP>      rocketmq name server ip [default: 127.0.0.1]\n  -h, --help         Print help\n  -V, --version      Print version\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Linux platform")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"$ cargo run --bin rocketmq-namesrv-rust -- --help\n\nRocketMQ Name server(Rust)\n\nUsage: rocketmq-namesrv-rust [OPTIONS]\n\nOptions:\n  -p, --port <PORT>  rocketmq name server port [default: 9876]\n  -i, --ip <IP>      rocketmq name server ip [default: 127.0.0.1]\n  -h, --help         Print help\n  -V, --version      Print version\n")))),(0,n.kt)("p",null,"Run the following command to start the name server"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"cargo run --bin rocketmq-namesrv-rust\n")),(0,n.kt)("h2",{id:"modules"},"Modules"),(0,n.kt)("p",null,"The existing RocketMQ has the following functional modules:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Name Server")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Broker")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Store (Local Storage)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Controller (High Availability)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Client (SDK)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Proxy")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Tiered Store (Tiered Storage Module)"))),(0,n.kt)("p",null,"The specific functions of each module can be referred to in the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/apache/rocketmq/tree/develop/docs"},"official RocketMQ documentation"),". The Rust implementation will be carried out sequentially in the following order."),(0,n.kt)("h2",{id:"name-server"},"Name Server"),(0,n.kt)("p",null,"Feature list:"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Not support: \ud83d\udc94 \u274c"),(0,n.kt)("p",{parentName:"blockquote"},"Base support: \u2764\ufe0f \u2705"),(0,n.kt)("p",{parentName:"blockquote"},"Perfect support: \ud83d\udc96 \u2705")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Feature"),(0,n.kt)("th",{parentName:"tr",align:null},"request code"),(0,n.kt)("th",{parentName:"tr",align:null},"Support"),(0,n.kt)("th",{parentName:"tr",align:null},"remark"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Put KV Config"),(0,n.kt)("td",{parentName:"tr",align:null},"100"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc96 \u2705"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Get KV Config"),(0,n.kt)("td",{parentName:"tr",align:null},"101"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc96 \u2705"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Delete KV Config"),(0,n.kt)("td",{parentName:"tr",align:null},"102"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc96 \u2705"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Get kv list by namespace"),(0,n.kt)("td",{parentName:"tr",align:null},"219"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc96 \u2705"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Query Data Version"),(0,n.kt)("td",{parentName:"tr",align:null},"322"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc96 \u2705"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Register Broker"),(0,n.kt)("td",{parentName:"tr",align:null},"103"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc96 \u2705"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Unregister Broker"),(0,n.kt)("td",{parentName:"tr",align:null},"104"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc96 \u2705"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Broker Heartbeat"),(0,n.kt)("td",{parentName:"tr",align:null},"904"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc96 \u2705"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Get broker member_group"),(0,n.kt)("td",{parentName:"tr",align:null},"901"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc96 \u2705"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Get broker cluster info"),(0,n.kt)("td",{parentName:"tr",align:null},"106"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc96 \u2705"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Wipe write perm of boker"),(0,n.kt)("td",{parentName:"tr",align:null},"205"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc96 \u2705"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Add write perm of brober"),(0,n.kt)("td",{parentName:"tr",align:null},"327"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc96 \u2705"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Get all topic list from name server"),(0,n.kt)("td",{parentName:"tr",align:null},"206"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc96 \u2705"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Delete topic in name server"),(0,n.kt)("td",{parentName:"tr",align:null},"216"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc96 \u2705"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Register topic in name server"),(0,n.kt)("td",{parentName:"tr",align:null},"217"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc96 \u2705"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Get topics by cluster"),(0,n.kt)("td",{parentName:"tr",align:null},"224"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc96 \u2705"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Get system topic list from name server"),(0,n.kt)("td",{parentName:"tr",align:null},"304"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc96 \u2705"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Get unit topic list"),(0,n.kt)("td",{parentName:"tr",align:null},"311"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc96 \u2705"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Get has unit sub topic list"),(0,n.kt)("td",{parentName:"tr",align:null},"312"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc96 \u2705"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Get has unit sub ununit topic list"),(0,n.kt)("td",{parentName:"tr",align:null},"313"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc96 \u2705"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Update name server config"),(0,n.kt)("td",{parentName:"tr",align:null},"318"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc94 \u274c"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Get name server config"),(0,n.kt)("td",{parentName:"tr",align:null},"318"),(0,n.kt)("td",{parentName:"tr",align:null},"\ud83d\udc94 \u274c"),(0,n.kt)("td",{parentName:"tr",align:null})))),(0,n.kt)("p",null,"Other module implementations will be done subsequently, starting with the Rust implementation of the Name Server. The goal is to achieve functionality similar to the Java version."),(0,n.kt)("h2",{id:"contributing"},"Contributing"),(0,n.kt)("p",null,"Contributions to code, issue reporting, and suggestions are welcome. The development of RocketMQ-Rust relies on the support of developers. Let's collaborate to advance Rust in the message middleware domain."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://repobeats.axiom.co/api/embed/6ca125de92b36e1f78c6681d0a1296b8958adea1.svg",alt:"Alt",title:"Repobeats analytics image"})),(0,n.kt)("a",{href:"https://github.com/mxsm/rocketmq-rust/graphs/contributors"},(0,n.kt)("img",{src:"https://contrib.rocks/image?repo=mxsm/rocketmq-rust&anon=1"})),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"th"},"Stargazers Over Time")),(0,n.kt)("th",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"th"},"Contributors Over Time")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("a",{parentName:"td",href:"https://api.star-history.com/svg?repos=mxsm/rocketmq-rust&type=Date"},(0,n.kt)("img",{parentName:"a",src:"https://api.star-history.com/svg?repos=mxsm/rocketmq-rust&type=Date",alt:"Stargazers over time"}))),(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("a",{parentName:"td",href:"https://git-contributor.com?chart=contributorOverTime&repo=mxsm/rocketmq-rust"},(0,n.kt)("img",{parentName:"a",src:"https://contributor-overtime-api.git-contributor.com/contributors-svg?chart=contributorOverTime&repo=mxsm/rocketmq-rust",alt:"GitHub Contributor Over Time"})))))),(0,n.kt)("h2",{id:"license"},"License"),(0,n.kt)("p",null,"RocketMQ-Rust is licensed under the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/mxsm/rocketmq-rust/blob/main/LICENSE-APACHE"},"Apache License 2.0")," and ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/mxsm/rocketmq-rust/blob/main/LICENSE-MIT"},"MIT license")))}k.isMDXComponent=!0}}]);