"use strict";(self.webpackChunkmxsm_website=self.webpackChunkmxsm_website||[]).push([[48307],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>u});var a=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var i=a.createContext({}),d=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=d(e.components);return a.createElement(i.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(t),u=l,h=p["".concat(i,".").concat(u)]||p[u]||m[u]||r;return t?a.createElement(h,o(o({ref:n},c),{},{components:t})):a.createElement(h,o({ref:n},c))}));function u(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,o=new Array(r);o[0]=p;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:l,o[1]=s;for(var d=2;d<r;d++)o[d]=t[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},58215:(e,n,t)=>{t.d(n,{Z:()=>l});var a=t(67294);const l=function(e){let{children:n,hidden:t,className:l}=e;return a.createElement("div",{role:"tabpanel",hidden:t,className:l},n)}},26396:(e,n,t)=>{t.d(n,{Z:()=>p});var a=t(87462),l=t(67294),r=t(72389),o=t(79443);const s=function(){const e=(0,l.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e};var i=t(89521),d=t(86010);const c="tabItem_vU9c";function m(e){var n,t;const{lazy:a,block:r,defaultValue:o,values:m,groupId:p,className:u}=e,h=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=m??h.map((e=>{let{props:{value:n,label:t}}=e;return{value:n,label:t}})),b=(0,i.lx)(k,((e,n)=>e.value===n.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===o?o:o??(null==(n=h.find((e=>e.props.default)))?void 0:n.props.value)??(null==(t=h[0])?void 0:t.props.value);if(null!==g&&!k.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:N,setTabGroupChoices:C}=s(),[y,v]=(0,l.useState)(g),f=[],{blockElementScrollPositionUntilNextRender:x}=(0,i.o5)();if(null!=p){const e=N[p];null!=e&&e!==y&&k.some((n=>n.value===e))&&v(e)}const w=e=>{const n=e.currentTarget,t=f.indexOf(n),a=k[t].value;a!==y&&(x(n),v(a),null!=p&&C(p,a))},A=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{const n=f.indexOf(e.currentTarget)+1;t=f[n]||f[0];break}case"ArrowLeft":{const n=f.indexOf(e.currentTarget)-1;t=f[n]||f[f.length-1];break}}null==(n=t)||n.focus()};return l.createElement("div",{className:"tabs-container"},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,d.Z)("tabs",{"tabs--block":r},u)},k.map((e=>{let{value:n,label:t}=e;return l.createElement("li",{role:"tab",tabIndex:y===n?0:-1,"aria-selected":y===n,className:(0,d.Z)("tabs__item",c,{"tabs__item--active":y===n}),key:n,ref:e=>f.push(e),onKeyDown:A,onFocus:w,onClick:w},t??n)}))),a?(0,l.cloneElement)(h.filter((e=>e.props.value===y))[0],{className:"margin-vert--md"}):l.createElement("div",{className:"margin-vert--md"},h.map(((e,n)=>(0,l.cloneElement)(e,{key:n,hidden:e.props.value!==y})))))}function p(e){const n=(0,r.Z)();return l.createElement(m,(0,a.Z)({key:String(n)},e))}},80744:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var a=t(87462),l=(t(67294),t(3905)),r=t(26396),o=t(58215);const s={sidebar_label:"ion-alert",demoUrl:"/docs/demos/api/alert/index.html",demoSourceUrl:"https://github.com/ionic-team/ionic-docs/tree/main/static/demos/api/alert/index.html"},i="ion-alert",d={unversionedId:"api/alert",id:"version-v5/api/alert",isDocsHomePage:!1,title:"ion-alert",description:"An Alert is a dialog that presents users with information or collects information from the user using inputs. An alert appears on top of the app's content, and must be manually dismissed by the user before they can resume interaction with the app. It can also optionally have a header, subHeader and message.",source:"@site/versioned_docs/version-v5/api/alert.md",sourceDirName:"api",slug:"/api/alert",permalink:"/docs/v5/api/alert",editUrl:"https://github.com/ionic-team/ionic-docs/tree/main/docs/api/alert.md",tags:[],version:"v5",frontMatter:{sidebar_label:"ion-alert",demoUrl:"/docs/demos/api/alert/index.html",demoSourceUrl:"https://github.com/ionic-team/ionic-docs/tree/main/static/demos/api/alert/index.html"},sidebar:"version-v5/api",previous:{title:"ion-action-sheet",permalink:"/docs/v5/api/action-sheet"},next:{title:"ion-badge",permalink:"/docs/v5/api/badge"}},c=[{value:"Buttons",id:"buttons",children:[],level:2},{value:"Inputs",id:"inputs",children:[],level:2},{value:"Customization",id:"customization",children:[],level:2},{value:"Usage",id:"usage",children:[{value:"Style Placement",id:"style-placement",children:[],level:3}],level:2},{value:"Properties",id:"properties",children:[{value:"animated",id:"animated",children:[],level:3},{value:"backdropDismiss",id:"backdropdismiss",children:[],level:3},{value:"buttons",id:"buttons-1",children:[],level:3},{value:"cssClass",id:"cssclass",children:[],level:3},{value:"enterAnimation",id:"enteranimation",children:[],level:3},{value:"header",id:"header",children:[],level:3},{value:"inputs",id:"inputs-1",children:[],level:3},{value:"keyboardClose",id:"keyboardclose",children:[],level:3},{value:"leaveAnimation",id:"leaveanimation",children:[],level:3},{value:"message",id:"message",children:[],level:3},{value:"mode",id:"mode",children:[],level:3},{value:"subHeader",id:"subheader",children:[],level:3},{value:"translucent",id:"translucent",children:[],level:3}],level:2},{value:"Events",id:"events",children:[],level:2},{value:"Methods",id:"methods",children:[{value:"dismiss",id:"dismiss",children:[],level:3},{value:"onDidDismiss",id:"ondiddismiss",children:[],level:3},{value:"onWillDismiss",id:"onwilldismiss",children:[],level:3},{value:"present",id:"present",children:[],level:3}],level:2},{value:"CSS Custom Properties",id:"css-custom-properties",children:[],level:2}],m={toc:c};function p(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"ion-alert"},"ion-alert"),(0,l.kt)("p",null,"An Alert is a dialog that presents users with information or collects information from the user using inputs. An alert appears on top of the app's content, and must be manually dismissed by the user before they can resume interaction with the app. It can also optionally have a ",(0,l.kt)("inlineCode",{parentName:"p"},"header"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"subHeader")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"message"),"."),(0,l.kt)("h2",{id:"buttons"},"Buttons"),(0,l.kt)("p",null,"In the array of ",(0,l.kt)("inlineCode",{parentName:"p"},"buttons"),", each button includes properties for its ",(0,l.kt)("inlineCode",{parentName:"p"},"text"),", and optionally a ",(0,l.kt)("inlineCode",{parentName:"p"},"handler"),". If a handler returns ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," then the alert will not automatically be dismissed when the button is clicked. All buttons will show up in the order they have been added to the ",(0,l.kt)("inlineCode",{parentName:"p"},"buttons")," array from left to right. Note: The right most button (the last one in the array) is the main button."),(0,l.kt)("p",null,"Optionally, a ",(0,l.kt)("inlineCode",{parentName:"p"},"role")," property can be added to a button, such as ",(0,l.kt)("inlineCode",{parentName:"p"},"cancel"),". If a ",(0,l.kt)("inlineCode",{parentName:"p"},"cancel")," role is on one of the buttons, then if the alert is dismissed by tapping the backdrop, then it will fire the handler from the button with a cancel role."),(0,l.kt)("h2",{id:"inputs"},"Inputs"),(0,l.kt)("p",null,'Alerts can also include several different inputs whose data can be passed back to the app. Inputs can be used as a simple way to prompt users for information. Radios, checkboxes and text inputs are all accepted, but they cannot be mixed. For example, an alert could have all radio button inputs, or all checkbox inputs, but the same alert cannot mix radio and checkbox inputs. Do note however, different types of "text" inputs can be mixed, such as ',(0,l.kt)("inlineCode",{parentName:"p"},"url"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"email"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"text"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"textarea")," etc. If you require a complex form UI which doesn't fit within the guidelines of an alert then we recommend building the form within a modal instead."),(0,l.kt)("h2",{id:"customization"},"Customization"),(0,l.kt)("p",null,"Alert uses scoped encapsulation, which means it will automatically scope its CSS by appending each of the styles with an additional class at runtime. Overriding scoped selectors in CSS requires a ",(0,l.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity"},"higher specificity")," selector."),(0,l.kt)("p",null,"We recommend passing a custom class to ",(0,l.kt)("inlineCode",{parentName:"p"},"cssClass")," in the ",(0,l.kt)("inlineCode",{parentName:"p"},"create")," method and using that to add custom styles to the host and inner elements. This property can also accept multiple classes separated by spaces. View the ",(0,l.kt)("a",{parentName:"p",href:"#usage"},"Usage")," section for an example of how to pass a class using ",(0,l.kt)("inlineCode",{parentName:"p"},"cssClass"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},'/* DOES NOT WORK - not specific enough */\n.alert-wrapper {\n  background: #e5e5e5;\n}\n\n/* Works - pass "my-custom-class" in cssClass to increase specificity */\n.my-custom-class .alert-wrapper {\n  background: #e5e5e5;\n}\n')),(0,l.kt)("p",null,"Any of the defined ",(0,l.kt)("a",{parentName:"p",href:"#css-custom-properties"},"CSS Custom Properties")," can be used to style the Alert without needing to target individual elements:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},".my-custom-class {\n  --background: #e5e5e5;\n}\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"If you are building an Ionic Angular app, the styles need to be added to a global stylesheet file. Read ",(0,l.kt)("a",{parentName:"p",href:"#style-placement"},"Style Placement")," in the Angular section below for more information.")),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)(r.Z,{groupId:"framework",defaultValue:"angular",values:[{value:"angular",label:"Angular"},{value:"javascript",label:"Javascript"},{value:"react",label:"React"},{value:"stencil",label:"Stencil"},{value:"vue",label:"Vue"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"angular",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Component } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'alert-example',\n  templateUrl: 'alert-example.html',\n  styleUrls: ['./alert-example.css'],\n})\nexport class AlertExample {\n  constructor(public alertController: AlertController) {}\n\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Alert',\n      subHeader: 'Subtitle',\n      message: 'This is an alert message.',\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n\n    const { role } = await alert.onDidDismiss();\n    console.log('onDidDismiss resolved with role', role);\n  }\n\n  async presentAlertMultipleButtons() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Alert',\n      subHeader: 'Subtitle',\n      message: 'This is an alert message.',\n      buttons: ['Cancel', 'Open Modal', 'Delete'],\n    });\n\n    await alert.present();\n  }\n\n  async presentAlertConfirm() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Confirm!',\n      message: 'Message <strong>text</strong>!!!',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          },\n        },\n        {\n          text: 'Okay',\n          handler: () => {\n            console.log('Confirm Okay');\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async presentAlertPrompt() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Prompt!',\n      inputs: [\n        {\n          name: 'name1',\n          type: 'text',\n          placeholder: 'Placeholder 1',\n        },\n        {\n          name: 'name2',\n          type: 'text',\n          id: 'name2-id',\n          value: 'hello',\n          placeholder: 'Placeholder 2',\n        },\n        // multiline input.\n        {\n          name: 'paragraph',\n          id: 'paragraph',\n          type: 'textarea',\n          placeholder: 'Placeholder 3',\n        },\n        {\n          name: 'name3',\n          value: 'http://ionicframework.com',\n          type: 'url',\n          placeholder: 'Favorite site ever',\n        },\n        // input date with min & max\n        {\n          name: 'name4',\n          type: 'date',\n          min: '2017-03-01',\n          max: '2018-01-12',\n        },\n        // input date without min nor max\n        {\n          name: 'name5',\n          type: 'date',\n        },\n        {\n          name: 'name6',\n          type: 'number',\n          min: -5,\n          max: 10,\n        },\n        {\n          name: 'name7',\n          type: 'number',\n        },\n        {\n          name: 'name8',\n          type: 'password',\n          placeholder: 'Advanced Attributes',\n          cssClass: 'specialClass',\n          attributes: {\n            maxlength: 4,\n            inputmode: 'decimal',\n          },\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          },\n        },\n        {\n          text: 'Ok',\n          handler: () => {\n            console.log('Confirm Ok');\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async presentAlertRadio() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Radio',\n      inputs: [\n        {\n          name: 'radio1',\n          type: 'radio',\n          label: 'Radio 1',\n          value: 'value1',\n          handler: () => {\n            console.log('Radio 1 selected');\n          },\n          checked: true,\n        },\n        {\n          name: 'radio2',\n          type: 'radio',\n          label: 'Radio 2',\n          value: 'value2',\n          handler: () => {\n            console.log('Radio 2 selected');\n          },\n        },\n        {\n          name: 'radio3',\n          type: 'radio',\n          label: 'Radio 3',\n          value: 'value3',\n          handler: () => {\n            console.log('Radio 3 selected');\n          },\n        },\n        {\n          name: 'radio4',\n          type: 'radio',\n          label: 'Radio 4',\n          value: 'value4',\n          handler: () => {\n            console.log('Radio 4 selected');\n          },\n        },\n        {\n          name: 'radio5',\n          type: 'radio',\n          label: 'Radio 5',\n          value: 'value5',\n          handler: () => {\n            console.log('Radio 5 selected');\n          },\n        },\n        {\n          name: 'radio6',\n          type: 'radio',\n          label: 'Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 ',\n          value: 'value6',\n          handler: () => {\n            console.log('Radio 6 selected');\n          },\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          },\n        },\n        {\n          text: 'Ok',\n          handler: () => {\n            console.log('Confirm Ok');\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async presentAlertCheckbox() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Checkbox',\n      inputs: [\n        {\n          name: 'checkbox1',\n          type: 'checkbox',\n          label: 'Checkbox 1',\n          value: 'value1',\n          handler: () => {\n            console.log('Checkbox 1 selected');\n          },\n          checked: true,\n        },\n\n        {\n          name: 'checkbox2',\n          type: 'checkbox',\n          label: 'Checkbox 2',\n          value: 'value2',\n          handler: () => {\n            console.log('Checkbox 2 selected');\n          },\n        },\n\n        {\n          name: 'checkbox3',\n          type: 'checkbox',\n          label: 'Checkbox 3',\n          value: 'value3',\n          handler: () => {\n            console.log('Checkbox 3 selected');\n          },\n        },\n\n        {\n          name: 'checkbox4',\n          type: 'checkbox',\n          label: 'Checkbox 4',\n          value: 'value4',\n          handler: () => {\n            console.log('Checkbox 4 selected');\n          },\n        },\n\n        {\n          name: 'checkbox5',\n          type: 'checkbox',\n          label: 'Checkbox 5',\n          value: 'value5',\n          handler: () => {\n            console.log('Checkbox 5 selected');\n          },\n        },\n\n        {\n          name: 'checkbox6',\n          type: 'checkbox',\n          label:\n            'Checkbox 6 Checkbox 6 Checkbox 6 Checkbox 6 Checkbox 6 Checkbox 6 Checkbox 6 Checkbox 6 Checkbox 6 Checkbox 6',\n          value: 'value6',\n          handler: () => {\n            console.log('Checkbox 6 selected');\n          },\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          },\n        },\n        {\n          text: 'Ok',\n          handler: () => {\n            console.log('Confirm Ok');\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n}\n")),(0,l.kt)("h3",{id:"style-placement"},"Style Placement"),(0,l.kt)("p",null,"In Angular, the CSS of a specific page is scoped only to elements of that page. Even though the Alert can be presented from within a page, the ",(0,l.kt)("inlineCode",{parentName:"p"},"ion-alert")," element is appended outside of the current page. This means that any custom styles need to go in a global stylesheet file. In an Ionic Angular starter this can be the ",(0,l.kt)("inlineCode",{parentName:"p"},"src/global.scss")," file or you can register a new global style file by ",(0,l.kt)("a",{parentName:"p",href:"https://angular.io/guide/workspace-config#style-script-config"},"adding to the ",(0,l.kt)("inlineCode",{parentName:"a"},"styles")," build option in ",(0,l.kt)("inlineCode",{parentName:"a"},"angular.json")),".")),(0,l.kt)(o.Z,{value:"javascript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"function presentAlert() {\n  const alert = document.createElement('ion-alert');\n  alert.cssClass = 'my-custom-class';\n  alert.header = 'Alert';\n  alert.subHeader = 'Subtitle';\n  alert.message = 'This is an alert message.';\n  alert.buttons = ['OK'];\n\n  document.body.appendChild(alert);\n  await alert.present();\n\n  const { role } = await alert.onDidDismiss();\n  console.log('onDidDismiss resolved with role', role);\n}\n\nfunction presentAlertMultipleButtons() {\n  const alert = document.createElement('ion-alert');\n  alert.cssClass = 'my-custom-class';\n  alert.header = 'Alert';\n  alert.subHeader = 'Subtitle';\n  alert.message = 'This is an alert message.';\n  alert.buttons = ['Cancel', 'Open Modal', 'Delete'];\n\n  document.body.appendChild(alert);\n  return alert.present();\n}\n\nfunction presentAlertConfirm() {\n  const alert = document.createElement('ion-alert');\n  alert.cssClass = 'my-custom-class';\n  alert.header = 'Confirm!';\n  alert.message = 'Message <strong>text</strong>!!!';\n  alert.buttons = [\n    {\n      text: 'Cancel',\n      role: 'cancel',\n      cssClass: 'secondary',\n      handler: (blah) => {\n        console.log('Confirm Cancel: blah');\n      },\n    },\n    {\n      text: 'Okay',\n      handler: () => {\n        console.log('Confirm Okay');\n      },\n    },\n  ];\n\n  document.body.appendChild(alert);\n  return alert.present();\n}\n\nfunction presentAlertPrompt() {\n  const alert = document.createElement('ion-alert');\n  alert.cssClass = 'my-custom-class';\n  alert.header = 'Prompt!';\n  alert.inputs = [\n    {\n      placeholder: 'Placeholder 1',\n    },\n    {\n      name: 'name2',\n      id: 'name2-id',\n      value: 'hello',\n      placeholder: 'Placeholder 2',\n    },\n    // multiline input.\n    {\n      name: 'paragraph',\n      id: 'paragraph',\n      type: 'textarea',\n      placeholder: 'Placeholder 3',\n    },\n    {\n      name: 'name3',\n      value: 'http://ionicframework.com',\n      type: 'url',\n      placeholder: 'Favorite site ever',\n    },\n    // input date with min & max\n    {\n      name: 'name4',\n      type: 'date',\n      min: '2017-03-01',\n      max: '2018-01-12',\n    },\n    // input date without min nor max\n    {\n      name: 'name5',\n      type: 'date',\n    },\n    {\n      name: 'name6',\n      type: 'number',\n      min: -5,\n      max: 10,\n    },\n    {\n      name: 'name7',\n      type: 'number',\n    },\n    {\n      name: 'name8',\n      type: 'password',\n      placeholder: 'Advanced Attributes',\n      cssClass: 'specialClass',\n      attributes: {\n        maxlength: 4,\n        inputmode: 'decimal',\n      },\n    },\n  ];\n  alert.buttons = [\n    {\n      text: 'Cancel',\n      role: 'cancel',\n      cssClass: 'secondary',\n      handler: () => {\n        console.log('Confirm Cancel');\n      },\n    },\n    {\n      text: 'Ok',\n      handler: () => {\n        console.log('Confirm Ok');\n      },\n    },\n  ];\n\n  document.body.appendChild(alert);\n  return alert.present();\n}\n\nfunction presentAlertRadio() {\n  const alert = document.createElement('ion-alert');\n  alert.cssClass = 'my-custom-class';\n  alert.header = 'Radio';\n  alert.inputs = [\n    {\n      type: 'radio',\n      label: 'Radio 1',\n      value: 'value1',\n      handler: () => {\n        console.log('Radio 1 selected');\n      },\n      checked: true,\n    },\n    {\n      type: 'radio',\n      label: 'Radio 2',\n      value: 'value2',\n      handler: () => {\n        console.log('Radio 2 selected');\n      },\n    },\n    {\n      type: 'radio',\n      label: 'Radio 3',\n      value: 'value3',\n      handler: () => {\n        console.log('Radio 3 selected');\n      },\n    },\n    {\n      type: 'radio',\n      label: 'Radio 4',\n      value: 'value4',\n      handler: () => {\n        console.log('Radio 4 selected');\n      },\n    },\n    {\n      type: 'radio',\n      label: 'Radio 5',\n      value: 'value5',\n      handler: () => {\n        console.log('Radio 5 selected');\n      },\n    },\n    {\n      type: 'radio',\n      label: 'Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 ',\n      value: 'value6',\n      handler: () => {\n        console.log('Radio 6 selected');\n      },\n    },\n  ];\n  alert.buttons = [\n    {\n      text: 'Cancel',\n      role: 'cancel',\n      cssClass: 'secondary',\n      handler: () => {\n        console.log('Confirm Cancel');\n      },\n    },\n    {\n      text: 'Ok',\n      handler: () => {\n        console.log('Confirm Ok');\n      },\n    },\n  ];\n  document.body.appendChild(alert);\n  return alert.present();\n}\n\nfunction presentAlertCheckbox() {\n  const alert = document.createElement('ion-alert');\n  alert.cssClass = 'my-custom-class';\n  alert.header = 'Checkbox';\n  alert.inputs = [\n    {\n      type: 'checkbox',\n      label: 'Checkbox 1',\n      value: 'value1',\n      handler: () => {\n        console.log('Checkbox 1 selected');\n      },\n      checked: true,\n    },\n\n    {\n      type: 'checkbox',\n      label: 'Checkbox 2',\n      value: 'value2',\n      handler: () => {\n        console.log('Checkbox 2 selected');\n      },\n    },\n\n    {\n      type: 'checkbox',\n      label: 'Checkbox 3',\n      value: 'value3',\n      handler: () => {\n        console.log('Checkbox 3 selected');\n      },\n    },\n\n    {\n      type: 'checkbox',\n      label: 'Checkbox 4',\n      value: 'value4',\n      handler: () => {\n        console.log('Checkbox 4 selected');\n      },\n    },\n\n    {\n      type: 'checkbox',\n      label: 'Checkbox 5',\n      value: 'value5',\n      handler: () => {\n        console.log('Checkbox 5 selected');\n      },\n    },\n\n    {\n      type: 'checkbox',\n      label:\n        'Checkbox 6 Checkbox 6 Checkbox 6 Checkbox 6 Checkbox 6 Checkbox 6 Checkbox 6 Checkbox 6 Checkbox 6 Checkbox 6',\n      value: 'value6',\n      handler: () => {\n        console.log('Checkbox 6 selected');\n      },\n    },\n  ];\n  alert.buttons = [\n    {\n      text: 'Cancel',\n      role: 'cancel',\n      cssClass: 'secondary',\n      handler: () => {\n        console.log('Confirm Cancel');\n      },\n    },\n    {\n      text: 'Ok',\n      handler: () => {\n        console.log('Confirm Ok');\n      },\n    },\n  ];\n\n  document.body.appendChild(alert);\n  return alert.present();\n}\n"))),(0,l.kt)(o.Z,{value:"react",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},"/* Using with useIonAlert Hook */\n\nimport React from 'react';\nimport { IonButton, IonContent, IonPage, useIonAlert } from '@ionic/react';\n\nconst AlertExample: React.FC = () => {\n  const [present] = useIonAlert();\n  return (\n    <IonPage>\n      <IonContent fullscreen>\n        <IonButton\n          expand=\"block\"\n          onClick={() =>\n            present({\n              cssClass: 'my-css',\n              header: 'Alert',\n              message: 'alert from hook',\n              buttons: ['Cancel', { text: 'Ok', handler: (d) => console.log('ok pressed') }],\n              onDidDismiss: (e) => console.log('did dismiss'),\n            })\n          }\n        >\n          Show Alert\n        </IonButton>\n        <IonButton expand=\"block\" onClick={() => present('hello with params', [{ text: 'Ok' }])}>\n          Show Alert using params\n        </IonButton>\n      </IonContent>\n    </IonPage>\n  );\n};\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},"/* Using with IonAlert Component */\n\nimport React, { useState } from 'react';\nimport { IonAlert, IonButton, IonContent } from '@ionic/react';\n\nexport const AlertExample: React.FC = () => {\n  const [showAlert1, setShowAlert1] = useState(false);\n  const [showAlert2, setShowAlert2] = useState(false);\n  const [showAlert3, setShowAlert3] = useState(false);\n  const [showAlert4, setShowAlert4] = useState(false);\n  const [showAlert5, setShowAlert5] = useState(false);\n  const [showAlert6, setShowAlert6] = useState(false);\n\n  return (\n    <IonContent>\n      <IonButton onClick={() => setShowAlert1(true)} expand=\"block\">\n        Show Alert 1\n      </IonButton>\n      <IonButton onClick={() => setShowAlert2(true)} expand=\"block\">\n        Show Alert 2\n      </IonButton>\n      <IonButton onClick={() => setShowAlert3(true)} expand=\"block\">\n        Show Alert 3\n      </IonButton>\n      <IonButton onClick={() => setShowAlert4(true)} expand=\"block\">\n        Show Alert 4\n      </IonButton>\n      <IonButton onClick={() => setShowAlert5(true)} expand=\"block\">\n        Show Alert 5\n      </IonButton>\n      <IonButton onClick={() => setShowAlert6(true)} expand=\"block\">\n        Show Alert 6\n      </IonButton>\n      <IonAlert\n        isOpen={showAlert1}\n        onDidDismiss={() => setShowAlert1(false)}\n        cssClass=\"my-custom-class\"\n        header={'Alert'}\n        subHeader={'Subtitle'}\n        message={'This is an alert message.'}\n        buttons={['OK']}\n      />\n\n      <IonAlert\n        isOpen={showAlert2}\n        onDidDismiss={() => setShowAlert2(false)}\n        cssClass=\"my-custom-class\"\n        header={'Alert'}\n        subHeader={'Subtitle'}\n        message={'This is an alert message.'}\n        buttons={['Cancel', 'Open Modal', 'Delete']}\n      />\n\n      <IonAlert\n        isOpen={showAlert3}\n        onDidDismiss={() => setShowAlert3(false)}\n        cssClass=\"my-custom-class\"\n        header={'Confirm!'}\n        message={'Message <strong>text</strong>!!!'}\n        buttons={[\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: (blah) => {\n              console.log('Confirm Cancel: blah');\n            },\n          },\n          {\n            text: 'Okay',\n            handler: () => {\n              console.log('Confirm Okay');\n            },\n          },\n        ]}\n      />\n\n      <IonAlert\n        isOpen={showAlert4}\n        onDidDismiss={() => setShowAlert4(false)}\n        cssClass=\"my-custom-class\"\n        header={'Prompt!'}\n        inputs={[\n          {\n            name: 'name1',\n            type: 'text',\n            placeholder: 'Placeholder 1',\n          },\n          {\n            name: 'name2',\n            type: 'text',\n            id: 'name2-id',\n            value: 'hello',\n            placeholder: 'Placeholder 2',\n          },\n          {\n            name: 'name3',\n            value: 'http://ionicframework.com',\n            type: 'url',\n            placeholder: 'Favorite site ever',\n          },\n          // input date with min & max\n          {\n            name: 'name4',\n            type: 'date',\n            min: '2017-03-01',\n            max: '2018-01-12',\n          },\n          // input date without min nor max\n          {\n            name: 'name5',\n            type: 'date',\n          },\n          {\n            name: 'name6',\n            type: 'number',\n            min: -5,\n            max: 10,\n          },\n          {\n            name: 'name7',\n            type: 'number',\n          },\n          {\n            name: 'name8',\n            type: 'password',\n            placeholder: 'Advanced Attributes',\n            cssClass: 'specialClass',\n            attributes: {\n              maxlength: 4,\n              inputmode: 'decimal',\n            },\n          },\n        ]}\n        buttons={[\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => {\n              console.log('Confirm Cancel');\n            },\n          },\n          {\n            text: 'Ok',\n            handler: () => {\n              console.log('Confirm Ok');\n            },\n          },\n        ]}\n      />\n\n      <IonAlert\n        isOpen={showAlert5}\n        onDidDismiss={() => setShowAlert5(false)}\n        cssClass=\"my-custom-class\"\n        header={'Radio'}\n        inputs={[\n          {\n            name: 'radio1',\n            type: 'radio',\n            label: 'Radio 1',\n            value: 'value1',\n            handler: () => {\n              console.log('Radio 1 selected');\n            },\n            checked: true,\n          },\n          {\n            name: 'radio2',\n            type: 'radio',\n            label: 'Radio 2',\n            value: 'value2',\n            handler: () => {\n              console.log('Radio 2 selected');\n            },\n          },\n          {\n            name: 'radio3',\n            type: 'radio',\n            label: 'Radio 3',\n            value: 'value3',\n            handler: () => {\n              console.log('Radio 3 selected');\n            },\n          },\n          {\n            name: 'radio4',\n            type: 'radio',\n            label: 'Radio 4',\n            value: 'value4',\n            handler: () => {\n              console.log('Radio 4 selected');\n            },\n          },\n          {\n            name: 'radio5',\n            type: 'radio',\n            label: 'Radio 5',\n            value: 'value5',\n            handler: () => {\n              console.log('Radio 5 selected');\n            },\n          },\n          {\n            name: 'radio6',\n            type: 'radio',\n            label: 'Radio 6',\n            value: 'value6',\n            handler: () => {\n              console.log('Radio 6 selected');\n            },\n          },\n        ]}\n        buttons={[\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => {\n              console.log('Confirm Cancel');\n            },\n          },\n          {\n            text: 'Ok',\n            handler: () => {\n              console.log('Confirm Ok');\n            },\n          },\n        ]}\n      />\n\n      <IonAlert\n        isOpen={showAlert6}\n        onDidDismiss={() => setShowAlert6(false)}\n        cssClass=\"my-custom-class\"\n        header={'Checkbox'}\n        inputs={[\n          {\n            name: 'checkbox1',\n            type: 'checkbox',\n            label: 'Checkbox 1',\n            value: 'value1',\n            handler: () => {\n              console.log('Checkbox 1 selected');\n            },\n            checked: true,\n          },\n          {\n            name: 'checkbox2',\n            type: 'checkbox',\n            label: 'Checkbox 2',\n            value: 'value2',\n            handler: () => {\n              console.log('Checkbox 2 selected');\n            },\n          },\n          {\n            name: 'checkbox3',\n            type: 'checkbox',\n            label: 'Checkbox 3',\n            value: 'value3',\n            handler: () => {\n              console.log('Checkbox 3 selected');\n            },\n          },\n          {\n            name: 'checkbox4',\n            type: 'checkbox',\n            label: 'Checkbox 4',\n            value: 'value4',\n            handler: () => {\n              console.log('Checkbox 4 selected');\n            },\n          },\n          {\n            name: 'checkbox5',\n            type: 'checkbox',\n            label: 'Checkbox 5',\n            value: 'value5',\n            handler: () => {\n              console.log('Checkbox 5 selected');\n            },\n          },\n          {\n            name: 'checkbox6',\n            type: 'checkbox',\n            label: 'Checkbox 6',\n            value: 'value6',\n            handler: () => {\n              console.log('Checkbox 6 selected');\n            },\n          },\n        ]}\n        buttons={[\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => {\n              console.log('Confirm Cancel');\n            },\n          },\n          {\n            text: 'Ok',\n            handler: () => {\n              console.log('Confirm Ok');\n            },\n          },\n        ]}\n      />\n    </IonContent>\n  );\n};\n\nexport default AlertExample;\n"))),(0,l.kt)(o.Z,{value:"stencil",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Component, h } from '@stencil/core';\n\nimport { alertController } from '@ionic/core';\n\n@Component({\n  tag: 'alert-example',\n  styleUrl: 'alert-example.css',\n})\nexport class AlertExample {\n  async presentAlert() {\n    const alert = await alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Alert',\n      subHeader: 'Subtitle',\n      message: 'This is an alert message.',\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n\n    const { role } = await alert.onDidDismiss();\n    console.log('onDidDismiss resolved with role', role);\n  }\n\n  async presentAlertMultipleButtons() {\n    const alert = await alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Alert',\n      subHeader: 'Subtitle',\n      message: 'This is an alert message.',\n      buttons: ['Cancel', 'Open Modal', 'Delete'],\n    });\n\n    await alert.present();\n  }\n\n  async presentAlertConfirm() {\n    const alert = await alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Confirm!',\n      message: 'Message <strong>text</strong>!!!',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          },\n        },\n        {\n          text: 'Okay',\n          handler: () => {\n            console.log('Confirm Okay');\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async presentAlertPrompt() {\n    const alert = await alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Prompt!',\n      inputs: [\n        {\n          name: 'name1',\n          type: 'text',\n          placeholder: 'Placeholder 1',\n        },\n        {\n          name: 'name2',\n          type: 'text',\n          id: 'name2-id',\n          value: 'hello',\n          placeholder: 'Placeholder 2',\n        },\n        // multiline input.\n        {\n          name: 'paragraph',\n          id: 'paragraph',\n          type: 'textarea',\n          placeholder: 'Placeholder 3',\n        },\n        {\n          name: 'name3',\n          value: 'http://ionicframework.com',\n          type: 'url',\n          placeholder: 'Favorite site ever',\n        },\n        // input date with min & max\n        {\n          name: 'name4',\n          type: 'date',\n          min: '2017-03-01',\n          max: '2018-01-12',\n        },\n        // input date without min nor max\n        {\n          name: 'name5',\n          type: 'date',\n        },\n        {\n          name: 'name6',\n          type: 'number',\n          min: -5,\n          max: 10,\n        },\n        {\n          name: 'name7',\n          type: 'number',\n        },\n        {\n          name: 'name8',\n          type: 'password',\n          placeholder: 'Advanced Attributes',\n          cssClass: 'specialClass',\n          attributes: {\n            maxlength: 4,\n            inputmode: 'decimal',\n          },\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          },\n        },\n        {\n          text: 'Ok',\n          handler: () => {\n            console.log('Confirm Ok');\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async presentAlertRadio() {\n    const alert = await alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Radio',\n      inputs: [\n        {\n          name: 'radio1',\n          type: 'radio',\n          label: 'Radio 1',\n          value: 'value1',\n          handler: () => {\n            console.log('Radio 1 selected');\n          },\n          checked: true,\n        },\n        {\n          name: 'radio2',\n          type: 'radio',\n          label: 'Radio 2',\n          value: 'value2',\n          handler: () => {\n            console.log('Radio 2 selected');\n          },\n        },\n        {\n          name: 'radio3',\n          type: 'radio',\n          label: 'Radio 3',\n          value: 'value3',\n          handler: () => {\n            console.log('Radio 3 selected');\n          },\n        },\n        {\n          name: 'radio4',\n          type: 'radio',\n          label: 'Radio 4',\n          value: 'value4',\n          handler: () => {\n            console.log('Radio 4 selected');\n          },\n        },\n        {\n          name: 'radio5',\n          type: 'radio',\n          label: 'Radio 5',\n          value: 'value5',\n          handler: () => {\n            console.log('Radio 5 selected');\n          },\n        },\n        {\n          name: 'radio6',\n          type: 'radio',\n          label: 'Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 ',\n          value: 'value6',\n          handler: () => {\n            console.log('Radio 6 selected');\n          },\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          },\n        },\n        {\n          text: 'Ok',\n          handler: () => {\n            console.log('Confirm Ok');\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async presentAlertCheckbox() {\n    const alert = await alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Checkbox',\n      inputs: [\n        {\n          name: 'checkbox1',\n          type: 'checkbox',\n          label: 'Checkbox 1',\n          value: 'value1',\n          handler: () => {\n            console.log('Checkbox 1 selected');\n          },\n          checked: true,\n        },\n        {\n          name: 'checkbox2',\n          type: 'checkbox',\n          label: 'Checkbox 2',\n          value: 'value2',\n          handler: () => {\n            console.log('Checkbox 2 selected');\n          },\n        },\n\n        {\n          name: 'checkbox3',\n          type: 'checkbox',\n          label: 'Checkbox 3',\n          value: 'value3',\n          handler: () => {\n            console.log('Checkbox 3 selected');\n          },\n        },\n\n        {\n          name: 'checkbox4',\n          type: 'checkbox',\n          label: 'Checkbox 4',\n          value: 'value4',\n          handler: () => {\n            console.log('Checkbox 4 selected');\n          },\n        },\n\n        {\n          name: 'checkbox5',\n          type: 'checkbox',\n          label: 'Checkbox 5',\n          value: 'value5',\n          handler: () => {\n            console.log('Checkbox 5 selected');\n          },\n        },\n\n        {\n          name: 'checkbox6',\n          type: 'checkbox',\n          label:\n            'Checkbox 6 Checkbox 6 Checkbox 6 Checkbox 6 Checkbox 6 Checkbox 6 Checkbox 6 Checkbox 6 Checkbox 6 Checkbox 6',\n          value: 'value6',\n          handler: () => {\n            console.log('Checkbox 6 selected');\n          },\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          },\n        },\n        {\n          text: 'Ok',\n          handler: () => {\n            console.log('Confirm Ok');\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  render() {\n    return [\n      <ion-content>\n        <ion-button onClick={() => this.presentAlert()}>Present Alert</ion-button>\n        <ion-button onClick={() => this.presentAlertMultipleButtons()}>Present Alert: Multiple Buttons</ion-button>\n        <ion-button onClick={() => this.presentAlertConfirm()}>Present Alert: Confirm</ion-button>\n        <ion-button onClick={() => this.presentAlertPrompt()}>Present Alert: Prompt</ion-button>\n        <ion-button onClick={() => this.presentAlertRadio()}>Present Alert: Radio</ion-button>\n        <ion-button onClick={() => this.presentAlertCheckbox()}>Present Alert: Checkbox</ion-button>\n      </ion-content>,\n    ];\n  }\n}\n"))),(0,l.kt)(o.Z,{value:"vue",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"<template>\n  <ion-button @click=\"presentAlert\">Show Alert</ion-button>\n  <ion-button @click=\"presentAlertMultipleButtons\">Show Alert (multiple buttons)</ion-button>\n  <ion-button @click=\"presentAlertConfirm\">Show Alert (confirm)</ion-button>\n  <ion-button @click=\"presentAlertPrompt\">Show Alert (prompt)</ion-button>\n  <ion-button @click=\"presentAlertRadio\">Show Alert (radio)</ion-button>\n  <ion-button @click=\"presentAlertCheckbox\">Show Alert (checkbox)</ion-button>\n</template>\n\n<script>\n  import { IonButton, alertController } from '@ionic/vue';\n  import { defineComponent } from 'vue';\n\n  export default defineComponent({\n    components: { IonButton },\n    methods: {\n      async presentAlert() {\n        const alert = await alertController.create({\n          cssClass: 'my-custom-class',\n          header: 'Alert',\n          subHeader: 'Subtitle',\n          message: 'This is an alert message.',\n          buttons: ['OK'],\n        });\n        await alert.present();\n\n        const { role } = await alert.onDidDismiss();\n        console.log('onDidDismiss resolved with role', role);\n      },\n\n      async presentAlertMultipleButtons() {\n        const alert = await alertController.create({\n          cssClass: 'my-custom-class',\n          header: 'Alert',\n          subHeader: 'Subtitle',\n          message: 'This is an alert message.',\n          buttons: ['Cancel', 'Open Modal', 'Delete'],\n        });\n        return alert.present();\n      },\n\n      async presentAlertConfirm() {\n        const alert = await alertController.create({\n          cssClass: 'my-custom-class',\n          header: 'Confirm!',\n          message: 'Message <strong>text</strong>!!!',\n          buttons: [\n            {\n              text: 'Cancel',\n              role: 'cancel',\n              cssClass: 'secondary',\n              handler: (blah) => {\n                console.log('Confirm Cancel:', blah);\n              },\n            },\n            {\n              text: 'Okay',\n              handler: () => {\n                console.log('Confirm Okay');\n              },\n            },\n          ],\n        });\n        return alert.present();\n      },\n\n      async presentAlertPrompt() {\n        const alert = await alertController.create({\n          cssClass: 'my-custom-class',\n          header: 'Prompt!',\n          inputs: [\n            {\n              placeholder: 'Placeholder 1',\n            },\n            {\n              name: 'name2',\n              id: 'name2-id',\n              value: 'hello',\n              placeholder: 'Placeholder 2',\n            },\n            {\n              name: 'name3',\n              value: 'http://ionicframework.com',\n              type: 'url',\n              placeholder: 'Favorite site ever',\n            },\n            // input date with min & max\n            {\n              name: 'name4',\n              type: 'date',\n              min: '2017-03-01',\n              max: '2018-01-12',\n            },\n            // input date without min nor max\n            {\n              name: 'name5',\n              type: 'date',\n            },\n            {\n              name: 'name6',\n              type: 'number',\n              min: -5,\n              max: 10,\n            },\n            {\n              name: 'name7',\n              type: 'number',\n            },\n            {\n              name: 'name8',\n              type: 'password',\n              placeholder: 'Advanced Attributes',\n              cssClass: 'specialClass',\n              attributes: {\n                maxlength: 4,\n                inputmode: 'decimal',\n              },\n            },\n          ],\n          buttons: [\n            {\n              text: 'Cancel',\n              role: 'cancel',\n              cssClass: 'secondary',\n              handler: () => {\n                console.log('Confirm Cancel');\n              },\n            },\n            {\n              text: 'Ok',\n              handler: () => {\n                console.log('Confirm Ok');\n              },\n            },\n          ],\n        });\n        return alert.present();\n      },\n\n      async presentAlertRadio() {\n        const alert = await alertController.create({\n          cssClass: 'my-custom-class',\n          header: 'Radio',\n          inputs: [\n            {\n              type: 'radio',\n              label: 'Radio 1',\n              value: 'value1',\n              handler: () => {\n                console.log('Radio 1 selected');\n              },\n              checked: true,\n            },\n            {\n              type: 'radio',\n              label: 'Radio 2',\n              value: 'value2',\n              handler: () => {\n                console.log('Radio 2 selected');\n              },\n            },\n            {\n              type: 'radio',\n              label: 'Radio 3',\n              value: 'value3',\n              handler: () => {\n                console.log('Radio 3 selected');\n              },\n            },\n            {\n              type: 'radio',\n              label: 'Radio 4',\n              value: 'value4',\n              handler: () => {\n                console.log('Radio 4 selected');\n              },\n            },\n            {\n              type: 'radio',\n              label: 'Radio 5',\n              value: 'value5',\n              handler: () => {\n                console.log('Radio 5 selected');\n              },\n            },\n            {\n              type: 'radio',\n              label: 'Radio 6',\n              value: 'value6',\n              handler: () => {\n                console.log('Radio 6 selected');\n              },\n            },\n          ],\n          buttons: [\n            {\n              text: 'Cancel',\n              role: 'cancel',\n              cssClass: 'secondary',\n              handler: () => {\n                console.log('Confirm Cancel');\n              },\n            },\n            {\n              text: 'Ok',\n              handler: () => {\n                console.log('Confirm Ok');\n              },\n            },\n          ],\n        });\n        return alert.present();\n      },\n\n      async presentAlertCheckbox() {\n        const alert = await alertController.create({\n          cssClass: 'my-custom-class',\n          header: 'Checkbox',\n          inputs: [\n            {\n              type: 'checkbox',\n              label: 'Checkbox 1',\n              value: 'value1',\n              handler: () => {\n                console.log('Checkbox 1 selected');\n              },\n              checked: true,\n            },\n\n            {\n              type: 'checkbox',\n              label: 'Checkbox 2',\n              value: 'value2',\n              handler: () => {\n                console.log('Checkbox 2 selected');\n              },\n            },\n\n            {\n              type: 'checkbox',\n              label: 'Checkbox 3',\n              value: 'value3',\n              handler: () => {\n                console.log('Checkbox 3 selected');\n              },\n            },\n\n            {\n              type: 'checkbox',\n              label: 'Checkbox 4',\n              value: 'value4',\n              handler: () => {\n                console.log('Checkbox 4 selected');\n              },\n            },\n\n            {\n              type: 'checkbox',\n              label: 'Checkbox 5',\n              value: 'value5',\n              handler: () => {\n                console.log('Checkbox 5 selected');\n              },\n            },\n\n            {\n              type: 'checkbox',\n              label: 'Checkbox 6',\n              value: 'value6',\n              handler: () => {\n                console.log('Checkbox 6 selected');\n              },\n            },\n          ],\n          buttons: [\n            {\n              text: 'Cancel',\n              role: 'cancel',\n              cssClass: 'secondary',\n              handler: () => {\n                console.log('Confirm Cancel');\n              },\n            },\n            {\n              text: 'Ok',\n              handler: () => {\n                console.log('Confirm Ok');\n              },\n            },\n          ],\n        });\n        return alert.present();\n      },\n    },\n  });\n<\/script>\n")),(0,l.kt)("p",null,"Developers can also use this component directly in their template:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<template>\n  <ion-button @click="setOpen(true)">Show Alert</ion-button>\n  <ion-alert\n    :is-open="isOpenRef"\n    header="Alert"\n    sub-header="Subtitle"\n    message="This is an alert message."\n    css-class="my-custom-class"\n    :buttons="buttons"\n    @didDismiss="setOpen(false)"\n  >\n  </ion-alert>\n</template>\n\n<script>\n  import { IonAlert, IonButton } from \'@ionic/vue\';\n  import { defineComponent, ref } from \'vue\';\n\n  export default defineComponent({\n    components: { IonAlert, IonButton },\n    setup() {\n      const isOpenRef = ref(false);\n      const setOpen = (state: boolean) => (isOpenRef.value = state);\n      const buttons = [\'Ok\'];\n\n      return { buttons, isOpenRef, setOpen };\n    },\n  });\n<\/script>\n')))),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"animated"},"animated"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Description")),(0,l.kt)("td",{parentName:"tr",align:null},"If ",(0,l.kt)("inlineCode",{parentName:"td"},"true"),", the alert will animate.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Attribute")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"animated"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Type")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Default")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true"))))),(0,l.kt)("h3",{id:"backdropdismiss"},"backdropDismiss"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Description")),(0,l.kt)("td",{parentName:"tr",align:null},"If ",(0,l.kt)("inlineCode",{parentName:"td"},"true"),", the alert will be dismissed when the backdrop is clicked.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Attribute")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"backdrop-dismiss"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Type")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Default")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true"))))),(0,l.kt)("h3",{id:"buttons-1"},"buttons"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Description")),(0,l.kt)("td",{parentName:"tr",align:null},"Array of buttons to be added to the alert.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Attribute")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Type")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"(string \\| AlertButton)[]"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Default")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"[]"))))),(0,l.kt)("h3",{id:"cssclass"},"cssClass"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Description")),(0,l.kt)("td",{parentName:"tr",align:null},"Additional classes to apply for custom CSS. If multiple classes are",(0,l.kt)("br",null),"provided they should be separated by spaces.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Attribute")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"css-class"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Type")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string \\| string[] \\| undefined"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Default")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,l.kt)("h3",{id:"enteranimation"},"enterAnimation"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Description")),(0,l.kt)("td",{parentName:"tr",align:null},"Animation to use when the alert is presented.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Attribute")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Type")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"((baseEl: any, opts?: any) => Animation) \\| undefined"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Default")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,l.kt)("h3",{id:"header"},"header"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Description")),(0,l.kt)("td",{parentName:"tr",align:null},"The main title in the heading of the alert.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Attribute")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"header"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Type")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string \\| undefined"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Default")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,l.kt)("h3",{id:"inputs-1"},"inputs"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Description")),(0,l.kt)("td",{parentName:"tr",align:null},"Array of input to show in the alert.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Attribute")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Type")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"AlertInput[]"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Default")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"[]"))))),(0,l.kt)("h3",{id:"keyboardclose"},"keyboardClose"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Description")),(0,l.kt)("td",{parentName:"tr",align:null},"If ",(0,l.kt)("inlineCode",{parentName:"td"},"true"),", the keyboard will be automatically dismissed when the overlay is presented.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Attribute")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"keyboard-close"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Type")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Default")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true"))))),(0,l.kt)("h3",{id:"leaveanimation"},"leaveAnimation"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Description")),(0,l.kt)("td",{parentName:"tr",align:null},"Animation to use when the alert is dismissed.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Attribute")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Type")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"((baseEl: any, opts?: any) => Animation) \\| undefined"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Default")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,l.kt)("h3",{id:"message"},"message"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Description")),(0,l.kt)("td",{parentName:"tr",align:null},"The main message to be displayed in the alert.",(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"message")," can accept either plaintext or HTML as a string.",(0,l.kt)("br",null),"To display characters normally reserved for HTML, they",(0,l.kt)("br",null),"must be escaped. For example ",(0,l.kt)("inlineCode",{parentName:"td"},"<Ionic>")," would become",(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"&lt;Ionic&gt;"),(0,l.kt)("br",null),(0,l.kt)("br",null),"For more information: ",(0,l.kt)("a",{parentName:"td",href:"https://ionicframework.com/docs/faq/security"},"Security Documentation"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Attribute")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"message"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Type")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"IonicSafeString \\| string \\| undefined"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Default")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,l.kt)("h3",{id:"mode"},"mode"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Description")),(0,l.kt)("td",{parentName:"tr",align:null},"The mode determines which platform styles to use.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Attribute")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"mode"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Type")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"ios" \\| "md"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Default")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,l.kt)("h3",{id:"subheader"},"subHeader"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Description")),(0,l.kt)("td",{parentName:"tr",align:null},"The subtitle in the heading of the alert. Displayed under the title.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Attribute")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"sub-header"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Type")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string \\| undefined"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Default")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,l.kt)("h3",{id:"translucent"},"translucent"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Description")),(0,l.kt)("td",{parentName:"tr",align:null},"If ",(0,l.kt)("inlineCode",{parentName:"td"},"true"),", the alert will be translucent.",(0,l.kt)("br",null),"Only applies when the mode is ",(0,l.kt)("inlineCode",{parentName:"td"},'"ios"')," and the device supports",(0,l.kt)("br",null),(0,l.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility"},(0,l.kt)("inlineCode",{parentName:"a"},"backdrop-filter")),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Attribute")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"translucent"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Type")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Default")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false"))))),(0,l.kt)("h2",{id:"events"},"Events"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ionAlertDidDismiss")),(0,l.kt)("td",{parentName:"tr",align:null},"Emitted after the alert has dismissed.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ionAlertDidPresent")),(0,l.kt)("td",{parentName:"tr",align:null},"Emitted after the alert has presented.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ionAlertWillDismiss")),(0,l.kt)("td",{parentName:"tr",align:null},"Emitted before the alert has dismissed.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ionAlertWillPresent")),(0,l.kt)("td",{parentName:"tr",align:null},"Emitted before the alert has presented.")))),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"dismiss"},"dismiss"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Description")),(0,l.kt)("td",{parentName:"tr",align:null},"Dismiss the alert overlay after it has been presented.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Signature")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"dismiss(data?: any, role?: string \\| undefined) => Promise<boolean>"))))),(0,l.kt)("h3",{id:"ondiddismiss"},"onDidDismiss"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Description")),(0,l.kt)("td",{parentName:"tr",align:null},"Returns a promise that resolves when the alert did dismiss.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Signature")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"onDidDismiss<T = any>() => Promise<OverlayEventDetail<T>>"))))),(0,l.kt)("h3",{id:"onwilldismiss"},"onWillDismiss"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Description")),(0,l.kt)("td",{parentName:"tr",align:null},"Returns a promise that resolves when the alert will dismiss.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Signature")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"onWillDismiss<T = any>() => Promise<OverlayEventDetail<T>>"))))),(0,l.kt)("h3",{id:"present"},"present"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Description")),(0,l.kt)("td",{parentName:"tr",align:null},"Present the alert overlay after it has been created.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Signature")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"present() => Promise<void>"))))),(0,l.kt)("h2",{id:"css-custom-properties"},"CSS Custom Properties"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--backdrop-opacity")),(0,l.kt)("td",{parentName:"tr",align:null},"Opacity of the backdrop")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--background")),(0,l.kt)("td",{parentName:"tr",align:null},"Background of the alert")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--height")),(0,l.kt)("td",{parentName:"tr",align:null},"Height of the alert")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--max-height")),(0,l.kt)("td",{parentName:"tr",align:null},"Maximum height of the alert")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--max-width")),(0,l.kt)("td",{parentName:"tr",align:null},"Maximum width of the alert")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--min-height")),(0,l.kt)("td",{parentName:"tr",align:null},"Minimum height of the alert")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--min-width")),(0,l.kt)("td",{parentName:"tr",align:null},"Minimum width of the alert")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--width")),(0,l.kt)("td",{parentName:"tr",align:null},"Width of the alert")))))}p.isMDXComponent=!0}}]);