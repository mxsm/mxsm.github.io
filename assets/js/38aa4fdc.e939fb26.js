"use strict";(self.webpackChunkmxsm_website=self.webpackChunkmxsm_website||[]).push([[96449],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>v});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(r),v=i,m=u["".concat(s,".").concat(v)]||u[v]||d[v]||o;return r?n.createElement(m,a(a({ref:t},l),{},{components:r})):n.createElement(m,a({ref:t},l))}));function v(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var p=2;p<o;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},46787:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var n=r(87462),i=(r(67294),r(3905));const o={},a="Web View",c={unversionedId:"core-concepts/webview",id:"version-v5/core-concepts/webview",isDocsHomePage:!1,title:"Web View",description:"Web Views power web apps on native devices.",source:"@site/versioned_docs/version-v5/core-concepts/webview.md",sourceDirName:"core-concepts",slug:"/core-concepts/webview",permalink:"/docs/v5/core-concepts/webview",editUrl:"https://github.com/ionic-team/ionic-docs/edit/main/versioned_docs/version-v5/core-concepts/webview.md",tags:[],version:"v5",frontMatter:{},sidebar:"version-v5/docs",previous:{title:"Cross Platform",permalink:"/docs/v5/core-concepts/cross-platform"},next:{title:"What are PWAs?",permalink:"/docs/v5/core-concepts/what-are-progressive-web-apps"}},s=[{value:"What is a Web View?",id:"what-is-a-web-view",children:[{value:"CORS",id:"cors",children:[],level:3},{value:"File Protocol",id:"file-protocol",children:[],level:3},{value:"Implementations",id:"implementations",children:[],level:3}],level:2}],p={toc:s};function l(e){let{components:t,...o}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"web-view"},"Web View"),(0,i.kt)("p",null,"Web Views power web apps on native devices."),(0,i.kt)("p",null,"The Web View is automatically provided for apps integrated with ",(0,i.kt)("a",{parentName:"p",href:"/docs/v5/reference/glossary#capacitor"},"Capacitor"),"."),(0,i.kt)("p",null,"For ",(0,i.kt)("a",{parentName:"p",href:"/docs/v5/reference/glossary#cordova"},"Cordova"),", Ionic maintains a ",(0,i.kt)("a",{href:"https://github.com/ionic-team/cordova-plugin-ionic-webview",target:"_blank"},"Web View plugin"),". The plugin is provided by default when using the Ionic CLI."),(0,i.kt)("h2",{id:"what-is-a-web-view"},"What is a Web View?"),(0,i.kt)("p",null,"Ionic apps are built using ",(0,i.kt)("a",{parentName:"p",href:"/docs/v5/reference/glossary#web-standards"},"web technologies")," and are rendered using Web Views, which are a full screen and full-powered web browser."),(0,i.kt)("p",null,"Modern Web Views offer many built-in ",(0,i.kt)("a",{href:"https://whatwebcando.today",target:"_blank"},"HTML5 APIs")," for hardware functionality such as cameras, sensors, GPS, speakers, and Bluetooth, but sometimes it may also be necessary to access platform-specific hardware APIs. In Ionic apps, hardware APIs can be accessed through a bridge layer, typically by using native plugins which expose JavaScript APIs."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"webview architecture",src:r(70342).Z})),(0,i.kt)("p",null,"The Ionic Web View plugin is specialized for modern JavaScript apps. For both iOS and Android, app files are always hosted using the ",(0,i.kt)("inlineCode",{parentName:"p"},"http://")," protocol with an optimized HTTP server that runs on the local device."),(0,i.kt)("h3",{id:"cors"},"CORS"),(0,i.kt)("p",null,"Web Views enforce ",(0,i.kt)("a",{parentName:"p",href:"/docs/v5/reference/glossary#cors"},"CORS"),", so it's important that external services properly handle cross-origin requests. See the ",(0,i.kt)("a",{parentName:"p",href:"/docs/v5/troubleshooting/cors"},"CORS FAQs")," for information on dealing with CORS in Ionic apps."),(0,i.kt)("h3",{id:"file-protocol"},"File Protocol"),(0,i.kt)("p",null,"Capacitor and Cordova apps are hosted on a local HTTP server and are served with the ",(0,i.kt)("inlineCode",{parentName:"p"},"http://")," protocol. Some plugins, however, attempt to access device files via the ",(0,i.kt)("inlineCode",{parentName:"p"},"file://")," protocol. To avoid difficulties between ",(0,i.kt)("inlineCode",{parentName:"p"},"http://")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"file://"),", paths to device files must be rewritten to use the local HTTP server. For example, ",(0,i.kt)("inlineCode",{parentName:"p"},"file:///path/to/device/file")," must be rewritten as ",(0,i.kt)("inlineCode",{parentName:"p"},"http://<host>:<port>/<prefix>/path/to/device/file")," before being rendered in the app."),(0,i.kt)("p",null,"For Capacitor apps, convert file URIs like so:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Capacitor } from '@capacitor/core';\n\nCapacitor.convertFileSrc(filePath);\n")),(0,i.kt)("p",null,"For Cordova apps, the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ionic-team/cordova-plugin-ionic-webview"},"Ionic Web View plugin")," provides a utility function for converting File URIs: ",(0,i.kt)("inlineCode",{parentName:"p"},"window.Ionic.WebView.convertFileSrc()"),". There is also a corresponding Ionic Native plugin: ",(0,i.kt)("a",{parentName:"p",href:"/docs/v5/native/ionic-webview"},(0,i.kt)("inlineCode",{parentName:"a"},"@awesome-cordova-plugins/ionic-webview")),"."),(0,i.kt)("h3",{id:"implementations"},"Implementations"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"iOS"),": ",(0,i.kt)("a",{href:"https://developer.apple.com/documentation/webkit/wkwebview",target:"_blank"},"WKWebView")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Android"),": ",(0,i.kt)("a",{href:"https://developer.chrome.com/multidevice/webview/overview",target:"_blank"},"Web View for Android"))))}l.isMDXComponent=!0},70342:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/webview-architecture-bee351034ebbd5238a77b1a254d2dcbd.png"}}]);