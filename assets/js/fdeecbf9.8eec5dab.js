"use strict";(self.webpackChunkmxsm_website=self.webpackChunkmxsm_website||[]).push([[8679],{88:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var i=n(4848),r=n(8453);const l={title:"\u6df1\u5165\u4e86\u89e3WebApplicationInitializer\u662f\u6d88\u9664web.xml\u548cspringMVC\u7684\u914d\u7f6e\u6587\u4ef6",date:new Date("2019-02-21T00:00:00.000Z")},a=void 0,s={id:"spring/spring-framework/web-source-analysis/WebApplicationInitializer-eliminate-xml",title:"\u6df1\u5165\u4e86\u89e3WebApplicationInitializer\u662f\u6d88\u9664web.xml\u548cspringMVC\u7684\u914d\u7f6e\u6587\u4ef6",description:"1. Servlet3.x\u89c4\u8303\u4e00\u4e9b\u77e5\u8bc6",source:"@site/docs/spring/spring-framework/web-source-analysis/WebApplicationInitializer-eliminate-xml.md",sourceDirName:"spring/spring-framework/web-source-analysis",slug:"/spring/spring-framework/web-source-analysis/WebApplicationInitializer-eliminate-xml",permalink:"/docs/spring/spring-framework/web-source-analysis/WebApplicationInitializer-eliminate-xml",draft:!1,unlisted:!1,editUrl:"https://github.com/mxsm/mxsm-website/edit/develop/docs/spring/spring-framework/web-source-analysis/WebApplicationInitializer-eliminate-xml.md",tags:[],version:"current",lastUpdatedBy:"mxsm",lastUpdatedAt:1711106468,formattedLastUpdatedAt:"Mar 22, 2024",frontMatter:{title:"\u6df1\u5165\u4e86\u89e3WebApplicationInitializer\u662f\u6d88\u9664web.xml\u548cspringMVC\u7684\u914d\u7f6e\u6587\u4ef6",date:"2019-02-21T00:00:00.000Z"},sidebar:"springframework",previous:{title:"RequestMappingHandlerAdapter\u6e90\u7801\u5206\u6790",permalink:"/docs/spring/spring-framework/web-source-analysis/RequestMappingHandlerAdapter"},next:{title:"Spring Web Context",permalink:"/docs/spring/spring-framework/web-source-analysis/spring-web-context"}},o={},p=[{value:"1. Servlet3.x\u89c4\u8303\u4e00\u4e9b\u77e5\u8bc6",id:"1-servlet3x\u89c4\u8303\u4e00\u4e9b\u77e5\u8bc6",level:3},{value:"1.1 java Servlet3.x\u7684\u76f8\u5173\u89c4\u8303",id:"11-java-servlet3x\u7684\u76f8\u5173\u89c4\u8303",level:4},{value:"2. SpringServletContainerInitializer\u4ecb\u7ecd",id:"2-springservletcontainerinitializer\u4ecb\u7ecd",level:3},{value:"3. WebApplicationInitializer\u4ecb\u7ecd",id:"3-webapplicationinitializer\u4ecb\u7ecd",level:3},{value:"4. Spring+WebApplicationInitializer\u6d88\u9664\u914d\u7f6e\u6587\u4ef6\u6e90\u7801\u5206\u6790",id:"4-springwebapplicationinitializer\u6d88\u9664\u914d\u7f6e\u6587\u4ef6\u6e90\u7801\u5206\u6790",level:3},{value:"5. Spring\u7684\u4f8b\u5b50",id:"5-spring\u7684\u4f8b\u5b50",level:3}];function c(t){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",em:"em",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h3,{id:"1-servlet3x\u89c4\u8303\u4e00\u4e9b\u77e5\u8bc6",children:"1. Servlet3.x\u89c4\u8303\u4e00\u4e9b\u77e5\u8bc6"}),"\n",(0,i.jsx)(e.h4,{id:"11-java-servlet3x\u7684\u76f8\u5173\u89c4\u8303",children:"1.1 java Servlet3.x\u7684\u76f8\u5173\u89c4\u8303"}),"\n",(0,i.jsxs)(e.p,{children:["\u53ef\u4ee5\u53c2\u770b\uff1a",(0,i.jsx)(e.a,{href:"https://github.com/mxsm/document/blob/master/Spring/Springframework/Spring-web%E5%88%86%E6%9E%90/Servlet3.1.md",children:"Servlet\u76f8\u5173\u7b14\u8bb0"}),(0,i.jsx)(e.br,{}),"\n","\u5728Servlet\u7684\u89c4\u8303\u4e2d\u6709\u4e24\u79cd\u65b9\u5f0f\u6765\u5b9e\u73b0 ",(0,i.jsx)(e.em,{children:(0,i.jsx)(e.strong,{children:"ServletContext"})})," \u7684\u521d\u59cb\u5316\uff0c\u901a\u8fc7XML\u7684\u914d\u7f6e\u6587\u4ef6\u6216\u8005\u901a\u8fc7\u7f16\u7a0b\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u521d\u59cb\u5316\u3002",(0,i.jsx)(e.br,{}),"\n","\u6ce8\u89e3\u548cXML\u90fd\u662f\u53ef\u62d4\u63d2\u7684\u7ec4\u4ef6\uff0c\u901a\u8fc7\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u4e0d\u540c\u9700\u6c42\uff0c"]}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"ServletContainerInitializer \u7c7b\u901a\u8fc7 jar services API \u67e5\u627e\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5e94\u7528\uff0c\u5e94\u7528\u542f\u52a8\u65f6\uff0c\u7531\u5bb9\u5668\u521b\u5efa\u4e00\u4e2aServletContainerInitializer \u5b9e\u4f8b\u3002 \u6846\u67b6\u63d0\u4f9b\u7684 ServletContainerInitializer \u5b9e\u73b0\u5fc5\u987b\u7ed1\u5b9a\u5728 jar \u5305 \u7684\nMETA-INF/services \u76ee\u5f55\u4e2d\u7684\u4e00\u4e2a\u53eb\u505a javax.servlet.ServletContainerInitializer \u7684\u6587\u4ef6\uff0c\u6839\u636e jar services API\uff0c\u6307\u5b9a ServletContainerInitializer \u7684\u5b9e\u73b0\u3002\u9664 ServletContainerInitializer \u5916\uff0c\u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u6ce8\u89e3\u2014HandlesTypes\u3002\u5728 ServletContainerInitializer \u5b9e\u73b0\u4e0a\u7684\nHandlesTypes \u6ce8\u89e3\u7528\u4e8e\u8868\u793a\u611f\u5174\u8da3\u7684\u4e00\u4e9b\u7c7b\uff0c\u5b83\u4eec\u53ef\u80fd\u6307\u5b9a\u4e86 HandlesTypes \u7684 value \u4e2d\u7684\u6ce8\u89e3\uff08\u7c7b\u578b\u3001\u65b9\u6cd5\u6216\u81ea\u52a8\u7ea7\u522b\u7684\u6ce8\u89e3\uff09\uff0c\u6216\u8005\u662f\u5176\u7c7b\u578b\u7684\u8d85\u7c7b\u7ee7\u627f/\u5b9e\u73b0\u4e86\u8fd9\u4e9b\u7c7b\u4e4b\u4e00\u3002\u65e0\u8bba\u662f\u5426\u8bbe\u7f6e\u4e86 metadata-complete\uff0cHandlesTypes \u6ce8\u89e3\u5c06\u5e94\u7528\u3002\u5f53\u68c0\u6d4b\u4e00\u4e2a\u5e94\u7528\u7684\u7c7b\u770b\u662f\u5426\u5b83\u4eec\u5339\u914d ServletContainerInitializer \u7684 HandlesTypes \u6307\u5b9a\u7684\u6761\u4ef6\u65f6\uff0c\u5982\u679c\u5e94\u7528\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u53ef\u9009\u7684 JAR \u5305\u7f3a\u5931\uff0c\u5bb9\u5668\u53ef\u80fd\u9047\u5230\u7c7b\u88c5\u8f7d\u95ee\u9898\u3002\u7531\u4e8e\u5bb9\u5668\u4e0d\u80fd\u51b3\u5b9a\u662f\u5426\u8fd9\u4e9b\u7c7b\u578b\u7684\u7c7b\u88c5\u8f7d\u5931\u8d25\n\u5c06\u963b\u6b62\u5e94\u7528\u6b63\u5e38\u5de5\u4f5c\uff0c\u5b83\u5fc5\u987b\u5ffd\u7565\u5b83\u4eec\uff0c\u540c\u65f6\u4e5f\u63d0\u4f9b\u4e00\u4e2a\u5c06\u8bb0\u5f55\u5b83\u4eec\u7684\u914d\u7f6e\u9009\u9879\u3002\n\u5982\u679c ServletContainerInitializer \u5b9e\u73b0\u6ca1\u6709@HandlesTypes\u6ce8\u89e3\uff0c\u6216\u5982\u679c\u6ca1\u6709\u5339\u914d\u4efb\u4f55\u6307\u5b9a\u7684 HandlesType\uff0c\u90a3\n\u4e48\u5b83\u4f1a\u4e3a\u6bcf\u4e2a\u5e94\u7528\u4f7f\u7528 null \u503c\u7684\u96c6\u5408\u8c03\u7528\u4e00\u6b21\u3002\u8fd9\u5c06\u5141\u8bb8 initializer \u57fa\u4e8e\u5e94\u7528\u4e2d\u53ef\u7528\u7684\u8d44\u6e90\u51b3\u5b9a\u662f\u5426\u9700\u8981\u521d\u59cb\u5316 Servlet/Filter\u3002\u5728\u4efb\u4f55 Servlet Listener \u7684\u4e8b\u4ef6\u88ab\u89e6\u53d1\u4e4b\u524d\uff0c\u5f53\u5e94\u7528\u6b63\u5728\u542f\u52a8\u65f6\uff0cServletContainerInitializer \u7684 onStartup \u65b9\u6cd5\u5c06\u88ab\u8c03\u7528\u3002ServletContainerInitializer\u2019s \u7684 onStartup \u5f97\u5230\u4e00\u4e2a\u7c7b\u7684Set\uff0c\u5176\u6216\u8005\u7ee7\u627f/\u5b9e\u73b0 initializer \u8868\u793a\u611f\u5174\u8da3\u7684\u7c7b\uff0c\u6216\u8005\u5b83\u662f\u4f7f\u7528\u6307\u5b9a\u5728@HandlesTypes \u6ce8\u89e3\u4e2d\u7684\u4efb\u610f\u7c7b\u6ce8\u89e3\u7684\u3002"}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"2-springservletcontainerinitializer\u4ecb\u7ecd",children:"2. SpringServletContainerInitializer\u4ecb\u7ecd"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'@HandlesTypes(WebApplicationInitializer.class)\npublic class SpringServletContainerInitializer implements ServletContainerInitializer {\n    @Override\n\tpublic void onStartup(@Nullable Set<Class<?>> webAppInitializerClasses, ServletContext servletContext)\n\t\t\tthrows ServletException {\n\n\t\tList<WebApplicationInitializer> initializers = new LinkedList<>();\n\n\t\tif (webAppInitializerClasses != null) {\n\t\t\tfor (Class<?> waiClass : webAppInitializerClasses) {\n\t\t\t\t// Be defensive: Some servlet containers provide us with invalid classes,\n\t\t\t\t// no matter what @HandlesTypes says...\n\t\t\t\tif (!waiClass.isInterface() && !Modifier.isAbstract(waiClass.getModifiers()) &&\n\t\t\t\t\t\tWebApplicationInitializer.class.isAssignableFrom(waiClass)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tinitializers.add((WebApplicationInitializer)\n\t\t\t\t\t\t\t\tReflectionUtils.accessibleConstructor(waiClass).newInstance());\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Throwable ex) {\n\t\t\t\t\t\tthrow new ServletException("Failed to instantiate WebApplicationInitializer class", ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (initializers.isEmpty()) {\n\t\t\t//\u6253\u5370\u65e5\u5fd7\n\t\t\treturn;\n\t\t}\n\n\t    //\u6253\u5370\u65e5\u5fd7\n\t\tAnnotationAwareOrderComparator.sort(initializers);\n\t\tfor (WebApplicationInitializer initializer : initializers) {\n\t\t    //\u8c03\u7528WebApplicationInitializer\u7684\u65b9\u6cd5onStartup\n\t\t\tinitializer.onStartup(servletContext);\n\t\t}\n\t}\n\n}\n'})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.em,{children:(0,i.jsx)(e.strong,{children:"SpringServletContainerInitializer"})})," \u7ee7\u627f\u4e86 ",(0,i.jsx)(e.em,{children:(0,i.jsx)(e.strong,{children:"ServletContainerInitializer"})})," \u5728\u5bf9\u5e94\u7684jar\u5305\u4e0b\u9762\u7684 ",(0,i.jsx)(e.em,{children:(0,i.jsx)(e.strong,{children:"META-INF.services"})})," \u4e0b\u9762\u6709\u4e00\u4e2a\u6587\u4ef6 ",(0,i.jsx)(e.em,{children:(0,i.jsx)(e.strong,{children:"javax.servlet.ServletContainerInitializer"})})," \u5185\u5bb9\u5982\u4e0b\uff1a"]}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"org.springframework.web.SpringServletContainerInitializer"}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:["\u901a\u8fc7SPI\u5c31\u80fd\u52a0\u8f7d ",(0,i.jsx)(e.em,{children:(0,i.jsx)(e.strong,{children:"SpringServletContainerInitializer"})})," \u7c7b\uff0c\u7136\u540e\u901a\u8fc7\u5b9a\u4e49\u5728\u4e0a\u9762\u7684 ",(0,i.jsx)(e.em,{children:(0,i.jsx)(e.strong,{children:"@HandlesTypes"})})," \u6ce8\u89e3\u3002\u6839\u636e\u914d\u7f6e\u7684\u7c7b ",(0,i.jsx)(e.em,{children:(0,i.jsx)(e.strong,{children:"WebApplicationInitializer"})})," \u6765\u52a0\u8f7d\u3002\u901a\u8fc7 ",(0,i.jsx)(e.em,{children:(0,i.jsx)(e.strong,{children:"WebApplicationInitializer"})})," \u6765\u628aServlet\u548cSpring\u7ed3\u5408\u8d77\u6765\u3002"]}),"\n",(0,i.jsx)(e.h3,{id:"3-webapplicationinitializer\u4ecb\u7ecd",children:"3. WebApplicationInitializer\u4ecb\u7ecd"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:"https://github.com/mxsm/document/blob/master/image/Spring/Springframework/WebApplicationInitializer.png?raw=true",alt:"\u7ee7\u627f\u5173\u7cfb"})}),"\n",(0,i.jsxs)(e.p,{children:["\u4ece\u4e0a\u9762\u53ef\u4ee5\u770b\u51fa\u6765 ",(0,i.jsx)(e.em,{children:(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.code,{children:"WebApplicationInitializer"})})})," \u6709\u4e09\u4e2a\u7ee7\u627f\u5b9e\u73b0\u7c7b\uff0c\u4e09\u4e2a\u62bd\u8c61\u7684\u7c7b\u5355\u4e00\u7ee7\u627f\u3002\u4e0b\u9762\u5206\u6790\u4e00\u4e0b\u4e0b\u9762\u7684\u51e0\u4e2a\u521d\u59cb\u5316\u7c7b\uff1a"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"WebApplicationInitializer"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"public interface WebApplicationInitializer {\n\t//\u542f\u52a8\u65b9\u6cd5\n\tvoid onStartup(ServletContext servletContext) throws ServletException;\n\n}\n"})}),"\n",(0,i.jsxs)(e.p,{children:["\u5728 ",(0,i.jsx)(e.em,{children:(0,i.jsx)(e.strong,{children:"WebApplicationInitializer"})})," \u4e2d\u53ea\u6709\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5728 ",(0,i.jsx)(e.em,{children:(0,i.jsx)(e.strong,{children:"SpringServletContainerInitializer"})})," \u7c7b\u4e2d\u8c03\u7528\u4e86\u8fd9\u4e2a  ",(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.code,{children:"onStartup"})})," \u65b9\u6cd5\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"AbstractContextLoaderInitializer"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"public abstract class AbstractContextLoaderInitializer implements WebApplicationInitializer {\n\n\t/** Logger available to subclasses. */\n\tprotected final Log logger = LogFactory.getLog(getClass());\n\n\n\t@Override\n\tpublic void onStartup(ServletContext servletContext) throws ServletException {\n\t\tregisterContextLoaderListener(servletContext);\n\t}\n\n    //\u6dfb\u52a0ContextLoaderListener\u5230ServletContext\n\tprotected void registerContextLoaderListener(ServletContext servletContext) {\n\t\tWebApplicationContext rootAppContext = createRootApplicationContext();\n\t\tif (rootAppContext != null) {\n\t\t\tContextLoaderListener listener = new ContextLoaderListener(rootAppContext);\n\t\t\tlistener.setContextInitializers(getRootApplicationContextInitializers());\n\t\t\tservletContext.addListener(listener);\n\t\t}\n\t\telse {\n\t\t\t//\u6253\u5370\u65e5\u5fd7\n\t\t}\n\t}\n\n\t//\u521b\u5efaSpring\u7684WebApplicationContext\n\t@Nullable\n\tprotected abstract WebApplicationContext createRootApplicationContext();\n\n\t\n\t@Nullable\n\tprotected ApplicationContextInitializer<?>[] getRootApplicationContextInitializers() {\n\t\treturn null;\n\t}\n\n}\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"AbstractDispatcherServletInitializer"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'public abstract class AbstractDispatcherServletInitializer extends AbstractContextLoaderInitializer {\n\n\t//\u9ed8\u8ba4\u7684Servlet\u540d\u79f0\n\tpublic static final String DEFAULT_SERVLET_NAME = "dispatcher";\n\n\n\t@Override\n\tpublic void onStartup(ServletContext servletContext) throws ServletException {\n\t\tsuper.onStartup(servletContext);\n        //\u6ce8\u518cDispatcherServlet\n\t\tregisterDispatcherServlet(servletContext);\n\t}\n\n\t//\u6ce8\u518c\u6ce8\u518cDispatcherServlet\u7684\u65b9\u6cd5\n\tprotected void registerDispatcherServlet(ServletContext servletContext) {\n\t\tString servletName = getServletName();\n\t\tAssert.hasLength(servletName, "getServletName() must not return null or empty");\n\t\t//\u62bd\u8c61\u65b9\u6cd5createServletApplicationContext\u7531\u4f7f\u7528\u8005\u81ea\u5df1\u5b9e\u73b0\n\t\tWebApplicationContext servletAppContext = createServletApplicationContext();\n\t\tAssert.notNull(servletAppContext, "createServletApplicationContext() must not return null");\n\n\t\tFrameworkServlet dispatcherServlet = createDispatcherServlet(servletAppContext);\n\t\tAssert.notNull(dispatcherServlet, "createDispatcherServlet(WebApplicationContext) must not return null");\n\t\tdispatcherServlet.setContextInitializers(getServletApplicationContextInitializers());\n\n\t\tServletRegistration.Dynamic registration = servletContext.addServlet(servletName, dispatcherServlet);\n\t\tif (registration == null) {\n\t\t\tthrow new IllegalStateException("Failed to register servlet with name \'" + servletName + "\'. " +\n\t\t\t\t\t"Check if there is another servlet registered under the same name.");\n\t\t}\n\n\t\tregistration.setLoadOnStartup(1);\n\t\tregistration.addMapping(getServletMappings());\n\t\tregistration.setAsyncSupported(isAsyncSupported());\n\n\t\tFilter[] filters = getServletFilters();\n\t\tif (!ObjectUtils.isEmpty(filters)) {\n\t\t\tfor (Filter filter : filters) {\n\t\t\t\tregisterServletFilter(servletContext, filter);\n\t\t\t}\n\t\t}\n\n\t\tcustomizeRegistration(registration);\n\t}\n\n\t/**\n\t * Return the name under which the {@link DispatcherServlet} will be registered.\n\t * Defaults to {@link #DEFAULT_SERVLET_NAME}.\n\t * @see #registerDispatcherServlet(ServletContext)\n\t */\n\tprotected String getServletName() {\n\t\treturn DEFAULT_SERVLET_NAME;\n\t}\n\n\t/**\n\t * Create a servlet application context to be provided to the {@code DispatcherServlet}.\n\t * <p>The returned context is delegated to Spring\'s\n\t * {@link DispatcherServlet#DispatcherServlet(WebApplicationContext)}. As such,\n\t * it typically contains controllers, view resolvers, locale resolvers, and other\n\t * web-related beans.\n\t * @see #registerDispatcherServlet(ServletContext)\n\t */\n\tprotected abstract WebApplicationContext createServletApplicationContext();\n\n\t/**\n\t * Create a {@link DispatcherServlet} (or other kind of {@link FrameworkServlet}-derived\n\t * dispatcher) with the specified {@link WebApplicationContext}.\n\t * <p>Note: This allows for any {@link FrameworkServlet} subclass as of 4.2.3.\n\t * Previously, it insisted on returning a {@link DispatcherServlet} or subclass thereof.\n\t */\n\tprotected FrameworkServlet createDispatcherServlet(WebApplicationContext servletAppContext) {\n\t\treturn new DispatcherServlet(servletAppContext);\n\t}\n\n\t/**\n\t * Specify application context initializers to be applied to the servlet-specific\n\t * application context that the {@code DispatcherServlet} is being created with.\n\t * @since 4.2\n\t * @see #createServletApplicationContext()\n\t * @see DispatcherServlet#setContextInitializers\n\t * @see #getRootApplicationContextInitializers()\n\t */\n\t@Nullable\n\tprotected ApplicationContextInitializer<?>[] getServletApplicationContextInitializers() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Specify the servlet mapping(s) for the {@code DispatcherServlet} &mdash;\n\t * for example {@code "/"}, {@code "/app"}, etc.\n\t * @see #registerDispatcherServlet(ServletContext)\n\t */\n\tprotected abstract String[] getServletMappings();\n\n\t/**\n\t * Specify filters to add and map to the {@code DispatcherServlet}.\n\t * @return an array of filters or {@code null}\n\t * @see #registerServletFilter(ServletContext, Filter)\n\t */\n\t@Nullable\n\tprotected Filter[] getServletFilters() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Add the given filter to the ServletContext and map it to the\n\t * {@code DispatcherServlet} as follows:\n\t * <ul>\n\t * <li>a default filter name is chosen based on its concrete type\n\t * <li>the {@code asyncSupported} flag is set depending on the\n\t * return value of {@link #isAsyncSupported() asyncSupported}\n\t * <li>a filter mapping is created with dispatcher types {@code REQUEST},\n\t * {@code FORWARD}, {@code INCLUDE}, and conditionally {@code ASYNC} depending\n\t * on the return value of {@link #isAsyncSupported() asyncSupported}\n\t * </ul>\n\t * <p>If the above defaults are not suitable or insufficient, override this\n\t * method and register filters directly with the {@code ServletContext}.\n\t * @param servletContext the servlet context to register filters with\n\t * @param filter the filter to be registered\n\t * @return the filter registration\n\t */\n\tprotected FilterRegistration.Dynamic registerServletFilter(ServletContext servletContext, Filter filter) {\n\t\tString filterName = Conventions.getVariableName(filter);\n\t\tDynamic registration = servletContext.addFilter(filterName, filter);\n\n\t\tif (registration == null) {\n\t\t\tint counter = 0;\n\t\t\twhile (registration == null) {\n\t\t\t\tif (counter == 100) {\n\t\t\t\t\tthrow new IllegalStateException("Failed to register filter with name \'" + filterName + "\'. " +\n\t\t\t\t\t\t\t"Check if there is another filter registered under the same name.");\n\t\t\t\t}\n\t\t\t\tregistration = servletContext.addFilter(filterName + "#" + counter, filter);\n\t\t\t\tcounter++;\n\t\t\t}\n\t\t}\n\n\t\tregistration.setAsyncSupported(isAsyncSupported());\n\t\tregistration.addMappingForServletNames(getDispatcherTypes(), false, getServletName());\n\t\treturn registration;\n\t}\n\n\tprivate EnumSet<DispatcherType> getDispatcherTypes() {\n\t\treturn (isAsyncSupported() ?\n\t\t\t\tEnumSet.of(DispatcherType.REQUEST, DispatcherType.FORWARD, DispatcherType.INCLUDE, DispatcherType.ASYNC) :\n\t\t\t\tEnumSet.of(DispatcherType.REQUEST, DispatcherType.FORWARD, DispatcherType.INCLUDE));\n\t}\n\n\t/**\n\t * A single place to control the {@code asyncSupported} flag for the\n\t * {@code DispatcherServlet} and all filters added via {@link #getServletFilters()}.\n\t * <p>The default value is "true".\n\t */\n\tprotected boolean isAsyncSupported() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Optionally perform further registration customization once\n\t * {@link #registerDispatcherServlet(ServletContext)} has completed.\n\t * @param registration the {@code DispatcherServlet} registration to be customized\n\t * @see #registerDispatcherServlet(ServletContext)\n\t */\n\tprotected void customizeRegistration(ServletRegistration.Dynamic registration) {\n\t}\n\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"AbstractAnnotationConfigDispatcherServletInitializer"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"4-springwebapplicationinitializer\u6d88\u9664\u914d\u7f6e\u6587\u4ef6\u6e90\u7801\u5206\u6790",children:"4. Spring+WebApplicationInitializer\u6d88\u9664\u914d\u7f6e\u6587\u4ef6\u6e90\u7801\u5206\u6790"}),"\n",(0,i.jsx)(e.h3,{id:"5-spring\u7684\u4f8b\u5b50",children:"5. Spring\u7684\u4f8b\u5b50"})]})}function d(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(c,{...t})}):c(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>a,x:()=>s});var i=n(6540);const r={},l=i.createContext(r);function a(t){const e=i.useContext(l);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:a(t.components),i.createElement(l.Provider,{value:e},t.children)}}}]);