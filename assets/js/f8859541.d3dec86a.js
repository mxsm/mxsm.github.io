"use strict";(self.webpackChunkmxsm_website=self.webpackChunkmxsm_website||[]).push([[6023],{1327:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>u});var n=s(4848),i=s(8453);const o={title:"RocketMQ\u6e90\u7801\u89e3\u6790-Broker\u6d88\u606f\u5b58\u50a8ConsumeQueue",date:new Date("2020-03-22T00:00:00.000Z"),weight:202106012235},r=void 0,a={id:"rocketmq/rocketmq4/broker/RocketMQ-analysis-Broker-ConsumeQueue",title:"RocketMQ\u6e90\u7801\u89e3\u6790-Broker\u6d88\u606f\u5b58\u50a8ConsumeQueue",description:"\u4ee5\u4e0b\u6e90\u7801\u57fa\u4e8eRocket MQ 4.7.0",source:"@site/docs/rocketmq/rocketmq4/broker/RocketMQ-analysis-Broker-ConsumeQueue.md",sourceDirName:"rocketmq/rocketmq4/broker",slug:"/rocketmq/rocketmq4/broker/RocketMQ-analysis-Broker-ConsumeQueue",permalink:"/docs/rocketmq/rocketmq4/broker/RocketMQ-analysis-Broker-ConsumeQueue",draft:!1,unlisted:!1,editUrl:"https://github.com/mxsm/mxsm-website/edit/develop/docs/rocketmq/rocketmq4/broker/RocketMQ-analysis-Broker-ConsumeQueue.md",tags:[],version:"current",lastUpdatedBy:"mxsm",lastUpdatedAt:1710777389,formattedLastUpdatedAt:"Mar 18, 2024",frontMatter:{title:"RocketMQ\u6e90\u7801\u89e3\u6790-Broker\u6d88\u606f\u5b58\u50a8ConsumeQueue",date:"2020-03-22T00:00:00.000Z",weight:202106012235},sidebar:"rocketmq4",previous:{title:"RocketMQ\u6e90\u7801\u89e3\u6790-Broker\u6d88\u606f\u5b58\u50a8CommitLog",permalink:"/docs/rocketmq/rocketmq4/broker/RocketMQ-analysis-Broker-CommitLog"},next:{title:"RocketMQ\u6e90\u7801\u89e3\u6790-Broker\u4e0eNameServer\u4ea4\u4e92",permalink:"/docs/rocketmq/rocketmq4/broker/RocketMQ-analysis-Broker-NameServer-interaction"}},c={},u=[{value:"1. ConsumeQueue\u683c\u5f0f",id:"1-consumequeue\u683c\u5f0f",level:3},{value:"2. ConsumeQueue\u6301\u4e45\u5316\u8fc7\u7a0b",id:"2-consumequeue\u6301\u4e45\u5316\u8fc7\u7a0b",level:3},{value:"3. \u603b\u7ed3",id:"3-\u603b\u7ed3",level:3}];function l(e){const t={blockquote:"blockquote",code:"code",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsx)(t.p,{children:"\u4ee5\u4e0b\u6e90\u7801\u57fa\u4e8eRocket MQ 4.7.0"}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"1-consumequeue\u683c\u5f0f",children:"1. ConsumeQueue\u683c\u5f0f"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{src:"https://github.com/mxsm/document/blob/master/image/MQ/RocketMQ/ConsumeQueue.png?raw=true",alt:""})}),"\n",(0,n.jsx)(t.p,{children:"\u5728\u4e4b\u524d\u5c31\u5206\u6790\u8fc7\uff0c\u6bcf\u4e00\u6761ConsumeQueue\u6570\u636e\u662f\u5b9a\u957f\u768420bytes\uff0c\u7136\u540e\u6bcf\u4e00\u4e2a\u6587\u4ef6\u5b58\u50a830w\u6761\u6570\u636e\u3002\u5b58\u50a8\u662f\u6309\u7167topic\u548cqueueId\u8fdb\u884c\u5206\u7c7b\u5b58\u50a8\u3002\u90a3\u4e48ConsumeQueue\u7684\u4f5c\u7528\uff1a"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"\u524d8\u4e2abyte\u4fdd\u5b58\u4e86CommitLog\u7684\u504f\u79fb\u91cf\uff0c\u6839\u636e\u8fd9\u4e2a\u504f\u79fb\u91cf\u80fd\u591f\u627e\u5230\u8be5\u6761\u6d88\u606f\u7684CommitLog\u6587\u4ef6\u6240\u5728\u7684\u4f4d\u7f6e"}),"\n",(0,n.jsx)(t.li,{children:"\u4e2d\u95f4\u7684\u56db\u4e2a\u5b57\u8282\u4fdd\u5b58\u4e86\u6d88\u606f\u5927\u5c0f\u6839\u636e\u524d\u9762\u7684\u516b\u4e2a\u5b57\u8282\u5c31\u80fd\u968f\u673a\u8bfb\u51fa\u6d88\u606f\u3002"}),"\n",(0,n.jsx)(t.li,{children:"\u6700\u540e\u516b\u4e2a\u5b57\u8282\u7528\u4e8e\u5904\u7406\u6d88\u8d39\u8005tag\u7684\u8fc7\u6ee4"}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"\u8fd9\u91cc\u6211\u4eec\u53ea\u5206\u6790ConsumeQueue\u6587\u4ef6\u7684\u751f\u6210\u8fc7\u7a0b\uff0c\u5176\u4ed6\u7684\u4f1a\u5728\u540e\u7eed\u7684\u5176\u4ed6\u6587\u7ae0\u4e2d\u5206\u6790"}),"\n",(0,n.jsx)(t.h3,{id:"2-consumequeue\u6301\u4e45\u5316\u8fc7\u7a0b",children:"2. ConsumeQueue\u6301\u4e45\u5316\u8fc7\u7a0b"}),"\n",(0,n.jsxs)(t.p,{children:["ConsumeQueue\u6301\u4e45\u5316\u4e5f\u662fRocketMQ\u4e09\u5927\u6301\u4e45\u5316\u4e4b\u4e00\uff0c\u6240\u4ee5\u901a\u8fc7\u6e90\u7801\u5206\u6790\u627e\u5230\uff0cConsumeQueue\u6301\u4e45\u5316\u662f\u7528\u8fc7\u4e00\u4e2a ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"ReputMessageService"})})," \u6765\u63d0\u4f9b\u6301\u4e45\u5316\u670d\u52a1\uff0c\u8fd9\u4e2a\u7c7b\u662f ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"ReputMessageService"})})," \u7c7b\u4e2d\u7684\u4e00\u4e2a\u5185\u90e8\u7c7b:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:"class ReputMessageService extends ServiceThread {\n\n     private volatile long reputFromOffset = 0;\n\t//\u7701\u7565\u4ee3\u7801\n}\n"})}),"\n",(0,n.jsxs)(t.p,{children:["\u7ee7\u627f\u4e86RocketMQ\u81ea\u5b9a\u4e49\u7684 ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"ServiceThread"})})," \u670d\u52a1\u7ebf\u7a0b\u3002\u6240\u4ee5\u4e2a\u670d\u52a1\u5c31\u662f\u4e2a\u7ebf\u7a0b\u3002\u770b\u4e00\u4e0bRun\u65b9\u6cd5\uff1a"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:'        @Override\n        public void run() {\n            DefaultMessageStore.log.info(this.getServiceName() + " service started");\n\n            while (!this.isStopped()) {\n                try {\n                    Thread.sleep(1);\n                    this.doReput();\n                } catch (Exception e) {\n                    DefaultMessageStore.log.warn(this.getServiceName() + " service has exception. ", e);\n                }\n            }\n\n            DefaultMessageStore.log.info(this.getServiceName() + " service end");\n        }\n'})}),"\n",(0,n.jsx)(t.p,{children:"\u4e3b\u8981\u662f\u901a\u8fc7\u8c03\u7528doReput\u65b9\u6cd5\uff1a"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:'        private void doReput() {\n            //\u83b7\u53d6\u8bfb\u53d6\u6570\u636e\u7684\u4f4d\u7f6e--\u9ed8\u8ba4\u662f\u4ece0\u5f00\u59cb\uff0c\u5bf9\u4e8e\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\u7684\u7cfb\u7edf\u4f1a\u8fdb\u884c\u8bbe\u7f6e\n\t\t\tif (this.reputFromOffset < DefaultMessageStore.this.commitLog.getMinOffset()) {\n                log.warn("The reputFromOffset={} is smaller than minPyOffset={}, this usually indicate that the dispatch behind too much and the commitlog has expired.",\n                    this.reputFromOffset, DefaultMessageStore.this.commitLog.getMinOffset());\n                this.reputFromOffset = DefaultMessageStore.this.commitLog.getMinOffset();\n            }\n            for (boolean doNext = true; this.isCommitLogAvailable() && doNext; ) {\n\n                if (DefaultMessageStore.this.getMessageStoreConfig().isDuplicationEnable()\n                    && this.reputFromOffset >= DefaultMessageStore.this.getConfirmOffset()) {\n                    break;\n                }\n\t\t\t\t//\u83b7\u53d6CommitLog\u4e2d\u53ef\u4ee5\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u679c\n                SelectMappedBufferResult result = DefaultMessageStore.this.commitLog.getData(reputFromOffset);\n                if (result != null) {\n                    try {\n                        this.reputFromOffset = result.getStartOffset();\n\n                        for (int readSize = 0; readSize < result.getSize() && doNext; ) {\n\t\t\t\t\t\t\t//\u83b7\u53d6\u4e00\u6761CommitLog\u6570\u636e\u51fa\u6765\n                            DispatchRequest dispatchRequest =\n                                DefaultMessageStore.this.commitLog.checkMessageAndReturnSize(result.getByteBuffer(), false, false);\n\t\t\t\t\t\t\t\t\t\n                            int size = dispatchRequest.getBufferSize() == -1 ? dispatchRequest.getMsgSize() : dispatchRequest.getBufferSize();\n\t\t\t\t\t\t\t\n                            if (dispatchRequest.isSuccess()) {\n                                if (size > 0) {\n\t\t\t\t\t\t\t\t\t//\u8c03\u7528\u5904\u7406\u6570\u636e\u751f\u6210ConsumeQueue\n                                    DefaultMessageStore.this.doDispatch(dispatchRequest);\n\n\t\t\t\t\t\t\t\t\t//\u5bf9\u4e8eBroker Master\u8fdb\u884c\u5904\u7406\n                                    if (BrokerRole.SLAVE != DefaultMessageStore.this.getMessageStoreConfig().getBrokerRole()\n                                        && DefaultMessageStore.this.brokerConfig.isLongPollingEnable()) {\n                                        DefaultMessageStore.this.messageArrivingListener.arriving(dispatchRequest.getTopic(),\n                                            dispatchRequest.getQueueId(), dispatchRequest.getConsumeQueueOffset() + 1,\n                                            dispatchRequest.getTagsCode(), dispatchRequest.getStoreTimestamp(),\n                                            dispatchRequest.getBitMap(), dispatchRequest.getPropertiesMap());\n                                    }\n\t\t\t\t\t\t\t\t\t//\u5411\u524d\u63a8\u8fdboffset\n                                    this.reputFromOffset += size;\n                                    readSize += size;\n                                    if (DefaultMessageStore.this.getMessageStoreConfig().getBrokerRole() == BrokerRole.SLAVE) {\n                                        DefaultMessageStore.this.storeStatsService\n                                            .getSinglePutMessageTopicTimesTotal(dispatchRequest.getTopic()).incrementAndGet();\n                                        DefaultMessageStore.this.storeStatsService\n                                            .getSinglePutMessageTopicSizeTotal(dispatchRequest.getTopic())\n                                            .addAndGet(dispatchRequest.getMsgSize());\n                                    }\n                                } else if (size == 0) {\n\t\t\t\t\t\t\t\t\t//\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u6587\u4ef6\n                                    this.reputFromOffset = DefaultMessageStore.this.commitLog.rollNextFile(this.reputFromOffset);\n                                    readSize = result.getSize();\n                                }\n                            } else if (!dispatchRequest.isSuccess()) {\n\n                                if (size > 0) {\n                                    log.error("[BUG]read total count not equals msg total size. reputFromOffset={}", reputFromOffset);\n                                    this.reputFromOffset += size;\n                                } else {\n                                    doNext = false;\n                                    // If user open the dledger pattern or the broker is master node,\n                                    // it will not ignore the exception and fix the reputFromOffset variable\n                                    if (DefaultMessageStore.this.getMessageStoreConfig().isEnableDLegerCommitLog() ||\n                                        DefaultMessageStore.this.brokerConfig.getBrokerId() == MixAll.MASTER_ID) {\n                                        log.error("[BUG]dispatch message to consume queue error, COMMITLOG OFFSET: {}",\n                                            this.reputFromOffset);\n                                        this.reputFromOffset += result.getSize() - readSize;\n                                    }\n                                }\n                            }\n                        }\n                    } finally {\n                        result.release();\n                    }\n                } else {\n                    doNext = false;\n                }\n            }\n        }\n'})}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"\u8bfb\u53d6CommitLog\u4e2d\u5f53\u524d\u6b21\u6570\u80fd\u591f\u5904\u7406\u7684\u6570\u636e\u3002(\u6570\u636e\u53ef\u80fd\u5728\u4e0d\u540c\u7684\u6587\u4ef6\u4e2d)"}),"\n",(0,n.jsxs)(t.li,{children:["\u5faa\u73af\u5904\u7406\u5f53\u524d\u6279\u6b21\u7684\u6570\u636e\u5c06\u6570\u636e\u8f6c\u6362\u4e3a ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"DispatchRequest"})})]}),"\n",(0,n.jsxs)(t.li,{children:["\u901a\u8fc7 ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"DefaultMessageStore.doDispatch"})})," \u53bb\u5206\u53d1 ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"DispatchReques"})})," t\u6570\u636e"]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["\u4e0b\u9762\u6765\u770b\u4e00\u4e0b ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"DefaultMessageStore.doDispatch"})}),"  \u65b9\u6cd5\u662f\u5982\u4f55\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u53d1\u7684\uff1a"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:"    public void doDispatch(DispatchRequest req) {\n        for (CommitLogDispatcher dispatcher : this.dispatcherList) {\n            dispatcher.dispatch(req);\n        }\n    }\n"})}),"\n",(0,n.jsxs)(t.p,{children:["\u901a\u8fc7\u8fd9\u91cc\u53ef\u4ee5\u770b\u51fa\u6765\u6709\u4e00\u4e2a ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"CommitLogDispatcher"})})," \u63a5\u53e3, \u8fd9\u91cc\u5176\u5b9e\u5c31\u5206\u522b\u5904\u7406\u6765\u751f\u6210 ConsumeQueue\u548cIndexFile\u4e24\u79cd\u6587\u4ef6\u3002"]}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"CommitLogDispatcher"})}),"  \u5728RocketMQ\u4e2d\u6709\u4e09\u79cd\u5b9e\u73b0\uff1a"]}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"CommitLogDispatcherBuildConsumeQueue -- \u5904\u7406ConsumeQueue\u7684\u751f\u6210"}),"\n",(0,n.jsx)(t.li,{children:"CommitLogDispatcherBuildIndex -- \u5904\u7406IndexFile\u7684\u751f\u6210"}),"\n",(0,n.jsx)(t.li,{children:"CommitLogDispatcherCalcBitMap -- \u5904\u7406\u8ba1\u7b97bit Map"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"\u4e0b\u9762\u6765\u770b\u4e00\u4e0bCommitLogDispatcherBuildConsumeQueue\u7684\u5b9e\u73b0\uff1a"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:"    class CommitLogDispatcherBuildConsumeQueue implements CommitLogDispatcher {\n\n        @Override\n        public void dispatch(DispatchRequest request) {\n            final int tranType = MessageSysFlag.getTransactionValue(request.getSysFlag());\n            switch (tranType) {\n                case MessageSysFlag.TRANSACTION_NOT_TYPE:\n                case MessageSysFlag.TRANSACTION_COMMIT_TYPE:\n                    DefaultMessageStore.this.putMessagePositionInfo(request);\n                    break;\n                case MessageSysFlag.TRANSACTION_PREPARED_TYPE:\n                case MessageSysFlag.TRANSACTION_ROLLBACK_TYPE:\n                    break;\n            }\n        }\n    }\n"})}),"\n",(0,n.jsxs)(t.p,{children:["\u8fd9\u91ccTRANSACTION_PREPARED_TYPE\u548cTRANSACTION_ROLLBACK_TYPE\u8fd9\u4e24\u79cd\u6570\u636e\u7c7b\u578b\u4e0d\u9700\u8981\u5904\u7406\u3002\u6570\u636e\u5904\u7406\u53ea\u8981\u662f\u901a\u8fc7 ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"DefaultMessageStore.this.putMessagePositionInfo(request)"})})," \u8fd9\u6bb5\u4ee3\u7801\u5904\u7406\u3002"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:"    public void putMessagePositionInfo(DispatchRequest dispatchRequest) {\n        ConsumeQueue cq = this.findConsumeQueue(dispatchRequest.getTopic(), dispatchRequest.getQueueId());\n        cq.putMessagePositionInfoWrapper(dispatchRequest);\n    }\n"})}),"\n",(0,n.jsx)(t.p,{children:"\u901a\u8fc7topic\u548cqueueId\u627e\u5230\u5bf9\u5e94\u7684ConsumeQueue\u3002"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:' public void putMessagePositionInfoWrapper(DispatchRequest request) {\n        final int maxRetries = 30;\n        boolean canWrite = this.defaultMessageStore.getRunningFlags().isCQWriteable();\n        for (int i = 0; i < maxRetries && canWrite; i++) {\n            long tagsCode = request.getTagsCode();\n            if (isExtWriteEnable()) {\n                ConsumeQueueExt.CqExtUnit cqExtUnit = new ConsumeQueueExt.CqExtUnit();\n                cqExtUnit.setFilterBitMap(request.getBitMap());\n                cqExtUnit.setMsgStoreTime(request.getStoreTimestamp());\n                cqExtUnit.setTagsCode(request.getTagsCode());\n\n                long extAddr = this.consumeQueueExt.put(cqExtUnit);\n                if (isExtAddr(extAddr)) {\n                    tagsCode = extAddr;\n                } else {\n                    log.warn("Save consume queue extend fail, So just save tagsCode! {}, topic:{}, queueId:{}, offset:{}", cqExtUnit,\n                        topic, queueId, request.getCommitLogOffset());\n                }\n            }\n            boolean result = this.putMessagePositionInfo(request.getCommitLogOffset(),\n                request.getMsgSize(), tagsCode, request.getConsumeQueueOffset());\n            if (result) {\n                if (this.defaultMessageStore.getMessageStoreConfig().getBrokerRole() == BrokerRole.SLAVE ||\n                    this.defaultMessageStore.getMessageStoreConfig().isEnableDLegerCommitLog()) {\n                    this.defaultMessageStore.getStoreCheckpoint().setPhysicMsgTimestamp(request.getStoreTimestamp());\n                }\n                this.defaultMessageStore.getStoreCheckpoint().setLogicsMsgTimestamp(request.getStoreTimestamp());\n                return;\n            } else {\n                // XXX: warn and notify me\n                log.warn("[BUG]put commit log position info to " + topic + ":" + queueId + " " + request.getCommitLogOffset()\n                    + " failed, retry " + i + " times");\n\n                try {\n                    Thread.sleep(1000);\n                } catch (InterruptedException e) {\n                    log.warn("", e);\n                }\n            }\n        }\n\n        // XXX: warn and notify me\n        log.error("[BUG]consume queue can not write, {} {}", this.topic, this.queueId);\n        this.defaultMessageStore.getRunningFlags().makeLogicsQueueError();\n    }\n'})}),"\n",(0,n.jsxs)(t.p,{children:["\u4e0a\u9762\u4ee3\u7801\u901a\u8fc7\u5904\u7406 ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"putMessagePositionInfo"})})," \u65b9\u6cd5\u5904\u7406\u6570\u636e\uff1a"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:'private boolean putMessagePositionInfo(final long offset, final int size, final long tagsCode,\n        final long cqOffset) {\n\n        if (offset + size <= this.maxPhysicOffset) {\n            log.warn("Maybe try to build consume queue repeatedly maxPhysicOffset={} phyOffset={}", maxPhysicOffset, offset);\n            return true;\n        }\n\n        this.byteBufferIndex.flip();\n        this.byteBufferIndex.limit(CQ_STORE_UNIT_SIZE);\n        this.byteBufferIndex.putLong(offset);\n        this.byteBufferIndex.putInt(size);\n        this.byteBufferIndex.putLong(tagsCode);\n\n        final long expectLogicOffset = cqOffset * CQ_STORE_UNIT_SIZE;\n\n        MappedFile mappedFile = this.mappedFileQueue.getLastMappedFile(expectLogicOffset);\n        if (mappedFile != null) {\n\n            if (mappedFile.isFirstCreateInQueue() && cqOffset != 0 && mappedFile.getWrotePosition() == 0) {\n                this.minLogicOffset = expectLogicOffset;\n                this.mappedFileQueue.setFlushedWhere(expectLogicOffset);\n                this.mappedFileQueue.setCommittedWhere(expectLogicOffset);\n                this.fillPreBlank(mappedFile, expectLogicOffset);\n                log.info("fill pre blank space " + mappedFile.getFileName() + " " + expectLogicOffset + " "\n                    + mappedFile.getWrotePosition());\n            }\n\n            if (cqOffset != 0) {\n                long currentLogicOffset = mappedFile.getWrotePosition() + mappedFile.getFileFromOffset();\n\n                if (expectLogicOffset < currentLogicOffset) {\n                    log.warn("Build  consume queue repeatedly, expectLogicOffset: {} currentLogicOffset: {} Topic: {} QID: {} Diff: {}",\n                        expectLogicOffset, currentLogicOffset, this.topic, this.queueId, expectLogicOffset - currentLogicOffset);\n                    return true;\n                }\n\n                if (expectLogicOffset != currentLogicOffset) {\n                    LOG_ERROR.warn(\n                        "[BUG]logic queue order maybe wrong, expectLogicOffset: {} currentLogicOffset: {} Topic: {} QID: {} Diff: {}",\n                        expectLogicOffset,\n                        currentLogicOffset,\n                        this.topic,\n                        this.queueId,\n                        expectLogicOffset - currentLogicOffset\n                    );\n                }\n            }\n            this.maxPhysicOffset = offset + size;\n            return mappedFile.appendMessage(this.byteBufferIndex.array());\n        }\n        return false;\n    }\n'})}),"\n",(0,n.jsx)(t.p,{children:"\u540e\u7eed\u7684\u6570\u636e\u5176\u5b9e\u548cCommitLog\u7684\u6570\u636e\u5dee\u4e0d\u591a\uff0c\u90fd\u662f\u901a\u8fc7MappedFile\u8fdb\u884c\u6570\u636e\u843d\u5730\u3002"}),"\n",(0,n.jsx)(t.h3,{id:"3-\u603b\u7ed3",children:"3. \u603b\u7ed3"}),"\n",(0,n.jsx)(t.p,{children:"\u603b\u7ed3\u4e00\u4e0bConsumeQueue\u751f\u6210\u7684\u8fc7\u7a0b\uff1a"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"\u542f\u52a8\u4e00\u4e2aReputMessageService\u670d\u52a1\u7ebf\u7a0b"}),"\n",(0,n.jsx)(t.li,{children:"\u7136\u540e\u6839\u636ereputFromOffset\u53bb\u8bfb\u53d6\u672c\u6b21\u7684CommitLog\u6570\u636e\uff08\u6ca1\u6709\u6216\u8005\u6709\uff09"}),"\n",(0,n.jsx)(t.li,{children:"\u5c06\u6bcf\u6761\u6570\u636e\u5305\u88c5\u4e3aDispatchRequest"}),"\n",(0,n.jsx)(t.li,{children:"DefaultMessageStore.doDispatch\u7684\u65b9\u6cd5\u8fdb\u884c\u5904\u7406\u6570\u636e\uff0c\u5185\u90e8\u4e3b\u8981\u662f\u901a\u8fc7CommitLogDispatcher\u7684\u5b9e\u73b0\u6765\u8fdb\u884c\u5904\u7406"}),"\n",(0,n.jsx)(t.li,{children:"\u751f\u6210\u5b8cConsumeQueue\u7eaa\u5f55\u540e\u7684\u540e\u7eed\u5904\u7406"}),"\n",(0,n.jsx)(t.li,{children:"\u91cd\u590d2-4\u7684\u6b65\u9aa4"}),"\n"]}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsx)(t.p,{children:"\u6bcf\u6b21\u5904\u7406\u5b8c\u6210\u4e00\u8f6e\u540e\u4f1a\u77611\u6beb\u79d2\u7684\u65f6\u95f4\u3002\u5e76\u4e0d\u662f\u6d88\u606f\u751f\u6210\u7aef\u53d1\u9001\u4e86\u6d88\u606f\u6d88\u8d39\u7aef\u5c31\u80fd\u591f\u91cc\u9762\u6d88\u8d39\u6570\u636e\uff0c\u800c\u662f\u8981\u7ecf\u8fc7\u5904\u7406\u540e\u751f\u6210ConsumeQueue\u624d\u80fd\u6d88\u8d39\u3002"}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["\u4e0a\u9762\u8bf4\u4e86\u80fd\u591f\u6d88\u8d39\u7684\u6570\u636e\u9700\u8981\u5c06CommitLog\u8f6c\u5316\u6210\u4e3aConsumeQueue\u624d\u80fd\u8fdb\u884c\u6d88\u8d39\u4e0b\u9762\u5c31\u6765\u770b\u4e00\u4e0b\uff0c\u8fdb\u884c\u9a8c\u8bc1\uff0c\u5c06 ",(0,n.jsx)(t.strong,{children:"ReputMessageService"})," \u7684\u7761\u7720\u65f6\u95f4\u6539\u4e3a\u4e00\u5206\u949f\u4ee3\u7801\u5982\u4e0b\uff1a"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:'@Override\npublic void run() {\n    DefaultMessageStore.log.info(this.getServiceName() + " service started");\n\n    while (!this.isStopped()) {\n        try {\n            //Thread.sleep(1);\n            //\u5c06\u7761\u7720\u65f6\u95f4\u6539\u4e3a1\u5206\u949f\n            TimeUnit.MINUTES.sleep(1);\n            this.doReput();\n        } catch (Exception e) {\n            DefaultMessageStore.log.warn(this.getServiceName() + " service has exception. ", e);\n        }\n    }\n\n    DefaultMessageStore.log.info(this.getServiceName() + " service end");\n}\n'})}),"\n",(0,n.jsx)(t.p,{children:"\u542f\u52a8\u4fee\u6539\u540e\u7684MQ Broker\u3002"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{src:"https://github.com/mxsm/picture/blob/main/rocketmq/ConsumeQueue%E7%9D%A1%E7%9C%A0%E6%97%B6%E9%97%B4%E4%BF%AE%E6%94%B9.gif?raw=true",alt:""})}),"\n",(0,n.jsx)(t.p,{children:"\u7136\u540e\u542f\u52a8\u6d88\u8d39\u8005\uff0c\u540c\u65f6\u7528\u751f\u4ea7\u8005\u53d1\u9001\u6d88\u606f\uff1a"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{src:"https://github.com/mxsm/picture/blob/main/rocketmq/ConsumeQueue%E7%9D%A1%E7%9C%A0%E6%97%B6%E9%97%B4%E4%BF%AE%E6%94%B9-1.gif?raw=true",alt:""})}),"\n",(0,n.jsx)(t.p,{children:"\u770b\u4e00\u4e0b\u4e24\u4e2a\u65f6\u95f4\u7684\u95f4\u9694\uff1a"}),"\n",(0,n.jsx)(t.p,{children:"1623405444983(\u53d1\u9001\u65f6\u95f4)=2021-06-11 17:57:24"}),"\n",(0,n.jsx)(t.p,{children:"1623405552338(\u6d88\u8d39\u65f6\u95f4)=2021-06-11 17:59:12"}),"\n",(0,n.jsx)(t.p,{children:"\u901a\u8fc7\u4e24\u4e2a\u65f6\u95f4\u53d1\u73b0\u4e0d\u662f\u7acb\u9a6c\u8fdb\u884c\u6d88\u8d39\u3002\u6240\u4ee5\u9a8c\u8bc1\u4e86\u524d\u9762\u7684\u731c\u6d4b\u3002"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"\u6bcf\u6b21\u5904\u7406\u5b8c\u6210\u4e00\u8f6e\u540e\u4f1a\u77611\u6beb\u79d2\u7684\u65f6\u95f4\u3002\u5e76\u4e0d\u662f\u6d88\u606f\u751f\u6210\u7aef\u53d1\u9001\u4e86\u6d88\u606f\u6d88\u8d39\u7aef\u5c31\u80fd\u591f\u91cc\u9762\u6d88\u8d39\u6570\u636e\uff0c\u800c\u662f\u8981\u7ecf\u8fc7\u5904\u7406\u540e\u751f\u6210ConsumeQueue\u624d\u80fd\u6d88\u8d39\u3002"})})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>a});var n=s(6540);const i={},o=n.createContext(i);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);