"use strict";(self.webpackChunkmxsm_website=self.webpackChunkmxsm_website||[]).push([[89878],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var o=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=o.createContext({}),c=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=a,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return t?o.createElement(h,r(r({ref:n},p),{},{components:t})):o.createElement(h,r({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,r=new Array(i);r[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var c=2;c<i;c++)r[c]=t[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},47758:(e,n,t)=>{t.d(n,{Z:()=>s});var o=t(67294),a=t(86010),i=t(39960),r=t(44996);const l="card_7QME";const s=function(e){const n=void 0===e.href,t=void 0!==e.href&&/^http/.test(e.href),s="undefined"===e.header?null:o.createElement("header",{className:"Card-header"},e.header),c=e.hoverIcon||e.icon,p=o.createElement(o.Fragment,null,e.img&&o.createElement("img",{src:(0,r.Z)(e.img),className:"Card-image"}),o.createElement("div",{className:"Card-container"},(e.icon||c)&&o.createElement("div",{className:"Card-icon-row"},e.icon&&o.createElement("img",{src:(0,r.Z)(e.icon),className:"Card-icon Card-icon-default"}),c&&o.createElement("img",{src:(0,r.Z)(c),className:"Card-icon Card-icon-hover"})),e.ionicon&&o.createElement("ion-icon",{name:e.ionicon,className:"Card-ionicon"}),e.iconset&&o.createElement("div",{className:"Card-iconset__container"},e.iconset.split(",").map(((n,t)=>o.createElement("img",{src:(0,r.Z)(n),className:"Card-icon "+(t===e.activeIndex?"Card-icon-active":""),"data-index":t,key:t})))),e.header&&s,o.createElement("div",{className:"Card-content"},e.children))),d=(0,a.Z)({"Card-with-image":void 0!==e.img,"Card-without-image":void 0===e.img,"Card-size-lg":"lg"===e.size,[e.className]:e.className});return n?o.createElement("docs-card",{class:d},o.createElement("div",{className:(0,a.Z)(l,"docs-card")},p)):t?o.createElement("docs-card",{class:d},o.createElement("a",{className:(0,a.Z)(l,"docs-card"),href:e.href,target:"_blank"},p)):o.createElement("docs-card",{class:d},o.createElement(i.default,{to:e.href,className:(0,a.Z)(l,"docs-card")},p))}},53445:(e,n,t)=>{t.d(n,{Z:()=>a});var o=t(67294);const a=function(e){return o.createElement("docs-cards",{class:e.className},e.children)}},11303:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var o=t(87462),a=(t(67294),t(3905)),i=t(47758);t(53445);const r={title:"Structure",initialTab:"preview"},l=void 0,s={unversionedId:"layout/structure",id:"layout/structure",isDocsHomePage:!1,title:"Structure",description:"Structure Layout | Structures for Content Layout on Ionic Apps",source:"@site/docs/layout/structure.md",sourceDirName:"layout",slug:"/layout/structure",permalink:"/docs/layout/structure",editUrl:"https://github.com/ionic-team/ionic-docs/edit/main/docs/layout/structure.md",tags:[],version:"current",frontMatter:{title:"Structure",initialTab:"preview"},sidebar:"docs",previous:{title:"Keyboard",permalink:"/docs/developing/keyboard"},next:{title:"Global Stylesheets",permalink:"/docs/layout/global-stylesheets"}},c=[{value:"Header and Footer Layout",id:"header-and-footer-layout",children:[{value:"Header",id:"header",children:[],level:3},{value:"Footer",id:"footer",children:[],level:3},{value:"Header and Footer",id:"header-and-footer",children:[],level:3},{value:"Live examples",id:"live-examples",children:[],level:3}],level:2},{value:"Tabs Layout",id:"tabs-layout",children:[{value:"Live examples",id:"live-examples-1",children:[],level:3}],level:2},{value:"Menu Layout",id:"menu-layout",children:[{value:"Live examples",id:"live-examples-2",children:[],level:3}],level:2},{value:"Split Pane Layout",id:"split-pane-layout",children:[{value:"Live examples",id:"live-examples-3",children:[],level:3}],level:2}],p={toc:c};function d(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("head",null,(0,a.kt)("title",null,"Structure Layout | Structures for Content Layout on Ionic Apps"),(0,a.kt)("meta",{name:"description",content:"Ionic provides several different layouts that can be used to structure an app and its content\u2014from single page layouts, to split pane views and modals."})),(0,a.kt)("p",null,"Ionic Framework provides several different layouts that can be used to structure an app. From single page layouts, to split pane views and modals."),(0,a.kt)("h2",{id:"header-and-footer-layout"},"Header and Footer Layout"),(0,a.kt)("h3",{id:"header"},"Header"),(0,a.kt)("aside",null,(0,a.kt)(i.Z,{href:"../api/header",header:"Learn More",icon:"/icons/component-header-icon.png",mdxType:"DocsCard"},(0,a.kt)("code",null,"ion-header")," API docs")),(0,a.kt)("p",null,"The most simple layout available consists of a ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/header"},"header")," and ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/content"},"content"),". Most pages in an app generally have both of these, but a header is not required in order to use content."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<ion-app>\n  <ion-header>\n    <ion-toolbar>\n      <ion-title>Header</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-content class="ion-padding">\n    <h1>Main Content</h1>\n  </ion-content>\n</ion-app>\n')),(0,a.kt)("h3",{id:"footer"},"Footer"),(0,a.kt)("aside",null,(0,a.kt)(i.Z,{href:"../api/footer",header:"Learn More",icon:"/icons/component-footer-icon.png",mdxType:"DocsCard"},(0,a.kt)("code",null,"ion-footer")," API docs")),(0,a.kt)("p",null,"As you can see, a toolbar in a header appears above the content. Sometimes an app needs to have a toolbar below the content, which is when a footer is used."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<ion-app>\n  <ion-content class="ion-padding">\n    <h1>Main Content</h1>\n  </ion-content>\n\n  <ion-footer>\n    <ion-toolbar>\n      <ion-title>Footer</ion-title>\n    </ion-toolbar>\n  </ion-footer>\n</ion-app>\n')),(0,a.kt)("h3",{id:"header-and-footer"},"Header and Footer"),(0,a.kt)("p",null,"These can also be combined on one page to have a toolbar above ",(0,a.kt)("em",{parentName:"p"},"and")," below the content."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<ion-app>\n  <ion-header>\n    <ion-toolbar>\n      <ion-title>Header</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-content class="ion-padding">\n    <h1>Main Content</h1>\n  </ion-content>\n\n  <ion-footer>\n    <ion-toolbar>\n      <ion-title>Footer</ion-title>\n    </ion-toolbar>\n  </ion-footer>\n</ion-app>\n')),(0,a.kt)("h3",{id:"live-examples"},"Live examples"),(0,a.kt)("p",null,"You can view a live example of this setup in Angular ",(0,a.kt)("a",{parentName:"p",href:"https://stackblitz.com/edit/ionic-ng-header-footer"},"here")," and in React ",(0,a.kt)("a",{parentName:"p",href:"https://stackblitz.com/edit/ionic-react-head-foot"},"here"),"."),(0,a.kt)("h2",{id:"tabs-layout"},"Tabs Layout"),(0,a.kt)("p",null,"A layout consisting of horizontal ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/tabs"},"tabs")," can be used to let the user quickly change between content views. Each tab can contain static content or a navigation stack by using an ",(0,a.kt)("inlineCode",{parentName:"p"},"ion-router-outlet")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"ion-nav"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<ion-app>\n  <ion-tabs>\n    <ion-tab tab="home">\n      <h1>Home Content</h1>\n    </ion-tab>\n    <ion-tab tab="settings">\n      <h1>Settings Content</h1>\n    </ion-tab>\n\n    <ion-tab-bar slot="bottom">\n      <ion-tab-button tab="home">\n        <ion-label>Home</ion-label>\n        <ion-icon name="home"></ion-icon>\n      </ion-tab-button>\n      <ion-tab-button tab="settings">\n        <ion-label>Settings</ion-label>\n        <ion-icon name="settings"></ion-icon>\n      </ion-tab-button>\n    </ion-tab-bar>\n  </ion-tabs>\n</ion-app>\n')),(0,a.kt)("h3",{id:"live-examples-1"},"Live examples"),(0,a.kt)("p",null,"You can view a live example of this setup in Angular ",(0,a.kt)("a",{parentName:"p",href:"https://stackblitz.com/edit/ionic-ng-tabs"},"here")," and in React ",(0,a.kt)("a",{parentName:"p",href:"https://stackblitz.com/edit/ionic-react-tab-layout"},"here"),"."),(0,a.kt)("h2",{id:"menu-layout"},"Menu Layout"),(0,a.kt)("p",null,"A standard layout among mobile apps includes the ability to toggle a side ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/menu"},"menu")," by clicking a button or swiping it open from the side. Side menus are generally used for navigation, but they can contain any content."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<ion-app>\n  <ion-menu content-id="main-content">\n    <ion-header>\n      <ion-toolbar color="primary">\n        <ion-title>Menu</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content>\n      <ion-list>\n        <ion-list-header> Navigate </ion-list-header>\n        <ion-menu-toggle auto-hide="false">\n          <ion-item button>\n            <ion-icon slot="start" name="home"></ion-icon>\n            <ion-label> Home </ion-label>\n          </ion-item>\n        </ion-menu-toggle>\n      </ion-list>\n    </ion-content>\n  </ion-menu>\n\n  <ion-page class="ion-page" id="main-content">\n    <ion-header>\n      <ion-toolbar>\n        <ion-buttons slot="start">\n          <ion-menu-toggle>\n            <ion-button>\n              <ion-icon slot="icon-only" name="menu"></ion-icon>\n            </ion-button>\n          </ion-menu-toggle>\n        </ion-buttons>\n        <ion-title>Header</ion-title>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content class="ion-padding">\n      <h1>Main Content</h1>\n      <p>Click the icon in the top left to toggle the menu.</p>\n    </ion-content>\n  </ion-page>\n</ion-app>\n\n<ion-menu-controller></ion-menu-controller>\n')),(0,a.kt)("h3",{id:"live-examples-2"},"Live examples"),(0,a.kt)("p",null,"You can view a live example of this setup in Angular ",(0,a.kt)("a",{parentName:"p",href:"https://stackblitz.com/edit/ionic-ng-menu-layout"},"here")," and in React ",(0,a.kt)("a",{parentName:"p",href:"https://stackblitz.com/edit/ionic-react-menu"},"here"),"."),(0,a.kt)("h2",{id:"split-pane-layout"},"Split Pane Layout"),(0,a.kt)("p",null,"A ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/split-pane"},"split pane")," layout has a more complex structure because it can combine the previous layouts. It allows for multiple views to be displayed when the viewport is above a specified breakpoint. If the device's screen size is below a certain size, the split pane view will be hidden."),(0,a.kt)("p",null,"By default, the split pane view will show when the screen is larger than ",(0,a.kt)("inlineCode",{parentName:"p"},"768px"),", or the ",(0,a.kt)("inlineCode",{parentName:"p"},"md")," breakpoint, but this can be customized to use different breakpoints by setting the ",(0,a.kt)("inlineCode",{parentName:"p"},"when")," property. Below is an example where the split pane contains a menu that is visible for ",(0,a.kt)("inlineCode",{parentName:"p"},"sm")," screens and up, or when the viewport is larger than ",(0,a.kt)("inlineCode",{parentName:"p"},"576px"),". By resizing the browser horizontally so that the app is smaller than this, the split pane view will disappear."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<ion-app>\n  <ion-split-pane when="sm" content-id="main-content">\n    <ion-menu content-id="main-content">\n      <ion-header>\n        <ion-toolbar color="primary">\n          <ion-title>Menu</ion-title>\n        </ion-toolbar>\n      </ion-header>\n\n      <ion-content>\n        <ion-list>\n          <ion-list-header> Navigate </ion-list-header>\n          <ion-menu-toggle auto-hide="false">\n            <ion-item button>\n              <ion-icon slot="start" name="home"></ion-icon>\n              <ion-label> Home </ion-label>\n            </ion-item>\n          </ion-menu-toggle>\n        </ion-list>\n      </ion-content>\n    </ion-menu>\n\n    <div class="ion-page" id="main-content">\n      <ion-header>\n        <ion-toolbar>\n          <ion-buttons slot="start">\n            <ion-menu-toggle>\n              <ion-button>\n                <ion-icon slot="icon-only" name="menu"></ion-icon>\n              </ion-button>\n            </ion-menu-toggle>\n          </ion-buttons>\n          <ion-title>Header</ion-title>\n        </ion-toolbar>\n      </ion-header>\n      <ion-content class="ion-padding">\n        <h1>Main Content</h1>\n      </ion-content>\n    </div>\n  </ion-split-pane>\n</ion-app>\n')),(0,a.kt)("p",null,"It's important to note that the element with the ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," matching the ",(0,a.kt)("inlineCode",{parentName:"p"},"content-id")," specified by the split pane will be the main content that is always visible. This can be any element, including an ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/nav"},"ion-nav"),", ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/router-outlet"},"ion-router-outlet"),", or an ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/tabs"},"ion-tabs"),"."),(0,a.kt)("h3",{id:"live-examples-3"},"Live examples"),(0,a.kt)("p",null,"You can view a live example of this setup in Angular ",(0,a.kt)("a",{parentName:"p",href:"https://stackblitz.com/edit/ionic-ng-split-pane"},"here")," and in React ",(0,a.kt)("a",{parentName:"p",href:"https://stackblitz.com/edit/ionic-react-split-pane"},"here"),"."))}d.isMDXComponent=!0}}]);