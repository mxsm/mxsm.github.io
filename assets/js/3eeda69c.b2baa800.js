"use strict";(self.webpackChunkmxsm_website=self.webpackChunkmxsm_website||[]).push([[68711],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var o=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},r=Object.keys(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=o.createContext({}),p=function(e){var t=o.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(a),d=n,m=u["".concat(l,".").concat(d)]||u[d]||h[d]||r;return a?o.createElement(m,i(i({ref:t},c),{},{components:a})):o.createElement(m,i({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,i=new Array(r);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var p=2;p<r;p++)i[p]=a[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,a)}u.displayName="MDXCreateElement"},88077:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var o=a(87462),n=(a(67294),a(3905));const r={sidebar_label:"Saving Photos"},i="Saving Photos to the Filesystem",s={unversionedId:"angular/your-first-app/saving-photos",id:"angular/your-first-app/saving-photos",isDocsHomePage:!1,title:"Saving Photos to the Filesystem",description:"We\u2019re now able to take multiple photos and display them in a photo gallery on the second tab of our app. These photos, however, are not currently being stored permanently, so when the app is closed, they will be deleted.",source:"@site/docs/angular/your-first-app/3-saving-photos.md",sourceDirName:"angular/your-first-app",slug:"/angular/your-first-app/saving-photos",permalink:"/docs/angular/your-first-app/saving-photos",editUrl:"https://github.com/ionic-team/ionic-docs/edit/main/docs/angular/your-first-app/3-saving-photos.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"Saving Photos"},sidebar:"docs",previous:{title:"Taking Photos",permalink:"/docs/angular/your-first-app/taking-photos"},next:{title:"Loading Photos",permalink:"/docs/angular/your-first-app/loading-photos"}},l=[{value:"Filesystem API",id:"filesystem-api",children:[],level:2}],p={toc:l};function c(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,o.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"saving-photos-to-the-filesystem"},"Saving Photos to the Filesystem"),(0,n.kt)("p",null,"We\u2019re now able to take multiple photos and display them in a photo gallery on the second tab of our app. These photos, however, are not currently being stored permanently, so when the app is closed, they will be deleted."),(0,n.kt)("h2",{id:"filesystem-api"},"Filesystem API"),(0,n.kt)("p",null,"Fortunately, saving them to the filesystem only takes a few steps. Begin by creating a new class method, ",(0,n.kt)("inlineCode",{parentName:"p"},"savePicture()"),", in the ",(0,n.kt)("inlineCode",{parentName:"p"},"PhotoService")," class (",(0,n.kt)("inlineCode",{parentName:"p"},"src/app/services/photo.service.ts"),"). We pass in the ",(0,n.kt)("inlineCode",{parentName:"p"},"photo")," object, which represents the newly captured device photo:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},"private async savePicture(photo: Photo) { }\n")),(0,n.kt)("p",null,"We can use this new method immediately in ",(0,n.kt)("inlineCode",{parentName:"p"},"addNewToGallery()"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},"public async addNewToGallery() {\n  // Take a photo\n  const capturedPhoto = await Camera.getPhoto({\n    resultType: CameraResultType.Uri, // file-based data; provides best performance\n    source: CameraSource.Camera, // automatically take a new photo with the camera\n    quality: 100 // highest quality (0 to 100)\n  });\n\n  // Save the picture and add it to photo collection\n  const savedImageFile = await this.savePicture(capturedPhoto);\n  this.photos.unshift(savedImageFile);\n}\n")),(0,n.kt)("p",null,"We\u2019ll use the Capacitor ",(0,n.kt)("a",{parentName:"p",href:"https://capacitorjs.com/docs/apis/filesystem"},"Filesystem API")," to save the photo to the filesystem. To start, convert the photo to base64 format, then feed the data to the Filesystem\u2019s ",(0,n.kt)("inlineCode",{parentName:"p"},"writeFile")," function. As you\u2019ll recall, we display each photo on the screen by setting each image\u2019s source path (",(0,n.kt)("inlineCode",{parentName:"p"},"src")," attribute) in ",(0,n.kt)("inlineCode",{parentName:"p"},"tab2.page.html")," to the webviewPath property. So, set it then return the new Photo object."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},"private async savePicture(photo: Photo) {\n  // Convert photo to base64 format, required by Filesystem API to save\n  const base64Data = await this.readAsBase64(photo);\n\n  // Write the file to the data directory\n  const fileName = new Date().getTime() + '.jpeg';\n  const savedFile = await Filesystem.writeFile({\n    path: fileName,\n    data: base64Data,\n    directory: Directory.Data\n  });\n\n  // Use webPath to display the new image instead of base64 since it's\n  // already loaded into memory\n  return {\n    filepath: fileName,\n    webviewPath: photo.webPath\n  };\n}\n")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"readAsBase64()")," is a helper function we\u2019ll define next. It's useful to organize via a separate method since it requires a small amount of platform-specific (web vs. mobile) logic - more on that in a bit. For now, implement the logic for running on the web:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},"private async readAsBase64(photo: Photo) {\n  // Fetch the photo, read as a blob, then convert to base64 format\n  const response = await fetch(photo.webPath!);\n  const blob = await response.blob();\n\n  return await this.convertBlobToBase64(blob) as string;\n}\n\nprivate convertBlobToBase64 = (blob: Blob) => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.onerror = reject;\n  reader.onload = () => {\n      resolve(reader.result);\n  };\n  reader.readAsDataURL(blob);\n});\n")),(0,n.kt)("p",null,"Obtaining the camera photo as base64 format on the web appears to be a bit trickier than on mobile. In reality, we\u2019re just using built-in web APIs: ",(0,n.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"},"fetch()")," as a neat way to read the file into blob format, then FileReader\u2019s ",(0,n.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL"},"readAsDataURL()")," to convert the photo blob to base64."),(0,n.kt)("p",null,"There we go! Each time a new photo is taken, it\u2019s now automatically saved to the filesystem."))}c.isMDXComponent=!0}}]);