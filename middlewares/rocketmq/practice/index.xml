<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>蚂蚁背大象 – Apache RocketMQ 应用</title><link>/middlewares/rocketmq/practice/</link><description>Recent content in Apache RocketMQ 应用 on 蚂蚁背大象</description><generator>Hugo -- gohugo.io</generator><atom:link href="/middlewares/rocketmq/practice/index.xml" rel="self" type="application/rss+xml"/><item><title>Middlewares: 当SLF4J遇上RocketMQ</title><link>/middlewares/rocketmq/practice/rocketmq-slf4j-logging/</link><pubDate>Fri, 31 Dec 2021 00:00:00 +0000</pubDate><guid>/middlewares/rocketmq/practice/rocketmq-slf4j-logging/</guid><description>
&lt;blockquote>
&lt;p>RocketMQ版本: 4.9.2&lt;/p>
&lt;p>SpringBoot版本：2.6.2&lt;/p>
&lt;p>日志工具： logback&lt;/p>
&lt;/blockquote>
&lt;p>在平时Java项目的开发中，日志是一个很长见来纪录项目运行过程中的一些关键节点以及业务数据的搜集的一种方式。SLF4J在Java的日志中又有着举足轻重的地位。绝大部分的项目中都有用到。只是可能实现的方式不一样：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/rocketmq/%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86.png" alt="日志收集">&lt;/p>
&lt;p>从上图可以看出来，在日志的实现中列举了一些常见的。&lt;strong>&lt;code>logback&lt;/code>&lt;/strong> &lt;strong>&lt;code>log4j&lt;/code>&lt;/strong> 是我们比较常见也常用的。然后存储上我们基本上都是把日志输出到应用所在的本地文件上进行保存。&lt;/p>
&lt;blockquote>
&lt;p>上图的日志存储，Socket和MQ严格意义上说起来不算是日志存储，是一个日志转存的方式。最终日志落地就是落地到 &lt;strong>&lt;code>ES、文件、数据库(非ES)&lt;/code>&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>这里我们着重讲一下日志对接MQ,让你的项目高大上起来。不要只会把日志数据放在文件了。&lt;/p>
&lt;h3 id="1-环境准备">1. 环境准备&lt;/h3>
&lt;h4 id="11-rocketmq的环境搭建">1.1 RocketMQ的环境搭建&lt;/h4>
&lt;p>MQ的环境搭建建议直接使用Docker搭建，快速方便有省心，后续的使用也更加的方便。搭建的教程参照 &lt;a href="https://blog.ljbmxsm.com/middlewares/rocketmq/rocketmq-docker/">《RocketMQ Docker部署》&lt;/a>。&lt;/p>
&lt;h4 id="12-开发环境搭建">1.2 开发环境搭建&lt;/h4>
&lt;p>这里我们使用的是SpringBoot的web项目来进行实现的。这里推荐两个Spring项目初始化器的网站&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://start.spring.io/">https://start.spring.io/&lt;/a>&lt;/p>
&lt;p>Spring官网的一个脚手架，上面可以用最新的相关Spring Boot的项目。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://start.aliyun.com/bootstrap.html">https://start.aliyun.com/bootstrap.html&lt;/a>&lt;/p>
&lt;p>阿里的一个脚手架网站，这个Spring Boot版本相对比较落后。没有更新到最新的。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>项目生成了接下来就是导入项目开发&lt;/p>
&lt;h3 id="2-日志接入rocketmq">2. 日志接入RocketMQ&lt;/h3>
&lt;h4 id="21-pom文件导入rockermq-loggerappender">2.1 pom文件导入RockerMQ LoggerAppender&lt;/h4>
&lt;p>将在上面的脚手架网站生成的项目导入IDEA，然后在pom.xml文件中增加&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#204a87;font-weight:bold">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;groupId&amp;gt;&lt;/span>org.apache.rocketmq&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;artifactId&amp;gt;&lt;/span>rocketmq-logappender&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;version&amp;gt;&lt;/span>4.9.2&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/rocketmq/%E5%AF%BC%E5%85%A5logappender.png" alt="">&lt;/p>
&lt;h4 id="22-logback配置文件增加appender">2.2 logback配置文件增加Appender&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#8f5902;font-style:italic">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;configuration&lt;/span> &lt;span style="color:#c4a000">debug=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;false&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;gt;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">&amp;lt;!--
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> Base logback configuration provided for compatibility with Spring Boot 1.1
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> --&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;include&lt;/span> &lt;span style="color:#c4a000">resource=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;org/springframework/boot/logging/logback/defaults.xml&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">/&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;include&lt;/span> &lt;span style="color:#c4a000">resource=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;org/springframework/boot/logging/logback/console-appender.xml&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">/&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;appender&lt;/span> &lt;span style="color:#c4a000">name=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;rocketMQAppender&amp;#34;&lt;/span> &lt;span style="color:#c4a000">class=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;org.apache.rocketmq.logappender.logback.RocketmqLogbackAppender&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;tag&amp;gt;&lt;/span>mxsm-log&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/tag&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;topic&amp;gt;&lt;/span>mxsm&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/topic&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;producerGroup&amp;gt;&lt;/span>mxsm&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/producerGroup&amp;gt;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">&amp;lt;!--这里地址是我本地Docker容器部署的RockerMQ地址--&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;nameServerAddress&amp;gt;&lt;/span>192.168.43.128:9876&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/nameServerAddress&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;layout&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;pattern&amp;gt;&lt;/span>%date %p %t - %m%n&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/pattern&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/layout&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/appender&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;appender&lt;/span> &lt;span style="color:#c4a000">name=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;rocketMQAsyncAppender&amp;#34;&lt;/span> &lt;span style="color:#c4a000">class=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;ch.qos.logback.classic.AsyncAppender&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;queueSize&amp;gt;&lt;/span>1024&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/queueSize&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;discardingThreshold&amp;gt;&lt;/span>80&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/discardingThreshold&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;maxFlushTime&amp;gt;&lt;/span>2000&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/maxFlushTime&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;neverBlock&amp;gt;&lt;/span>true&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/neverBlock&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;appender-ref&lt;/span> &lt;span style="color:#c4a000">ref=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;rocketMQAppender&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">/&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/appender&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;logger&lt;/span> &lt;span style="color:#c4a000">name=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;rocketMQAsyncLogger&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;appender-ref&lt;/span> &lt;span style="color:#c4a000">ref=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;rocketMQAsyncAppender&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">/&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/logger&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;logger&lt;/span> &lt;span style="color:#c4a000">name=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;rocketMQLogger&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;appender-ref&lt;/span> &lt;span style="color:#c4a000">ref=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;rocketMQAppender&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">/&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/logger&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;root&lt;/span> &lt;span style="color:#c4a000">level=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;INFO&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;appender-ref&lt;/span> &lt;span style="color:#c4a000">ref=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;CONSOLE&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">/&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/root&amp;gt;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/configuration&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>为了IDAE启动打印和SpringBoot原有的保持一致，我这里应用了Spring原有的。&lt;/p>
&lt;/blockquote>
&lt;p>增加了两个logger: &lt;strong>&lt;code>rocketMQAsyncLogger&lt;/code>&lt;/strong> 和 &lt;strong>&lt;code>rocketMQLogger&lt;/code>&lt;/strong> 。&lt;/p>
&lt;h4 id="23-测试代码">2.3 测试代码&lt;/h4>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/rocketmq/rockermqappender%E6%B5%8B%E8%AF%95%E4%BB%A3%E7%A0%81.png" alt="">&lt;/p>
&lt;p>运行项目然去RockerMQ的消息查询web控制台查看：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/rocketmq/image-20211231120226707.png" alt="image-20211231120226707">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/mxsm/picture/main/rocketmq/image-20211231120246443.png" alt="image-20211231120246443">&lt;/p>
&lt;p>从查询的数据可以看出来已经将日志发送到了RocketMQ。&lt;/p>
&lt;h3 id="3-总结">3. 总结&lt;/h3>
&lt;p>上面的例子是一个简单的如何使用将RocketMQ和项目中的日志进行对接的一个小的例子。相对于将对接MQ和日志存在本地文件有以下几个好处：&lt;/p>
&lt;ul>
&lt;li>降低了项目服务的本地磁盘的IO,同时也减少了本地磁盘的使用。(如果是本地文件也可以使用定时任务进行清理，压测环境磁盘被日志撑爆过)&lt;/li>
&lt;li>可以通过一个消费服务或者消费集群服务来对MQ的消息进行处理，而文件就需要对数据进行处理就需要在每个应用服务上再部署一个文件处理服务来对文件进行处理。&lt;/li>
&lt;/ul>
&lt;p>参考文档：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://rocketmq.apache.org/docs/logappender-example/">https://rocketmq.apache.org/docs/logappender-example/&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>