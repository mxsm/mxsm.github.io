"use strict";(self.webpackChunkmxsm_website=self.webpackChunkmxsm_website||[]).push([[41842],{3905:(n,e,t)=>{t.d(e,{Zo:()=>s,kt:()=>d});var o=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function l(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function r(n,e){if(null==n)return{};var t,o,a=function(n,e){if(null==n)return{};var t,o,a={},i=Object.keys(n);for(o=0;o<i.length;o++)t=i[o],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(o=0;o<i.length;o++)t=i[o],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var m=o.createContext({}),u=function(n){var e=o.useContext(m),t=e;return n&&(t="function"==typeof n?n(e):l(l({},e),n)),t},s=function(n){var e=u(n.components);return o.createElement(m.Provider,{value:e},n.children)},b={inlineCode:"code",wrapper:function(n){var e=n.children;return o.createElement(o.Fragment,{},e)}},g=o.forwardRef((function(n,e){var t=n.components,a=n.mdxType,i=n.originalType,m=n.parentName,s=r(n,["components","mdxType","originalType","parentName"]),g=u(t),d=a,c=g["".concat(m,".").concat(d)]||g[d]||b[d]||i;return t?o.createElement(c,l(l({ref:e},s),{},{components:t})):o.createElement(c,l({ref:e},s))}));function d(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var i=t.length,l=new Array(i);l[0]=g;var r={};for(var m in e)hasOwnProperty.call(e,m)&&(r[m]=e[m]);r.originalType=n,r.mdxType="string"==typeof n?n:a,l[1]=r;for(var u=2;u<i;u++)l[u]=t[u];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}g.displayName="MDXCreateElement"},58215:(n,e,t)=>{t.d(e,{Z:()=>a});var o=t(67294);const a=function(n){let{children:e,hidden:t,className:a}=n;return o.createElement("div",{role:"tabpanel",hidden:t,className:a},e)}},26396:(n,e,t)=>{t.d(e,{Z:()=>g});var o=t(87462),a=t(67294),i=t(72389),l=t(79443);const r=function(){const n=(0,a.useContext)(l.Z);if(null==n)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return n};var m=t(89521),u=t(86010);const s="tabItem_vU9c";function b(n){var e,t;const{lazy:o,block:i,defaultValue:l,values:b,groupId:g,className:d}=n,c=a.Children.map(n.children,(n=>{if((0,a.isValidElement)(n)&&void 0!==n.props.value)return n;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof n.type?n.type:n.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),p=b??c.map((n=>{let{props:{value:e,label:t}}=n;return{value:e,label:t}})),k=(0,m.lx)(p,((n,e)=>n.value===e.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((n=>n.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===l?l:l??(null==(e=c.find((n=>n.props.default)))?void 0:e.props.value)??(null==(t=c[0])?void 0:t.props.value);if(null!==h&&!p.some((n=>n.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${p.map((n=>n.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:I}=r(),[N,y]=(0,a.useState)(h),f=[],{blockElementScrollPositionUntilNextRender:S}=(0,m.o5)();if(null!=g){const n=v[g];null!=n&&n!==N&&p.some((e=>e.value===n))&&y(n)}const T=n=>{const e=n.currentTarget,t=f.indexOf(e),o=p[t].value;o!==N&&(S(e),y(o),null!=g&&I(g,o))},x=n=>{var e;let t=null;switch(n.key){case"ArrowRight":{const e=f.indexOf(n.currentTarget)+1;t=f[e]||f[0];break}case"ArrowLeft":{const e=f.indexOf(n.currentTarget)-1;t=f[e]||f[f.length-1];break}}null==(e=t)||e.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":i},d)},p.map((n=>{let{value:e,label:t}=n;return a.createElement("li",{role:"tab",tabIndex:N===e?0:-1,"aria-selected":N===e,className:(0,u.Z)("tabs__item",s,{"tabs__item--active":N===e}),key:e,ref:n=>f.push(n),onKeyDown:x,onFocus:T,onClick:T},t??e)}))),o?(0,a.cloneElement)(c.filter((n=>n.props.value===N))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},c.map(((n,e)=>(0,a.cloneElement)(n,{key:e,hidden:n.props.value!==N})))))}function g(n){const e=(0,i.Z)();return a.createElement(b,(0,o.Z)({key:String(e)},n))}},66569:(n,e,t)=>{t.r(e),t.d(e,{contentTitle:()=>m,default:()=>g,frontMatter:()=>r,metadata:()=>u,toc:()=>s});var o=t(87462),a=(t(67294),t(3905)),i=t(26396),l=t(58215);const r={sidebar_label:"ion-segment-button"},m="ion-segment-button",u={unversionedId:"api/segment-button",id:"version-v5/api/segment-button",isDocsHomePage:!1,title:"ion-segment-button",description:"Segment buttons are groups of related buttons inside of a Segment. They are displayed in a horizontal row. A segment button can be checked by default by setting the value of the segment to the value of the segment button. Only one segment button can be selected at a time.",source:"@site/versioned_docs/version-v5/api/segment-button.md",sourceDirName:"api",slug:"/api/segment-button",permalink:"/cn/docs/v5/api/segment-button",editUrl:"https://crowdin.com/project/ionic-docs",tags:[],version:"v5",frontMatter:{sidebar_label:"ion-segment-button"},sidebar:"version-v5/api",previous:{title:"ion-segment",permalink:"/cn/docs/v5/api/segment"},next:{title:"ion-select",permalink:"/cn/docs/v5/api/select"}},s=[{value:"Usage",id:"usage",children:[],level:2},{value:"Properties",id:"properties",children:[{value:"disabled",id:"disabled",children:[],level:3},{value:"layout",id:"layout",children:[],level:3},{value:"mode",id:"mode",children:[],level:3},{value:"type",id:"type",children:[],level:3},{value:"value",id:"value",children:[],level:3}],level:2},{value:"CSS Shadow Parts",id:"css-shadow-parts",children:[],level:2},{value:"CSS Custom Properties",id:"css-custom-properties",children:[],level:2}],b={toc:s};function g(n){let{components:e,...t}=n;return(0,a.kt)("wrapper",(0,o.Z)({},b,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ion-segment-button"},"ion-segment-button"),(0,a.kt)("p",null,"Segment buttons are groups of related buttons inside of a ",(0,a.kt)("a",{parentName:"p",href:"/cn/docs/v5/api/segment"},"Segment"),". They are displayed in a horizontal row. A segment button can be checked by default by setting the ",(0,a.kt)("inlineCode",{parentName:"p"},"value")," of the segment to the ",(0,a.kt)("inlineCode",{parentName:"p"},"value")," of the segment button. Only one segment button can be selected at a time."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)(i.Z,{groupId:"framework",defaultValue:"angular",values:[{value:"angular",label:"Angular"},{value:"javascript",label:"Javascript"},{value:"react",label:"React"},{value:"stencil",label:"Stencil"},{value:"vue",label:"Vue"}],mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"angular",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- Segment buttons with text and click listener --\x3e\n<ion-segment (ionChange)="segmentChanged($event)">\n  <ion-segment-button>\n    <ion-label>Friends</ion-label>\n  </ion-segment-button>\n  <ion-segment-button>\n    <ion-label>Enemies</ion-label>\n  </ion-segment-button>\n</ion-segment>\n\n\x3c!-- Segment buttons with the first checked and the last disabled --\x3e\n<ion-segment value="paid">\n  <ion-segment-button value="paid">\n    <ion-label>Paid</ion-label>\n  </ion-segment-button>\n  <ion-segment-button value="free">\n    <ion-label>Free</ion-label>\n  </ion-segment-button>\n  <ion-segment-button disabled value="top">\n    <ion-label>Top</ion-label>\n  </ion-segment-button>\n</ion-segment>\n\n\x3c!-- Segment buttons with values and icons --\x3e\n<ion-segment>\n  <ion-segment-button value="camera">\n    <ion-icon name="camera"></ion-icon>\n  </ion-segment-button>\n  <ion-segment-button value="bookmark">\n    <ion-icon name="bookmark"></ion-icon>\n  </ion-segment-button>\n</ion-segment>\n\n\x3c!-- Segment with a value that checks the last button --\x3e\n<ion-segment value="shared">\n  <ion-segment-button value="bookmarks">\n    <ion-label>Bookmarks</ion-label>\n  </ion-segment-button>\n  <ion-segment-button value="reading">\n    <ion-label>Reading List</ion-label>\n  </ion-segment-button>\n  <ion-segment-button value="shared">\n    <ion-label>Shared Links</ion-label>\n  </ion-segment-button>\n</ion-segment>\n\n\x3c!-- Label only --\x3e\n<ion-segment value="1">\n  <ion-segment-button value="1">\n    <ion-label>Item One</ion-label>\n  </ion-segment-button>\n  <ion-segment-button value="2">\n    <ion-label>Item Two</ion-label>\n  </ion-segment-button>\n  <ion-segment-button value="3">\n    <ion-label>Item Three</ion-label>\n  </ion-segment-button>\n</ion-segment>\n\n\x3c!-- Icon only --\x3e\n<ion-segment value="heart">\n  <ion-segment-button value="call">\n    <ion-icon name="call"></ion-icon>\n  </ion-segment-button>\n  <ion-segment-button value="heart">\n    <ion-icon name="heart"></ion-icon>\n  </ion-segment-button>\n  <ion-segment-button value="pin">\n    <ion-icon name="pin"></ion-icon>\n  </ion-segment-button>\n</ion-segment>\n\n\x3c!-- Icon top --\x3e\n<ion-segment value="2">\n  <ion-segment-button value="1">\n    <ion-label>Item One</ion-label>\n    <ion-icon name="call"></ion-icon>\n  </ion-segment-button>\n  <ion-segment-button value="2">\n    <ion-label>Item Two</ion-label>\n    <ion-icon name="heart"></ion-icon>\n  </ion-segment-button>\n  <ion-segment-button value="3">\n    <ion-label>Item Three</ion-label>\n    <ion-icon name="pin"></ion-icon>\n  </ion-segment-button>\n</ion-segment>\n\n\x3c!-- Icon bottom --\x3e\n<ion-segment value="1">\n  <ion-segment-button value="1" layout="icon-bottom">\n    <ion-icon name="call"></ion-icon>\n    <ion-label>Item One</ion-label>\n  </ion-segment-button>\n  <ion-segment-button value="2" layout="icon-bottom">\n    <ion-icon name="heart"></ion-icon>\n    <ion-label>Item Two</ion-label>\n  </ion-segment-button>\n  <ion-segment-button value="3" layout="icon-bottom">\n    <ion-icon name="pin"></ion-icon>\n    <ion-label>Item Three</ion-label>\n  </ion-segment-button>\n</ion-segment>\n\n\x3c!-- Icon start --\x3e\n<ion-segment value="1">\n  <ion-segment-button value="1" layout="icon-start">\n    <ion-label>Item One</ion-label>\n    <ion-icon name="call"></ion-icon>\n  </ion-segment-button>\n  <ion-segment-button value="2" layout="icon-start">\n    <ion-label>Item Two</ion-label>\n    <ion-icon name="heart"></ion-icon>\n  </ion-segment-button>\n  <ion-segment-button value="3" layout="icon-start">\n    <ion-label>Item Three</ion-label>\n    <ion-icon name="pin"></ion-icon>\n  </ion-segment-button>\n</ion-segment>\n\n\x3c!-- Icon end --\x3e\n<ion-segment value="1">\n  <ion-segment-button value="1" layout="icon-end">\n    <ion-icon name="call"></ion-icon>\n    <ion-label>Item One</ion-label>\n  </ion-segment-button>\n  <ion-segment-button value="2" disabled layout="icon-end">\n    <ion-icon name="heart"></ion-icon>\n    <ion-label>Item Two</ion-label>\n  </ion-segment-button>\n  <ion-segment-button value="3" layout="icon-end">\n    <ion-icon name="pin"></ion-icon>\n    <ion-label>Item Three</ion-label>\n  </ion-segment-button>\n</ion-segment>\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Component } from '@angular/core';\n\n@Component({\n  selector: 'segment-button-example',\n  templateUrl: 'segment-button-example.html',\n  styleUrls: ['./segment-button-example.css'],\n})\nexport class SegmentButtonExample {\n  segmentChanged(ev: any) {\n    console.log('Segment changed', ev);\n  }\n}\n"))),(0,a.kt)(l.Z,{value:"javascript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- Segment buttons with text --\x3e\n<ion-segment>\n  <ion-segment-button>\n    <ion-label>Friends</ion-label>\n  </ion-segment-button>\n  <ion-segment-button>\n    <ion-label>Enemies</ion-label>\n  </ion-segment-button>\n</ion-segment>\n\n\x3c!-- Segment buttons with the first checked and the last disabled --\x3e\n<ion-segment value="paid">\n  <ion-segment-button value="paid">\n    <ion-label>Paid</ion-label>\n  </ion-segment-button>\n  <ion-segment-button value="free">\n    <ion-label>Free</ion-label>\n  </ion-segment-button>\n  <ion-segment-button disabled value="top">\n    <ion-label>Top</ion-label>\n  </ion-segment-button>\n</ion-segment>\n\n\x3c!-- Segment buttons with values and icons --\x3e\n<ion-segment>\n  <ion-segment-button value="camera">\n    <ion-icon name="camera"></ion-icon>\n  </ion-segment-button>\n  <ion-segment-button value="bookmark">\n    <ion-icon name="bookmark"></ion-icon>\n  </ion-segment-button>\n</ion-segment>\n\n\x3c!-- Segment with a value that checks the last button --\x3e\n<ion-segment value="shared">\n  <ion-segment-button value="bookmarks">\n    <ion-label>Bookmarks</ion-label>\n  </ion-segment-button>\n  <ion-segment-button value="reading">\n    <ion-label>Reading List</ion-label>\n  </ion-segment-button>\n  <ion-segment-button value="shared">\n    <ion-label>Shared Links</ion-label>\n  </ion-segment-button>\n</ion-segment>\n\n\x3c!-- Label only --\x3e\n<ion-segment value="1">\n  <ion-segment-button value="1">\n    <ion-label>Item One</ion-label>\n  </ion-segment-button>\n  <ion-segment-button value="2">\n    <ion-label>Item Two</ion-label>\n  </ion-segment-button>\n  <ion-segment-button value="3">\n    <ion-label>Item Three</ion-label>\n  </ion-segment-button>\n</ion-segment>\n\n\x3c!-- Icon only --\x3e\n<ion-segment value="heart">\n  <ion-segment-button value="call">\n    <ion-icon name="call"></ion-icon>\n  </ion-segment-button>\n  <ion-segment-button value="heart">\n    <ion-icon name="heart"></ion-icon>\n  </ion-segment-button>\n  <ion-segment-button value="pin">\n    <ion-icon name="pin"></ion-icon>\n  </ion-segment-button>\n</ion-segment>\n\n\x3c!-- Icon top --\x3e\n<ion-segment value="2">\n  <ion-segment-button value="1">\n    <ion-label>Item One</ion-label>\n    <ion-icon name="call"></ion-icon>\n  </ion-segment-button>\n  <ion-segment-button value="2">\n    <ion-label>Item Two</ion-label>\n    <ion-icon name="heart"></ion-icon>\n  </ion-segment-button>\n  <ion-segment-button value="3">\n    <ion-label>Item Three</ion-label>\n    <ion-icon name="pin"></ion-icon>\n  </ion-segment-button>\n</ion-segment>\n\n\x3c!-- Icon bottom --\x3e\n<ion-segment value="1">\n  <ion-segment-button value="1" layout="icon-bottom">\n    <ion-icon name="call"></ion-icon>\n    <ion-label>Item One</ion-label>\n  </ion-segment-button>\n  <ion-segment-button value="2" layout="icon-bottom">\n    <ion-icon name="heart"></ion-icon>\n    <ion-label>Item Two</ion-label>\n  </ion-segment-button>\n  <ion-segment-button value="3" layout="icon-bottom">\n    <ion-icon name="pin"></ion-icon>\n    <ion-label>Item Three</ion-label>\n  </ion-segment-button>\n</ion-segment>\n\n\x3c!-- Icon start --\x3e\n<ion-segment value="1">\n  <ion-segment-button value="1" layout="icon-start">\n    <ion-label>Item One</ion-label>\n    <ion-icon name="call"></ion-icon>\n  </ion-segment-button>\n  <ion-segment-button value="2" layout="icon-start">\n    <ion-label>Item Two</ion-label>\n    <ion-icon name="heart"></ion-icon>\n  </ion-segment-button>\n  <ion-segment-button value="3" layout="icon-start">\n    <ion-label>Item Three</ion-label>\n    <ion-icon name="pin"></ion-icon>\n  </ion-segment-button>\n</ion-segment>\n\n\x3c!-- Icon end --\x3e\n<ion-segment value="1">\n  <ion-segment-button value="1" layout="icon-end">\n    <ion-icon name="call"></ion-icon>\n    <ion-label>Item One</ion-label>\n  </ion-segment-button>\n  <ion-segment-button value="2" disabled layout="icon-end">\n    <ion-icon name="heart"></ion-icon>\n    <ion-label>Item Two</ion-label>\n  </ion-segment-button>\n  <ion-segment-button value="3" layout="icon-end">\n    <ion-icon name="pin"></ion-icon>\n    <ion-label>Item Three</ion-label>\n  </ion-segment-button>\n</ion-segment>\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// Listen for ionChange on segment\nconst segment = document.querySelector('ion-segment');\nsegment.addEventListener('ionChange', (ev) => {\n  console.log('Segment changed', ev);\n});\n"))),(0,a.kt)(l.Z,{value:"react",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import React from \'react\';\nimport {\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonSegment,\n  IonSegmentButton,\n  IonLabel,\n  IonIcon,\n} from \'@ionic/react\';\nimport { call, camera, bookmark, heart, pin } from \'ionicons/icons\';\n\nexport const SegmentButtonExamples: React.FC = () => {\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>SegmentButton</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        {/*-- Segment buttons with text and click listener --*/}\n        <IonSegment onIonChange={(e) => console.log(`${e.detail.value} segment selected`)}>\n          <IonSegmentButton value="Friends">\n            <IonLabel>Friends</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value="Enemies">\n            <IonLabel>Enemies</IonLabel>\n          </IonSegmentButton>\n        </IonSegment>\n\n        {/*-- Segment buttons with the first checked and the last disabled --*/}\n        <IonSegment value="paid">\n          <IonSegmentButton value="paid">\n            <IonLabel>Paid</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value="free">\n            <IonLabel>Free</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton disabled value="top">\n            <IonLabel>Top</IonLabel>\n          </IonSegmentButton>\n        </IonSegment>\n\n        {/*-- Segment buttons with values and icons --*/}\n        <IonSegment>\n          <IonSegmentButton value="camera">\n            <IonIcon icon={camera} />\n          </IonSegmentButton>\n          <IonSegmentButton value="bookmark">\n            <IonIcon icon={bookmark} />\n          </IonSegmentButton>\n        </IonSegment>\n\n        {/*-- Segment with a value that checks the last button --*/}\n        <IonSegment value="shared">\n          <IonSegmentButton value="bookmarks">\n            <IonLabel>Bookmarks</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value="reading">\n            <IonLabel>Reading List</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value="shared">\n            <IonLabel>Shared Links</IonLabel>\n          </IonSegmentButton>\n        </IonSegment>\n\n        {/*-- Label only --*/}\n        <IonSegment value="1">\n          <IonSegmentButton value="1">\n            <IonLabel>Item One</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value="2">\n            <IonLabel>Item Two</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value="3">\n            <IonLabel>Item Three</IonLabel>\n          </IonSegmentButton>\n        </IonSegment>\n\n        {/*-- Icon only --*/}\n        <IonSegment value="heart">\n          <IonSegmentButton value="call">\n            <IonIcon icon={call} />\n          </IonSegmentButton>\n          <IonSegmentButton value="heart">\n            <IonIcon icon={heart} />\n          </IonSegmentButton>\n          <IonSegmentButton value="pin">\n            <IonIcon icon={pin} />\n          </IonSegmentButton>\n        </IonSegment>\n\n        {/*-- Icon top --*/}\n        <IonSegment value="2">\n          <IonSegmentButton value="1">\n            <IonLabel>Item One</IonLabel>\n            <IonIcon icon={call} />\n          </IonSegmentButton>\n          <IonSegmentButton value="2">\n            <IonLabel>Item Two</IonLabel>\n            <IonIcon icon={heart} />\n          </IonSegmentButton>\n          <IonSegmentButton value="3">\n            <IonLabel>Item Three</IonLabel>\n            <IonIcon icon={pin} />\n          </IonSegmentButton>\n        </IonSegment>\n\n        {/*-- Icon bottom --*/}\n        <IonSegment value="1">\n          <IonSegmentButton value="1" layout="icon-bottom">\n            <IonIcon icon={call} />\n            <IonLabel>Item One</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value="2" layout="icon-bottom">\n            <IonIcon icon={heart} />\n            <IonLabel>Item Two</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value="3" layout="icon-bottom">\n            <IonIcon icon={pin} />\n            <IonLabel>Item Three</IonLabel>\n          </IonSegmentButton>\n        </IonSegment>\n\n        {/*-- Icon start --*/}\n        <IonSegment value="1">\n          <IonSegmentButton value="1" layout="icon-start">\n            <IonLabel>Item One</IonLabel>\n            <IonIcon icon={call} />\n          </IonSegmentButton>\n          <IonSegmentButton value="2" layout="icon-start">\n            <IonLabel>Item Two</IonLabel>\n            <IonIcon icon={heart} />\n          </IonSegmentButton>\n          <IonSegmentButton value="3" layout="icon-start">\n            <IonLabel>Item Three</IonLabel>\n            <IonIcon icon={pin} />\n          </IonSegmentButton>\n        </IonSegment>\n\n        {/*-- Icon end --*/}\n        <IonSegment value="1">\n          <IonSegmentButton value="1" layout="icon-end">\n            <IonIcon icon={call} />\n            <IonLabel>Item One</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value="2" disabled layout="icon-end">\n            <IonIcon icon={heart} />\n            <IonLabel>Item Two</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value="3" layout="icon-end">\n            <IonIcon icon={pin} />\n            <IonLabel>Item Three</IonLabel>\n          </IonSegmentButton>\n        </IonSegment>\n      </IonContent>\n    </IonPage>\n  );\n};\n'))),(0,a.kt)(l.Z,{value:"stencil",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import { Component, h } from \'@stencil/core\';\n\n@Component({\n  tag: \'segment-button-example\',\n  styleUrl: \'segment-button-example.css\',\n})\nexport class SegmentButtonExample {\n  segmentChanged(ev: any) {\n    console.log(\'Segment changed\', ev);\n  }\n\n  render() {\n    return [\n      // Segment buttons with text and click listener\n      <ion-segment onIonChange={(ev) => this.segmentChanged(ev)}>\n        <ion-segment-button>\n          <ion-label>Friends</ion-label>\n        </ion-segment-button>\n        <ion-segment-button>\n          <ion-label>Enemies</ion-label>\n        </ion-segment-button>\n      </ion-segment>,\n\n      // Segment buttons with the first checked and the last disabled\n      <ion-segment value="paid">\n        <ion-segment-button value="paid">\n          <ion-label>Paid</ion-label>\n        </ion-segment-button>\n        <ion-segment-button value="free">\n          <ion-label>Free</ion-label>\n        </ion-segment-button>\n        <ion-segment-button disabled value="top">\n          <ion-label>Top</ion-label>\n        </ion-segment-button>\n      </ion-segment>,\n\n      // Segment buttons with values and icons\n      <ion-segment>\n        <ion-segment-button value="camera">\n          <ion-icon name="camera"></ion-icon>\n        </ion-segment-button>\n        <ion-segment-button value="bookmark">\n          <ion-icon name="bookmark"></ion-icon>\n        </ion-segment-button>\n      </ion-segment>,\n\n      // Segment with a value that checks the last button\n      <ion-segment value="shared">\n        <ion-segment-button value="bookmarks">\n          <ion-label>Bookmarks</ion-label>\n        </ion-segment-button>\n        <ion-segment-button value="reading">\n          <ion-label>Reading List</ion-label>\n        </ion-segment-button>\n        <ion-segment-button value="shared">\n          <ion-label>Shared Links</ion-label>\n        </ion-segment-button>\n      </ion-segment>,\n\n      // Label only\n      <ion-segment value="1">\n        <ion-segment-button value="1">\n          <ion-label>Item One</ion-label>\n        </ion-segment-button>\n        <ion-segment-button value="2">\n          <ion-label>Item Two</ion-label>\n        </ion-segment-button>\n        <ion-segment-button value="3">\n          <ion-label>Item Three</ion-label>\n        </ion-segment-button>\n      </ion-segment>,\n\n      // Icon only\n      <ion-segment value="heart">\n        <ion-segment-button value="call">\n          <ion-icon name="call"></ion-icon>\n        </ion-segment-button>\n        <ion-segment-button value="heart">\n          <ion-icon name="heart"></ion-icon>\n        </ion-segment-button>\n        <ion-segment-button value="pin">\n          <ion-icon name="pin"></ion-icon>\n        </ion-segment-button>\n      </ion-segment>,\n\n      // Icon top\n      <ion-segment value="2">\n        <ion-segment-button value="1">\n          <ion-label>Item One</ion-label>\n          <ion-icon name="call"></ion-icon>\n        </ion-segment-button>\n        <ion-segment-button value="2">\n          <ion-label>Item Two</ion-label>\n          <ion-icon name="heart"></ion-icon>\n        </ion-segment-button>\n        <ion-segment-button value="3">\n          <ion-label>Item Three</ion-label>\n          <ion-icon name="pin"></ion-icon>\n        </ion-segment-button>\n      </ion-segment>,\n\n      // Icon bottom\n      <ion-segment value="1">\n        <ion-segment-button value="1" layout="icon-bottom">\n          <ion-icon name="call"></ion-icon>\n          <ion-label>Item One</ion-label>\n        </ion-segment-button>\n        <ion-segment-button value="2" layout="icon-bottom">\n          <ion-icon name="heart"></ion-icon>\n          <ion-label>Item Two</ion-label>\n        </ion-segment-button>\n        <ion-segment-button value="3" layout="icon-bottom">\n          <ion-icon name="pin"></ion-icon>\n          <ion-label>Item Three</ion-label>\n        </ion-segment-button>\n      </ion-segment>,\n\n      // Icon start\n      <ion-segment value="1">\n        <ion-segment-button value="1" layout="icon-start">\n          <ion-label>Item One</ion-label>\n          <ion-icon name="call"></ion-icon>\n        </ion-segment-button>\n        <ion-segment-button value="2" layout="icon-start">\n          <ion-label>Item Two</ion-label>\n          <ion-icon name="heart"></ion-icon>\n        </ion-segment-button>\n        <ion-segment-button value="3" layout="icon-start">\n          <ion-label>Item Three</ion-label>\n          <ion-icon name="pin"></ion-icon>\n        </ion-segment-button>\n      </ion-segment>,\n\n      // Icon end\n      <ion-segment value="1">\n        <ion-segment-button value="1" layout="icon-end">\n          <ion-icon name="call"></ion-icon>\n          <ion-label>Item One</ion-label>\n        </ion-segment-button>\n        <ion-segment-button value="2" disabled layout="icon-end">\n          <ion-icon name="heart"></ion-icon>\n          <ion-label>Item Two</ion-label>\n        </ion-segment-button>\n        <ion-segment-button value="3" layout="icon-end">\n          <ion-icon name="pin"></ion-icon>\n          <ion-label>Item Three</ion-label>\n        </ion-segment-button>\n      </ion-segment>,\n    ];\n  }\n}\n'))),(0,a.kt)(l.Z,{value:"vue",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<template>\n  \x3c!-- Segment buttons with text and click listener --\x3e\n  <ion-segment @ionChange="segmentChanged($event)">\n    <ion-segment-button>\n      <ion-label>Friends</ion-label>\n    </ion-segment-button>\n    <ion-segment-button>\n      <ion-label>Enemies</ion-label>\n    </ion-segment-button>\n  </ion-segment>\n\n  \x3c!-- Segment buttons with the first checked and the last disabled --\x3e\n  <ion-segment value="paid">\n    <ion-segment-button value="paid">\n      <ion-label>Paid</ion-label>\n    </ion-segment-button>\n    <ion-segment-button value="free">\n      <ion-label>Free</ion-label>\n    </ion-segment-button>\n    <ion-segment-button disabled value="top">\n      <ion-label>Top</ion-label>\n    </ion-segment-button>\n  </ion-segment>\n\n  \x3c!-- Segment buttons with values and icons --\x3e\n  <ion-segment>\n    <ion-segment-button value="camera">\n      <ion-icon :icon="camera"></ion-icon>\n    </ion-segment-button>\n    <ion-segment-button value="bookmark">\n      <ion-icon :icon="bookmark"></ion-icon>\n    </ion-segment-button>\n  </ion-segment>\n\n  \x3c!-- Segment with a value that checks the last button --\x3e\n  <ion-segment value="shared">\n    <ion-segment-button value="bookmarks">\n      <ion-label>Bookmarks</ion-label>\n    </ion-segment-button>\n    <ion-segment-button value="reading">\n      <ion-label>Reading List</ion-label>\n    </ion-segment-button>\n    <ion-segment-button value="shared">\n      <ion-label>Shared Links</ion-label>\n    </ion-segment-button>\n  </ion-segment>\n\n  \x3c!-- Label only --\x3e\n  <ion-segment value="1">\n    <ion-segment-button value="1">\n      <ion-label>Item One</ion-label>\n    </ion-segment-button>\n    <ion-segment-button value="2">\n      <ion-label>Item Two</ion-label>\n    </ion-segment-button>\n    <ion-segment-button value="3">\n      <ion-label>Item Three</ion-label>\n    </ion-segment-button>\n  </ion-segment>\n\n  \x3c!-- Icon only --\x3e\n  <ion-segment value="heart">\n    <ion-segment-button value="call">\n      <ion-icon :icon="call"></ion-icon>\n    </ion-segment-button>\n    <ion-segment-button value="heart">\n      <ion-icon :icon="heart"></ion-icon>\n    </ion-segment-button>\n    <ion-segment-button value="pin">\n      <ion-icon :icon="pin"></ion-icon>\n    </ion-segment-button>\n  </ion-segment>\n\n  \x3c!-- Icon top --\x3e\n  <ion-segment value="2">\n    <ion-segment-button value="1">\n      <ion-label>Item One</ion-label>\n      <ion-icon :icon="call"></ion-icon>\n    </ion-segment-button>\n    <ion-segment-button value="2">\n      <ion-label>Item Two</ion-label>\n      <ion-icon :icon="heart"></ion-icon>\n    </ion-segment-button>\n    <ion-segment-button value="3">\n      <ion-label>Item Three</ion-label>\n      <ion-icon :icon="pin"></ion-icon>\n    </ion-segment-button>\n  </ion-segment>\n\n  \x3c!-- Icon bottom --\x3e\n  <ion-segment value="1">\n    <ion-segment-button value="1" layout="icon-bottom">\n      <ion-icon :icon="call"></ion-icon>\n      <ion-label>Item One</ion-label>\n    </ion-segment-button>\n    <ion-segment-button value="2" layout="icon-bottom">\n      <ion-icon :icon="heart"></ion-icon>\n      <ion-label>Item Two</ion-label>\n    </ion-segment-button>\n    <ion-segment-button value="3" layout="icon-bottom">\n      <ion-icon :icon="pin"></ion-icon>\n      <ion-label>Item Three</ion-label>\n    </ion-segment-button>\n  </ion-segment>\n\n  \x3c!-- Icon start --\x3e\n  <ion-segment value="1">\n    <ion-segment-button value="1" layout="icon-start">\n      <ion-label>Item One</ion-label>\n      <ion-icon :icon="call"></ion-icon>\n    </ion-segment-button>\n    <ion-segment-button value="2" layout="icon-start">\n      <ion-label>Item Two</ion-label>\n      <ion-icon :icon="heart"></ion-icon>\n    </ion-segment-button>\n    <ion-segment-button value="3" layout="icon-start">\n      <ion-label>Item Three</ion-label>\n      <ion-icon :icon="pin"></ion-icon>\n    </ion-segment-button>\n  </ion-segment>\n\n  \x3c!-- Icon end --\x3e\n  <ion-segment value="1">\n    <ion-segment-button value="1" layout="icon-end">\n      <ion-icon :icon="call"></ion-icon>\n      <ion-label>Item One</ion-label>\n    </ion-segment-button>\n    <ion-segment-button value="2" disabled layout="icon-end">\n      <ion-icon :icon="heart"></ion-icon>\n      <ion-label>Item Two</ion-label>\n    </ion-segment-button>\n    <ion-segment-button value="3" layout="icon-end">\n      <ion-icon :icon="pin"></ion-icon>\n      <ion-label>Item Three</ion-label>\n    </ion-segment-button>\n  </ion-segment>\n</template>\n\n<script lang="ts">\n  import { IonIcon, IonLabel, IonSegment, IonSegmentButton } from \'@ionic/vue\';\n  import { bookmark, call, camera, heart, pin } from \'ionicons/icons\';\n  import { defineComponent } from \'vue\';\n\n  export default defineComponent({\n    components: { IonIcon, IonLabel, IonSegment, IonSegmentButtonr },\n    methods: {\n      segmentChanged(ev: CustomEvent) {\n        console.log(\'Segment changed\', ev);\n      }\n    }\n    setup() {\n      return {\n        bookmark,\n        call,\n        camera,\n        heart,\n        pin\n      }\n    }\n  });\n<\/script>\n')))),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"disabled"},"disabled"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null}),(0,a.kt)("th",{parentName:"tr",align:null}))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Description")),(0,a.kt)("td",{parentName:"tr",align:null},"If ",(0,a.kt)("inlineCode",{parentName:"td"},"true"),", the user cannot interact with the segment button.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Attribute")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"disabled"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Type")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Default")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"false"))))),(0,a.kt)("h3",{id:"layout"},"layout"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null}),(0,a.kt)("th",{parentName:"tr",align:null}))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Description")),(0,a.kt)("td",{parentName:"tr",align:null},"Set the layout of the text and icon in the segment.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Attribute")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"layout"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Type")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},'"icon-bottom" \\| "icon-end" \\| "icon-hide" \\| "icon-start" \\| "icon-top" \\| "label-hide" \\| undefined'))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Default")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"'icon-top'"))))),(0,a.kt)("h3",{id:"mode"},"mode"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null}),(0,a.kt)("th",{parentName:"tr",align:null}))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Description")),(0,a.kt)("td",{parentName:"tr",align:null},"The mode determines which platform styles to use.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Attribute")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"mode"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Type")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},'"ios" \\| "md"'))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Default")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,a.kt)("h3",{id:"type"},"type"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null}),(0,a.kt)("th",{parentName:"tr",align:null}))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Description")),(0,a.kt)("td",{parentName:"tr",align:null},"The type of the button.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Attribute")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"type"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Type")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},'"button" \\| "reset" \\| "submit"'))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Default")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"'button'"))))),(0,a.kt)("h3",{id:"value"},"value"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null}),(0,a.kt)("th",{parentName:"tr",align:null}))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Description")),(0,a.kt)("td",{parentName:"tr",align:null},"The value of the segment button.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Attribute")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"value"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Type")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"string"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Default")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"'ion-sb-' + (ids++)"))))),(0,a.kt)("h2",{id:"css-shadow-parts"},"CSS Shadow Parts"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"indicator")),(0,a.kt)("td",{parentName:"tr",align:null},"The indicator displayed on the checked segment button.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"indicator-background")),(0,a.kt)("td",{parentName:"tr",align:null},"The background element for the indicator displayed on the checked segment button.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"native")),(0,a.kt)("td",{parentName:"tr",align:null},"The native HTML button element that wraps all child elements.")))),(0,a.kt)("h2",{id:"css-custom-properties"},"CSS Custom Properties"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--background")),(0,a.kt)("td",{parentName:"tr",align:null},"Background of the segment button")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--background-checked")),(0,a.kt)("td",{parentName:"tr",align:null},"Background of the checked segment button")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--background-focused")),(0,a.kt)("td",{parentName:"tr",align:null},"Background of the segment button when focused with the tab key")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--background-focused-opacity")),(0,a.kt)("td",{parentName:"tr",align:null},"Opacity of the segment button background when focused with the tab key")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--background-hover")),(0,a.kt)("td",{parentName:"tr",align:null},"Background of the segment button on hover")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--background-hover-opacity")),(0,a.kt)("td",{parentName:"tr",align:null},"Opacity of the segment button background on hover")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--border-color")),(0,a.kt)("td",{parentName:"tr",align:null},"Color of the segment button border")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--border-radius")),(0,a.kt)("td",{parentName:"tr",align:null},"Radius of the segment button border")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--border-style")),(0,a.kt)("td",{parentName:"tr",align:null},"Style of the segment button border")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--border-width")),(0,a.kt)("td",{parentName:"tr",align:null},"Width of the segment button border")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--color")),(0,a.kt)("td",{parentName:"tr",align:null},"Color of the segment button")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--color-checked")),(0,a.kt)("td",{parentName:"tr",align:null},"Color of the checked segment button")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--color-focused")),(0,a.kt)("td",{parentName:"tr",align:null},"Color of the segment button when focused with the tab key")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--color-hover")),(0,a.kt)("td",{parentName:"tr",align:null},"Color of the segment button on hover")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--indicator-box-shadow")),(0,a.kt)("td",{parentName:"tr",align:null},"Box shadow on the indicator for the checked segment button")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--indicator-color")),(0,a.kt)("td",{parentName:"tr",align:null},"Color of the indicator for the checked segment button")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--indicator-height")),(0,a.kt)("td",{parentName:"tr",align:null},"Height of the indicator for the checked segment button")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--indicator-transform")),(0,a.kt)("td",{parentName:"tr",align:null},"Transform of the indicator for the checked segment button")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--indicator-transition")),(0,a.kt)("td",{parentName:"tr",align:null},"Transition of the indicator for the checked segment button")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--margin-bottom")),(0,a.kt)("td",{parentName:"tr",align:null},"Bottom margin of the segment button")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--margin-end")),(0,a.kt)("td",{parentName:"tr",align:null},"Right margin if direction is left-to-right, and left margin if direction is right-to-left of the segment button")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--margin-start")),(0,a.kt)("td",{parentName:"tr",align:null},"Left margin if direction is left-to-right, and right margin if direction is right-to-left of the segment button")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--margin-top")),(0,a.kt)("td",{parentName:"tr",align:null},"Top margin of the segment button")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--padding-bottom")),(0,a.kt)("td",{parentName:"tr",align:null},"Bottom padding of the segment button")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--padding-end")),(0,a.kt)("td",{parentName:"tr",align:null},"Right padding if direction is left-to-right, and left padding if direction is right-to-left of the segment button")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--padding-start")),(0,a.kt)("td",{parentName:"tr",align:null},"Left padding if direction is left-to-right, and right padding if direction is right-to-left of the segment button")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--padding-top")),(0,a.kt)("td",{parentName:"tr",align:null},"Top padding of the segment button")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"--transition")),(0,a.kt)("td",{parentName:"tr",align:null},"Transition of the segment button")))))}g.isMDXComponent=!0}}]);